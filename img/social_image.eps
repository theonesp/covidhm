%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: banner_on_blue_bg_13.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 1/17/2019
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 24412 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF
%85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AFA9AF85AFA9AF85AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AFA9AFAFFFA9AFAFFF85AF85AF85AF85AF85AF85AF85AF
%8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85AFA8AFA9AF84AF85
%A985AF85A985AF85A985AF85A985AF85AFA9FFA9AFA9FFA9FFA9AF85A985
%AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFAFAF
%A9FFA9AFA9AFA9AF85AF85AF85AF85AF85AF85AF85AFA9AFA9FFAFFD07FF
%AFAF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%AFA9AFA9AFA9AFA9AF85AFA9A984AF85A985AF85A985AF85A985AFA9AFA9
%FD09FFA9A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9AFAFAFA9AFA9AFA9AFA9AFA9AFA9AF85AF85AF85AF85AF85AF85AFA9AF
%AFFD0AFFAF85AF85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF
%A9AFA9AFA9AFA8AFA9AF84AF85A984A984A984A985A985AF85A985AF85AF
%A9FFAFFD08FFAF85AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF
%858585AF85A9858585AF85A984AF858585AF85AF848585AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AFAFAFA9FFAFAFA9AFA9AFA9AFA9AFA9AFA9AF85AF85A985AF85AF85AF
%A9AFA9FFAFFD08FFAF85AF85AF85AF85AF85AF85AF8585AF85A985AF85A9
%85AF85A92F5A5A5A2F852F842F5A5A5A2F852F7E2F5A5A2F5AAF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AFA9AFA9AFA9AFA9AFA9AFA9AFA9AF84AF85A984AF84A984A9848584A9
%85A985AFA9AFA9FD07FF85AF85A985AF85A985AF85A985AF85A9AF85AF85
%AF85AF85AF85AF8530FD045A8536855A2F855A5A84365A5A2F852F8585AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF84FFAFAFA9FFAFAFA9AFA9AFA9AFA9AFA9AFA9AF85AF85A984A9
%85852FAF85AF85AFAFFD07FF85AF85AF85AF85AF85AF85AF85AF85AF8585
%A985AF85A985AF85A985AF2F5A2F2F2F852F852F2F5A5A2F5A2F5A7E5A53
%2F84A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF855A2F85A9AFA9AFA9AFA8AFA9AF84AF85A984A984A984
%A984857E5A062F85AF85A985AFA9FFFFFFA9A9FFAF85A985AF85A985AF85
%A985AF85A985AFAF85AF85AF85AF85AF85AF85305A5A2F5A5A5A845A2FFD
%055A2F852F5A2F8585AF85AF85AF85AF85AF85AF85AF85AFA9AFA9AF85AF
%85AF85AF85AF85AFA9AFA9AF85AF2F2F2954A9FFAFAFA9AFA9AFA9AFA9AF
%A9AFA9AF85AF85A95A2F2F2F29AF85AFA9AFAFFFFFFFA9AF85FF85AF85AF
%A9AFA9AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF84FD05857E
%8585857EFD098584A985AF85A985AF85A985AF85A985AFA9AF85AF85AF85
%AF85A985AF85AFAFAF85AF85AF8530062F062929AFA9AFA9AFA9AF84AF85
%A984A984A984852F2F062F292F85AFA9A985AF85AF85AF85A9FFAFA9AF85
%AF85AF85AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9AF85AF85AF85AFA9AF85AFA9FFAFFF85AF85AF85AF2F2F2F300629077E
%AFAFA9AFA9AFA9AFA9AF85AF855A292F2F2F062F2FAF85AF85AF85AF85AF
%A9AF85FFA9AF85AF85AF85AFA9AF85AF85AF85AF8585AF85A985AF85A985
%AF85A985AF85A985AFA9AF85AF85A985AF85AF85AF85AF85AF85A985AF85
%A985AF85A985AF85AF85AF85A985AF85A985AFA9AFFFAFFFA985AF85A985
%30072F2F362906062984AFA8AF85A984A98485592F292F062F062F062F85
%A985AF85A985AF85A985AFFFA985AF85A985AF85A985AF85A985AF85A9AF
%85AF85AF85AF85AF85AF85FD0CFFAFFD04FFAFFFAFFFAFFD04FFAFFD04FF
%AFFD06FFAF85AF85AFA9AFA9AFAFFFAFFF85AF85AF85AFFD042F53542F2F
%062F29AFA9AFA9AFA985FD042F292F2F2F292F2FAF85AF85AF85AF85AFA9
%AFA9FFA9AF85AF85AF85AF85AFA9AF85AF85AF8585AF85A985AF85A985AF
%85A9A9FFA9FFA9FFA9FFA9FFA9FFA9FFAFFFA9AFA9AFA9FFA9FFA9FFA9FF
%A9FFAFFFA9FFAFFFA9FF85A985AFA9AF85AF85AFFFAF85A985AFA9AF8530
%292F062FA8592F3006280654A9A9845A2F2F292F062F292F292F062F85AF
%85AF85A985AFA9A985AFFFAFA9AF85A985AFA9AF85AF85A985AF85A9AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AFAFAF85AFA9AF85AF85AFA9AFA9
%AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9AFA9AF85AF85AFA9AF85
%AFA9AFA9AF85AF2F2F062F2F2959A92F5A2F290654A8FD052F29FD052F29
%2F29AF85AFA9AFA9AF85AF85AF85FF85AFA9AF85AFA9AF85AF85AF85AF85
%AF8585A985AF85A985AF85A985AFAFFFA9FFA9FFA9FFA9FFA9FFA9AFA9FF
%A9FFA9FFA9FFA9FFAFFFA9FFFFAFA9FFAFFFA9FFA9A985AF85A985AF85A9
%85AF85A985AFA9AF85AF852F062F06292F2F067E7E2F2F2F06842F2F062F
%292F072F292F062F062F85AF85AFA9AF85A985AF85A9FFAF85A985AF85A9
%85AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85FFAFFFFFFFAFFFAF
%FFAFFFAFFFAFFFAFFFAFFFAFFFAFFFFFFFAFFFAFFFA9FFAFFFAFFFAFAFA9
%AF85AFA9AF85AF85AF85AFA9AFA9AFA9AFA9AF2F2F2F5A292F2F5A282F53
%4D2F5A842F29FD0C2FAFA9AFA9AFA9AFA9AF85AF85FF85AFA9AF85AFA9AF
%85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85
%AF85AF85A985AF85A985AF85A985AF85A985AF85A985AF85AF85AF85A985
%AF85A9A9AFA9AF85AFA9AF85AF85A985AFA930062F292F2F2F062F2F2928
%2F2F85FD062F292F292F292F062FA9AF85A985AF85AFA9AF85AFFFAFA9A9
%85AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9
%AF85AF85AF85AFA9AFA9AFA9AF85AF85AF85AF85AF85AFFD042F59592F30
%062F2F2F065A7E3029FD052F062F302F292F2FAF85AF85AF85AF85AFA9FF
%A9FFA9AFA9AF85AF85AF85AFA9AF85AF85AF8585AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A99CA29CA29CA29CA29CA29CA29C
%A29CA27EAF85A985AF858584AFA9AFA8AF85A9848585A985AF85A9853007
%2F2F2959A82F5A0706065A2F84292F2F2F072F06064D5A292F062F85A985
%AF85A98585A9AFA9FFFFFF84A9848585AF85A985AF85A985AF85A9AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF9BB8B7B7B7BE
%BDBEBDBEBDC4BDBEB7B7B7BEA9AFA9AF85AF5A5A84AFA9AFA9AF855A5AAF
%85AF85AFA9AF2F2F062F2F2F28AF7E542F2F062F8430FD052FA95384362F
%292F2FAFA9AF85AF85AF7E5A7EFFAFFFA9AF85537EAF85AFA9AF85AF85AF
%85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AFA9FF85
%B7B2B7B7C4C4FFFFFFBEFFFFCBC4BEB7B7B2A985A985AF85842F5A2F85A9
%AF5929067EA9A985AFA9AF8530292F06292F2F0653A8292F300684FD042F
%067E7E532F30292F062F85AFA9AF85A9A9852F5A2F85A9A9532F068485AF
%A9A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AFBDB7B7B7BEC4BEC4C4BEFD04C4FD04B785AF85AF85AF7E
%5A5A5A2F5A292F282F59AFAFAFA9AF85AF2F2F2F5A2F2F06302F294C5A2F
%5A842F07302F535A5A30FD052F29AF85AFA9AFAFAFFD045A2F5A2F2F062F
%84AF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985A99CBE95BE95BE95BE95BE95BE95BE95BEA2A985
%AF85AF85842FA984302F2F062F065AA9AF85AF85AF852F062F062F2F2F06
%292F2F062F2F842F2F292F285A2F2F292F062F062F85AF85AF85AFA97E2F
%FFA82F2F2F0629068585AF85AF85A985AF85A985AFAF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AFA9AF85AF5A5A7EAF2F5A282F292F5AAF85AF85AFAFAF
%FD042F597E2F5A062F2F5A295A843029302F5AFD092FAFAFAF85AF85AF84
%FFAFAF2F5A292F062F84AF85AFA9AF85AF85AF85AF8585A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85AFA9AF85A985852F2F2F302F29062F2F8585AF85A985AF
%A930062F2F282F85FD042F062F2F85FD062F292F2F2F292F062FA9AF85A9
%85AFAFFF5A30FD042F0629298585A985AFA9AF85AF85A985AFAF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AFA9AF85AF85AFA9FF7E5A2F54282F7EFFA9AF85AF
%85AF85AF2F2F062F2F2F067E7E532F2F06297E3029FD092F292F2FAF85AF
%A9FFFFFFA9FF7E5A2F2F062F7EFF85AF85AF85AFAFAF85AF85AF8585AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AFA9A985AF85FFA9AF845A2F5A84AFA9FF85
%A985AF85A9A930072F0629063006285A5307360684292F2F2F072F292F06
%2F292F062FA9A9A9FFA9AF85FFFFAF5A5A2F5A84AFFFFF85AF85AF85AF85
%A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AFA9AF85FFFFAF
%608585AFFFFFAFAF85AF85AFA9AF2F2F2F5A302F062F302F2877535A8430
%29FD092F292F2FAFFFFFAFAF85AFAFFFFFAF858584FFFFAF85AFA9AFA9AF
%85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9855A
%85A9AFA9AFA9855AAFA9AF85AF85A98530292F062F2F2F06292F2F062F2F
%84292F2F2F292F2F2F292F292F062FFFAF85AFA9AFA9856085A9FFA9AF84
%8560A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AFAFAFA9AFA9AFA9AF85AF85AFAFAFA9AF85AFFD042F4C9529
%5A2F2F06362F5A842F06FD072F292F292F29AF85AFA9AFAFAF85AFA9AFA9
%AFA9AF85AFAFAF85AF85AF85AF85AF85AF8585A985AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85AF85AFA9AFA8855A8484A984A985AF85AFA9AF852F062F
%2F2F01954C2F2F2F062F2F84292F072F292F062F292F062F062F85AFA9AF
%85AFA9AFA9AFA9842F8585A984A985AF85AF85A985AF85A985AFAF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AFAFAFA9FFAFAF855A305A2F5A85AF85AF85
%AF85AFAFAF2F2F292F2F5A284D95772F5A062F842F29FD0B2F29AFAFAF85
%AFA9AFA9FF855A2F5A2F5A85AF85A985AFAFAF85AF85AF85AF8585A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85AF85A9A9AFA9AF5A302F5A5A5A2F5A5A858485
%84A985AF8530062F2F29062F2F284C5A2F302F852F2F292F292F292F292F
%062F062F85AF8585A8AFA9AF5A36365A5A5A30305AA9848584AF85AF85AF
%85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9AF84FFFFAFA9AF5A5A5A
%855A5A5A858585A9AF85AF85AF2F2F2F5A302F062F2F2F06532F5A7E2F29
%FD052F292F2F2F062F2FAF85AF85FFAFFFAFA95A5A5A85365A5A8584A9A9
%A985AFA9AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF858584A9
%AFFFA8AF845A305A848584AFA97E2FAF85AF8530072F06532F360629062F
%06282F84062F292F062F292F062F0629062FA9AF858584A9A9FFA9AF7E5A
%365A7EA984AFA87E2FAF85AF85A985AF85A9AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF84AF5A5AA9FFAFAFA9A9A9AFA9FF845A5A5AAFAF85AF30FD04
%2FA9535A2F2F062F305A7E2F29FD092F282F2FAF85FF85AF5A85A9FFA9AF
%A9A985AFA9FF847E5A5A85AF85AF85AF85AF8585AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A95A5A365A5AFFAFAF84AFAFA92F5A5A5A84AF85A9855A2F
%292F2F06597E532F2F062F2984072F292F062F292F062F282F062F85A985
%AF7E5A2F5A5AAFA9AF85A9A9A92F5A2F5A84A985AF85A985AF85A9AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85FFAFAF85AFA9FFA95A5A5A2F85AFFFA95A2F302F85
%FFFFA9AF85AF5A5A2F2F065A2F2F5A852F5A2F2F842F062F2F2F292F282F
%292F2F5A84AF85AFA9FFA95A305A3084A9FFA95A2F362F85AFFFA9AF85AF
%85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AFA9FFFFFF85A985AFFFAF84612F302F
%5A36302F2F2F6184AFFFAF85AF85A95A5A2F2F062F2F2906594C2F2F8429
%29062F0629062F062F2FA9A9AF85AF85AFA9AF845A2F5A2F3630302F2F2F
%8584AFAFAF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFAFFD05FFAFAFA9AF
%FFFF85855A5A305A2F5A5A8585FFFFAF85AFA9AFAFFFAF855A542F2F2F5A
%28292F5A842F062F292F292F2F2F5AAFAFFFFFAF85AF85AFFFFF85855A5A
%305B2F5A5A8585FFFFAFA9AF85AF85AF85AF8585A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985FD07
%FF85AF608584FFA9855A5A365A5A85A9FF848560A985AF85FFA9AF85855A
%5A292F062F2F282F842929062F292F065A5A8560AFFFFF85AF85A96085A9
%FFA885605A36616085A9FF858560AF85AF85AF85A985AFAF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9AFFD06FFAFAF85AF858584FFFFAF608585AFFFAF858560AF85AF85AFAF
%FFFFAF61855A5B30FD042F5A7E2F2F2F292F2F85608585FFAFAFA9AF85AF
%858B608585FFFFAF618560AFFFAF848585AFA9AF85AF85AF85AF8585AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985FD07FFA9AF85A985AF84855A85AFFFA8FFA9855A8584A985AFA9
%AF85AF6085A9AF60615A613630292F2984062F062F5A855A8584FF84855A
%8585AF85AF85A984855A85A8FFA9FFA8855A8584AFA9A985AF85A985AF85
%A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85FD07FFA9AF85AF85AFA9AFA9AF618585AF8585608B85AF
%A9AFAFAF85AF85856085A9FFA98561855A5B2F5A7E2F2F5A608561AFFFFF
%8585608585AF85AFAFAFA9AF8585608585AF858561AFA9AFA9AF85AF85AF
%85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A9FD05FFAF85A985AF85A985AFA9AFA9AF60855A
%85848585AFA9AFA9AF85A985AF85855A8560AFAFAF60855A5A367E2F8560
%8584FFAF855A85608585AF85A985AFA9AF85AF85856085608560AFA9AF85
%AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85FFFFFFAFAF85AF85AF85AF85AF
%A9AF85AFA9AF85AF85AF85AFA9AF85AFA9AFA9AF85AF858560856185AFFF
%8585608584856085AFFF8585618585AF85AF85AFA9AFAFAF85AFA9AF85AF
%85AF85AFA9AF85AFA9AF85AF85AF85AF85AF8585A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFA9AF85AF85
%A985AF85A985AF85A985AF85A985AFA9A984AFA9A985AF85A985AFA9A985
%AFA9AF60855A6184FFA8855A8560A9FFAF60615A8585AFA9AF85AFA9AFA9
%AF85AF85A9A9AF85AFA8AF85A985AF85A985AF85A985AF85A985AFAF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AFA9AF85AF85AF85AFA9FFAFAFA9AFA9AF85AF
%85AF85AF85AFA9FFAFAF85AF8585608585AFAFFFAFAFA985618560AF85AF
%85FD04AFFFFFAF85AF85AF85AFAFAFA9AFA9AF85AF85AF85AF85AFA9AF85
%AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85A985AF85A985AF85AF85AF85A98585A9AFA9AF
%A9AF84AF848585AF85A985AFA9AF85AFA9A985AF85855A85A9AFA9AFA9AF
%848585A985AF85A9A9AFA9FF85AF85A985AF858584AFA9AFA9AFA9A98485
%85A985AFA9AF85AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AFA9
%AF85AF5A5A7EAFA9AFA9AF84535AAF85AF85AFA9AF85AF85AFAFAF85AFA9
%AFA9AFA95A2F7EA9AF85AF85AF85AFAFAFFFAFA9AFA9AF85AF85AF845A7E
%AFA9AFA9AF84537EAF85AFA9AF85AF85AF85AF8585AF85A985AF85A985AF
%85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A9
%85AF85A985AF85A985AF85842F5A2F84A8AF5329065AA9AF85AFA9A985AF
%85A985AFA9AFA9AFA9AF5A362F5A2F305AA9848584AF85AF85AF85AF85A9
%A9AF85AFA9852F362F85A9A92F2F068485AF85A985AF85A985AF85A9AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF7E5A5A5A2F5A2F2F062F5A
%AFA9FFA9AF85AF85AF85AF85A9AFFFAFAF5A5A5A5B845B5A5A5AAF8585A9
%AF85AF85AF85AF85AFA9AFA9AFFD045A2F5A2F2F292F84AF85AF85AF85AF
%85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF857E2FAFA8
%2F2F2F0629065AA9AF85AFA9A985AF85A985AF84FFA9FFA9AF5A5A365A30
%5A5A8584A9A98485AF85A985AF85A9A9AF85AFA9852FA984302F2F062F06
%8485AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9AF85AF5A5A5AAF2F54062F282F59AF85AF85AFAFAF85AF85AFA9A9A985
%A9FFAFAF85855A8584AF85FFA85A2FAFA9AF85AF85AFAFAF85AF85AF5A5A
%7EA92F5A292F062F84AF85AFA9AF85AF85AF85AF8585A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85AF85AF85A98585FD052F2906292F8585AF85A985AF85AF85
%AFA9A984A95A5A7EFFA9AF84A984A9A8FF5A7E595A85A985AF85AF85AF85
%A985AF85852F30FD042F06292F8585A985AFA9AF85AF85A985AFAF85AF85
%AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85
%AF85AF85AF85AF85AF85AFA9AF85AF85AFAFFF845A2F54062F84FFA9AF85
%AF85AF85AFA9AFA9AF85AF85FD045AA9FFFFA9FFAF852F5A2F84A9AF85AF
%AFAFA9AF85AF85AF85AFA9FF7E5A2F5A282F7EFFA9AF85AF85AFA9AF85AF
%85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985FFFFAF845A2F
%5A84AFFFFF85AF85A985AFA9AF85AFA9AFA9FFA9842F5A2F5A84AF842F2F
%302F85A9FFA9AF85AF85AFA9AF85A985AF85FFFFAF845A2F5A84AFFFFF85
%A985AFA9A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%A9AF85FFFFAF608585AFFFAFA9AF85AFA9AFAFFF85AF85AFA9FFFFFF8585
%365A2F5A365A2F5A5A8585FFFFAFA9AF85AF85AFA9AF85AF85AFA9AFFFAF
%858584FFFFAF85AFA9AF85AF85AF85AF85AF8585AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AFA9A95A85A8FFA8FFA8855A8585AF85AFAFAF85AF85
%A985AF8585A8FF84615A5A2F5A2F5A5A8584FFA98585AF85A985AF85A985
%AF85AF85855A85A8FFA9FF84855AA985AF85A985AF85A985AF85A9AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF858585AF858585AF85AF
%85AFA9AFAFFF85AF85AF85AF618585FFFFAF61615A8561AFFFFF858585AF
%85AF85AF85AF85AF85AF85AF85AF858585AF848585AF85AF85AF85AF85AF
%85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%855A8585A985AF85A985AFAFAF85AF85A985AF85A9608560A9AFFF608584
%FFFF855A8585A985AF85A985AF85A985AF85A985AF85A98585608585AF85
%A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF858B85AF85AF85AF85AFA9AF85AF85AF85AF85AF85AF
%85856185A9FFFFFFA985618585AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A9858560615A8560615A8585A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AFAF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585618585AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF8585A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AFAF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A9AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF8585AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A9AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF8585A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985
%AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85A985AF85
%A985AFAF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF85AF
%85AF85AF85AF85AF85AF85A9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFDFCFFFFFFFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 13 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">banner_on_blue_bg</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-01-17T16:24:57+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-01-17T16:24:57+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-01-17T16:24:56+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A7l6kC1D+pUUPwIWFD71G&#xA;/sM3EpEdHV4dPxi+KI95H61V4o9vSZpPGq0/icQT1aTEdEDf6pp1jdR29zOsbzP6cXLarEFgpPQH&#xA;iK/LDE2y8I9E/wBCjdNQowIrGSKilRUbjMbUkGHxbtKCJ/BkOa92TsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYTm6dExz8z7nWLDy1p99pt5LZiK9WS9u&#xA;IImn9OBYJf7xF6qz8F6ilRuOuRx0ZEEOVAAAE8vL3bMCm8yXHnRPL2iQOV1eWQ3Gp3VuNo4p1BBe&#xA;vw1O7BOoVct4eCz0RAXu940l2bVCWJJ9Mip37jMHOKh8WzTm8nwT7MB2DsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYt+hdT/3z/wyf1zafmId7qvy2TuV&#xA;RpeqBOHobUofjX+DZE5sfeyGDJ3IKy8pfUZnmtdOiilk+06CJTQUoPhpt8IwnUQPX70DT5B0TjSr&#xA;G9hvTLPHwXgRWqneo8Ccoz5YmNAt+DFISshOcw3NdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirDxc3bGglkJ/1j/XNxwR7g6YTl3lRvdWayUm6nlU7AKvq&#xA;O1WYKPgQM3U0wcMT3JufmrLcXjiqSyMCSBRidwaEbHxx4Y9wXin3lG6TPO08oeR2Aic0LE77ZTni&#xA;ABt1bdPMkmz0Sm81n6ooM1y4dldoogxMknpryZY0rVmp2GX8Ee5pEpHqW7TWDdJWO5cSqiyS27sV&#xA;liDio9VCap9ODgj3JJn3lQPmJReyWRuJVuIuBaFxKjuHrQwAr++pT4uBNMl4cauh9jIcfenugXcs&#xA;tzLWR24xNVXJqrVU7q24ND3zG1MAIjbq3aaUuI33JZc+Z9Sgk9P0r2bp8cFrJKm/gyIRlvgY/L5t&#xA;QzZPNWTXtRNoLqV5beLizkTx+kyqtallcAjpg8DH0U5sg6pHov5h3t3evZ6hNFYzHnJATLGytAsr&#xA;RrIxIHEGg+8eNMlLTwAuk+NkvmzHR766nugsk4liZC6FaEEbUYEDvmLnxxEbAb9PkkZUSlF95j1G&#xA;3uXiWO7mAqQ1vbvMoAJ2LIrCu3TL44Mdb182g5slmrXW2u6pPAZj69uikg/WITCfhAJNJFU0364f&#xA;Bx+SPGyeaG1zzkmhwW0+o3jLFdSiJWhQSlCY2k+NV+L7KdFBO42xjgjK6HJmMk+9E+VvOdlrmr3F&#xA;pY3wvUs6Cd0AMdXDFQrgUb7H7JyrPgEYXVFnhyyM6uwide1q9sbyRYhPIgpRLeFpiPhBJIRWNMOD&#xA;FAxBNIz5ZiZAU7bVdYngWcCeNWrRZojG4oabq6gjJnFi8vm1+Ll80DL51tIJb2G41aKCfT97uKUr&#xA;GUFFPL4wtV/eLuKipp1w/l47enmnxclc00t9TvJba0uo7v1YrniygAfYahB6dwcrOOFkVyZeJPY3&#xA;zXeYdYvLG4PpCaRAF/dW8TTPv34orNTI6fFAxsstRlmJ1FB2euatdQNOFuYUVipE8DQnam9HUGm/&#xA;XLjhx3W3zafGy+azUfMFxZWjT39yYbbYMzrseZ4gUAJNSe2A4cdcm3BLNOYjE+o8rofaVaLVb826&#xA;SQyt9XKrwYIFUAioG4FMRhx9zHJlyxkQTuDv72V5rHZOxV2KuxVj3mLV7ywnHoiaReK/ureJpnqS&#xA;d+KBmzO0+KMo2XB1GSYlUUpTzXqTSIhgv05kDm9nKqLU0qzFKKPc5f4GPy+bR42Xz+Su3mG5UI31&#xA;sMklQjrxYEgEsAQP2ab+GajW9p6XTTEZg2f2+fk7DFo9VMHpXfsfu80S2paosYkM+zEgAcSdtq7D&#xA;Njh8HLESjuC4WSeWBqR3Q1oIjMPUJCgEjj1JzIyXWzRjq93meu6jqOn+Y7uO5iaKO7uHWG548Z/Q&#xA;VfWURSdfT9WP7NePXv0ujEEbNg/X9jMPJclykF3KsItofUPoeknBCeT8mFNi3QE+2++VZIjYc0CR&#xA;5sl0b/eiX/jC/wDDKtRyHvZab6j7nlHmi+1HTfNtxM8biwuRBHBIyvxBdPSmaFxxKvR1B4HwrmYI&#xA;gjza8d/M0q2y3+r2uo2lnbmY/UGhWtasTFJFGsjsTy5FNuVfamAgRo+axJkxG88w65Gt5o2pQPNc&#xA;zXBW0S9tTLdQhSjwJAX9ORKrKabNQU4qK5dCIsEfe3SNG/6T1v8AJ3T9ds7K+bW43ivbt2uOMzmS&#xA;UqYoU5SEs7BmZCSpO3gOmYGuIIFcr/WulviN9ycetMImiWR0RwVPFipFRSoI6H3GTMAebRjyygQR&#xA;0+XySzzPHqVx5Zv7WwS4uru6jaOedWDmGNl41EXVu+wHjkcYiJ7mg5ObNLJG+EfAAPMtK823mgxX&#xA;lqI1gtCqt+5Mcj+rLyYvGZRCsaFkfZ+XAnaozKlh3F82kTjKOz2vyfFbRQ2S20YihNorLGCTTmFY&#xA;1NBU1O5zXam+E+9u0/1/BReeaOaQI5UFmqAduvhmQIggW4xmQTTF/Ndpf6tot7aQ3N7bvZNbSNOs&#xA;ir6saMWaONiSeQX4i/HrxrWhGGAEZe9yM2oOQbiIruAH4/R82J3+na5rdjLbR6bNBq+mXXIzzKit&#xA;LaxetAqpJT0uklft7cW/lWtwIHXm1RNHdkv5JeWde0WSeTVwEa5CLbQ8+bJHEr9afCK+pWgPz3yj&#xA;XTEommenvjHxZxq8kkeqTFGKn4a0NP2RleAA4xaNRIjIaSfUoNRbS39G5n9VgI4HWUBloftGqyV6&#xA;dWRt/pOTAiDybMmolkjuIj3AD7nlfnry75ll8x35stOe5F0YntXMayKeUUUbGWR6xrxKH7RFN26U&#xA;OZOOUaFtMvp87eoaJa6hbSW0FxzSO3t7eEQl+SCRFVXcDiKcuAp8RFN6AnfGJG/xT3J9rjumpFkY&#xA;q3FdwaHplWmFwZaokT2QVoHMpaSeVlHKiFiw+NuR2779K9B0yyUAOQZnVSnHhIjW3IC9vxv38+aW&#xA;+b7ewfTWuL+5mVzJG6WpYFneB0kRYhRk4lkFQykeNMrgJXUXYabLiMRDIAASPV1G/f3fLZF6dc6n&#xA;LZyLqChJ2pLwUrwQOCOACnqvHc0+nrlgiLFOv1IAMqNjiNe7oeVb/wBrOM1TsHYq7FXYqx3XXdNQ&#xA;DIxU+mNwaHqc2OlAMPi63VEie3cgLX1Obc55nX4yEZywq7cj18D08O2TljA5Mvzcpx4SI9OgB293&#xA;29/Pmw7TodS0mzM+p3U7SXTTWkNqjc1RvVZVkG0jqW5EbN0I25VzU9sdnHVQrHwxmOv07VRHI/i6&#xA;PftNLm8OVjjyARHFtxb8+/kBQ37uS/yrYeYLDzJrVtc8/wBFMkcsIehUSsADwoSKkA+pTvQ5sdFp&#xA;hgwwxg8XD1+P4pyu2dTpc2lxShXj78Vd39L9HxZkthqCmogev+qcvOWHe8yMU+4rptNkugovbA3X&#xA;BuUYkRWCmhWoDq+9DT5ZDjj0IDYIz6grmtNQOy28gToFIrQfQBhE4d4YmE+4ojSrO7jnkMkTKDEw&#xA;BII3PbK8+SJAo9W3BjkCbHRAS6PLcRtBdWbTW705xsnIVBqpoe6ncHsemWnLHvao45g8iqxabcW0&#xA;SW9naNFbRgCOMJSm1O3fbr1yInDmTukwn0Bpo6SzTC7exrfqhijufRUyLG3VBIRzCmpqBth8SPK9&#xA;vengnXIo7RbO6iuZDJEyAxMoLCgqSMp1OSJiKPVs02OQkbHRRXQr8EEqpHhyplh1MGA0s3TaFfSs&#xA;HKKsoJPqq5D7kE/F1oabjwyHjwZ+BkYz5k/KGx166Se4VoyAFl9ORQZFVzJRiVJHxMfskbfRS2Gs&#xA;jEIOnycujMdH0q4s5UDIqQxx+miq1aAUAG+/QZjZs0ZRoNuDDKMrKFl0O/aV2AWhYkfF4nLo6mFN&#xA;MtLMlcukakIjFwjKEhiCRWo6b9RT2wHPAm0jT5AK2Qt15VnurRLWeMNCknqKokKCo3A+DjUVrWvW&#xA;u+EaiANo/L5KpM9P06/ivEln48FBGx8RTKsuWBjQbcWGYkCVPUtIvLi9kmjC8G40qadFAyWHPGMQ&#xA;CxzaeUpEhAXnlW4vLZ7a4QNDJTkA5Q7b7MpDD6Dln5qDWNLN0/le8mnt5SqD6sKRqOJ7U2JBZf8A&#xA;YkV77YBqIebL8vk8l0PledNSa/8ATX6xKFWR+ZPwqR0UniOg6DE6mFUo087R+q6Vd3N2ZYgpQqBu&#xA;adMrwZ4xjRbM+CUpWEPHouoxmoVD/sssOogWqOmmGrnQ765aJpY0YxPzWrV34lf1HIjPANox5AD5&#xA;r30jUWUrwQf7LCM8A1nTzLIM17sXYq7FXYqk+raXd3V0JIgCvEDc03FczMGaMY0XC1GCUpWEPb6T&#xA;qcDl0VOVKAkjauWTzwkKLXDT5Imw1Lo19MVMsUblN15MDTI+LjbYDNGxE1fmuk0rUpAQyp4fawjP&#xA;ANZwTKEGrakSAJiSegAH9Mt8CHc0/mJ965NT1RmZRMQU+2CFFK9K7e2A4sY6MhlyHq0dX1CrBbgu&#xA;FNCwA60r4YRhh3IOeY6ovS9RvZppFklLARswFB1H0ZVmxRAFDq24M0iTZ6JYfMOofWRbj6yzGgEi&#xA;20rRb/8AFojMf/DZb4GPy+bUM2TzX3+uanZWslzM0vCNeRVVXkRWm3LiPvOAYcZ5BPi5O9Ts/MOo&#xA;XDMXuUjgaYQ2sxZQstVBNKgbg7UwHFAdG/JMgR4Z3fPaqN/qTnTLq+e6ljnkLqI2ZTSgNCKEbA5T&#xA;mhERBA6rgyTMiCeiSv5j1YXa2yw3coYqPXjg5RDl4uB275k+Bj8vm44zZD3r9T8w32m2b3d3JIkE&#xA;dPUfioCqWALMW4gKvUknIjDjPIJ8XJ3rrLWNYuC4kkEK+sYoXLKVkUCvMVUHsQR7YDjxjo35SRXD&#xA;O7G9iqO+3X33596a6Vd3z3xinkLKEJG1AelD0B75TnhERsBcGSZnRKTX/mPVLe6eKOC7uAKkPbwG&#xA;RBQn4SwHXbpmRHBjrevm0HNks1axPNN36aPcyS2PqSelEl2ghZ2JVQFDgVqzgDxOHwMfTdHjZO9J&#xA;o/zMlivtQi1Qy6fa2ckscdzKqkP6IjLNReRC/vg1SNlofGhOmh0C+PPvZZoWsTX08Lrci4tZlLxy&#xA;IVZGWlQVZdiPllGfFGMbAbcGWZnRLXmLWb6wuD6CTzLRf3VtH6rioJLUArTBp8UJRsp1GWYlUUNb&#xA;6xrE1uJys8CmtVmi9NhQ03BG2XeDjvo0+Nl80H/jSFZTG9+AqhS8o4MF5ECjKPiUio+0BWu1cHgR&#xA;/msvGl/ORlrrl5cJHNFcc4ZArKwAoVbcdsJwQ7mIz5O9FeYdXvrG4b0FmmUBf3NvH6r79+IFaZTp&#xA;8UDGy3ajLMTqKSnzhqwBLWOpKo6sbRgP1Zf+Xx+XzaTmy+fyRllr+p3cCyr68PMkCKaMJJsabqR3&#xA;xOCA6IGfJ3oqbUNXhcpJKVYUJFFPX5DIxxYyLAZSy5ImiUZ5j1G7slje3EjnixMUKc3ahH2V6nMf&#xA;TY4yu3I1OSUSOFjx83auELGx1IU3INowNKA16e+ZXgY/L5uN42Xz+S7XfNt7pGly6hPI3pxoXHOi&#xA;KaKSAXKkLypxBO3Igd8Rp4E0A2YcplICcuGJ61dedKHl/wA9T6xZwygzQTTh3jjKhkKRsFZhIF4H&#xA;4jT54y00AaoN+SExA5IS4sYlw3sP9jzZ1ZSPJZwu5q7ICx9yM1uQVIgN+IkxBKtkGbsVdirDrV3S&#xA;dWQ0YdD4ffm4mLDpYGjs8k/N/UL7T/NUlxZTS29yLKGl1CeLAepLUGQGoDHt+0fll+nAMRfm2Hay&#xA;y78n545vJMk/F39a7uGR5ZDI/wAT7szbF2NN2ynOPWFiRwlm+jf70S/8YX/hlOo5D3p031H3IP17&#xA;gQtEkzorKV+FiCOXdfA5aYA8wwx5pQII6dOiUeaNZ1vSNJ+tafC13NPJxkuJucq2ycTWT0Y6PIo4&#xA;/ZTffx2MBjF05GTUHJRIEfcKeTyaf5284XZshDbT2kUokGvTpKkgDFZDHEgZVZfh4UCKCy/EFfLx&#xA;wx339zlHWQjhOLgjxfztu++67/zvLk908l6XPplutpPdSXciQv8AvJWLMAWUhAzFm4r0XkzGnUk5&#xA;hag2Pi42D6j7lESzCNo1kZUYEEKxU7+BFCD7jMkwB5uLjyygQR0+P2HZIvOWva1ommLLptqbie6J&#xA;D3t008sNsAp4OYo+cjBm4rRB3r45EQjbkyzyyVxV8gPuAS2+1W917TP0ZotvRLqMjUJ5G9SzVyK1&#xA;gZSrPU8irJQ1FKoaUEIUeIuTLPDwjGhxbUQPPe+/YftZx5O0+6sFhtbq7e9mjjes8pq9CwIBJJJA&#xA;6DkS1PtEnfKdQbj8XH0/1/BRneTnNGruiuzBuDFTvtsVIIPvmQIggW44yShKx3+/7Dsw/wDMq78z&#xA;R28K6M80Onvya61BI/rt5FIF4I0ULuiqhrRuJLb/AAgmuDHADnzbsmbxCLNfAD7q7/e880zy7r3m&#xA;e7vIxE6Qx8ki1YKyOSUCu4Esay/EHq5cVZfs8jVzfxcIDVKiS9f/ACx0Oz0lAltO87Tu8k7OONX4&#xA;cefEKqjkoH2aA05UFd8XVH0ltwEmYJ82Q627pqLFGKngoqDTI6YAw3Y6okT2S8XqWaS3lw8kixow&#xA;CM7spLmv2S3Ctdlr06DLJYh0ZDVSlGjVf1Y+7mBf6+fN5rqOm6vYoZWJigvrgBZouVGQ8afApqdy&#xA;SOh/a9syYkGg45sWWc+XDqEFrFatAUs5F9YysoDlyQFDUZj9nc/rymYBN9WQJqmQ647pqRZSVPFd&#xA;xt2ynTC4NmqNTQVqGaarSyH7WzSSMvxtyNVJI69Ntu2TlADcBl+anMcJqtv4Yjl5gX7+/md2HeYI&#xA;fNLatOlpNdFppYzaXEU6wpboprx9H1FV1boT6THv8XdjH5PV6PtLs6OCInGPHEbgwsyPfxVY8qkP&#xA;gzaQOIAJDWQKA70pybuab0xjzeQyEb0KTDzGzLLbspIYBqEbHtlGkGxbtYaIYZ5r8x3Gi6c11bq1&#xA;3fSOOFu9wY0AC0ZynL4wqqTwUfF8zmSMQJZYp5pYzUbhEbngG3vlV/b5PJLy880+YNfY3t++rTRI&#xA;/wBWaxd4ordWYxcDFJ6P1R+PKpl+M9uWZEeGMdh8/wAbtcIR4rySPCB/Dz93cPxtez0jyJ5Q1LR2&#xA;OqXV49416zrJEk5aJVIBDu0nxXMi8EUSkBuJ+zTMaUt6/H7ESG1n8fretad/vBb/AOov6s1ub6y5&#xA;2H6B7kRlbY7FXYqwxBIrBuJNPY5uTRdILCG1XQNF11I49Yso51hJMRdWqOVOQDLQ0am4wCRj9JbA&#xA;b5ouNVhgW3ggWKCJeEUca8VVRsAABsMAA52gyKM0WNzdSChBaJgK+JplWoI4R723TA8R9zv0DqHg&#xA;v/BY/moI/KTVDpGqFOBCEeJNTt0yPj42f5fJSy30G9t4wlvDFCorshpWvXE6iB52gaeY5UjdM068&#xA;gnd5gtDGUFD3JH9MqzZYyFDvbsOGUTZ7kD+gdQ8F/wCCy/8ANQcf8pNfJo+pSxskqpIG2JZqmlKZ&#xA;EZ8bM6fIVlv5fu7ZBHawxwxgU4IQAPGgAFMTqIHmgaaY5I7S9OvILv1ZwvHgV2NdzTKs2WMo0G7B&#xA;hlGVlBy6HftK7ALQsSPi8Tl0dTCmmWlmSh4/KkqXUl2IVNxKvB3LnoBTYVoDt1G+J1MT1UaaaKg0&#xA;a9t4vSt4YoY6ceKGgoTUj5V7ZE5oHckshgmOQCI07TLuG8SWREVFBrxPiKZDLmiY0GeHDISstarp&#xA;V3c3ZliClCoG5p0w4M8YxornwSlKwh4tG1CNq+mjezHbJy1EC1R00x3KI8sy/W2uWgjZ2AB+IDZa&#xA;kCoFaVPTH8xGqtl+Xn3BE/orUSFUogUEUAbYb9sHjwXwJquq6Vd3N2ZYgpQqBuadMjgzxjGizz4J&#xA;SlYQ8Oj6lE4dVTkNxVhk5aiBao6aYNqh03VCxYqpYmpPLeuR8bGy8HItfSdSdSCib/5WSGeAQdPM&#xA;ozWdPubtojCAQgNamnWmU6fKIXbfqcMp1SVHyxPJPFNNEHaFuSUlZNx05BSAwHWjVy6WeBThlnxw&#xA;MAfTLmFOTyhzK/6LEqq/qcFbipPgQtOQ2BodqjeuP5iPeWmOGYBFR3+z3IptD1E3LT0+0nDgZDxA&#xA;rWtOn4fLAM8Ag4JlPbOJ4rWKN/tIoBp4jMPJK5EubjjUQCrZBm7FXYqxzWZrhdQkWORwoC7KSB09&#xA;s2OniODcOt1MpCZopfNe3UMZkeSUIKlmq1AAKk/QMo7Q1ePTY/EMbHl97LS4Z5p8INKdjqk96QsE&#xA;k3NhVUJYEgioI36UzV9m9v4NVPg4OAnlfVzdX2Zlwx4uLiTF7i5/RkTeo/MysCeRr0Gb0RHGdujr&#xA;jOXhjfqhhNfHpJIaCp+JumWcMe4NXFPvKnd6j9UNslzdvFLeGluHLKrmlQquTxLkAngN6ZGIiSdh&#xA;szPGADZRlpNdBbnnI9fQLLViafEu/XIzjHah1ZY5S3s9EvvNVmtIPWklkK1CgB6Enqacio2AJywx&#xA;iOiMIM5UZcPPck1sL8113qnoRAi4llnA5NChJb4m4qFFamp2r0yFDfYMoRMiBxVfU3XOlTTNTa7a&#xA;3nguWlgkZeLBiQRyoe+GcI0dvsYRlISG/wBrMc1TtnYqwS/TVjPLJa/U1t05F3upniYMCT0VHHHp&#xA;vXNuJgAXbqI4pTlUedoHVtRv9J0C+1O5ihu5rNGc29jIZdgARyLLGRseTbfZ33yUJiR2Tl088dcQ&#xA;q2J3H5i6vYyNe32lONJRUF2sZLTWzleR57AUpIlfvFQwy3hHfuwELek+V7+w1F7K/wBPLtZ3UPqw&#xA;vIOLMGUnlx7D2zC1F8BtvwADIKZZmudk7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWNa20y3&#xA;ty0ArMI/3Q2+3w+Hr75sMH0B12c/vCxPSr7Vb+exk1BZ7S5s1mN8ApjimeMBQnpl5AvItzTkeXwn&#xA;p2sz4YTiQd4lu02s8OMo8IJPXrEg3see4sV1RGjX9rqmpzz21yZI4FUACvFBxK8P2QvKgPTft0zk&#xA;+zOxNRj1Hi5fTw1Q2NiiDVGgORO2/k7HWdo4p4uCG98/nfd8t2QSsE0yNiCQszkgAk7KOgGdWPrP&#xA;udJ/AP6zzSw/M3UNU15xe6fDa+X7eKYXummRhqiCNkCXEkQ4KYiDX92zgitWbpk5Y6G3NvwyIkJj&#xA;+H8Wp+a9XbzDaNpOkyCHQpZUP1m9Q+jN6b+o3CHZpfsn7IUct2ZWGHFAQ3PN2c45NWAcceKcT6qG&#xA;1dL6fP8AYJ15Ot4rfQBDDfyalAts5iu5JPVqplBorEseK9ACar0JJFTDJzH9b9DqsmKeOUoTBjID&#xA;kUs806jp9vBFHcW090x/eejDVuXFhQ0X4tjQGnSu9K73RiSedOPEgDlbF7BNQubu51WaZXN1FIDa&#xA;oQszhaiNOMdGbgu4Ck0+eSsAAdzttQMMjknCE+AxjXPaXUy95+9nuhKUaGKOVHsoXjjtUWpaNVpW&#xA;N613Tp1J8fAUyNgkuFlOL0CAIkPq3294Z5mpc92KsMuADNKCKgswIPzzcx5B0sjUkP8AWboetYWN&#xA;vRXirLLwHcnlxqONVWhG5qevTK5x6lujkJ57sAvvy5gu55YbdJY/rZjS6UMygrGOJZt/tLQ7/tCv&#xA;Sgy+Ob+cwIo+k/jq9I8o+X9N0a5toLNCrCBIZGLEhhDHxWinZQKnpmJnkTA23Ya4wzLNc7F2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksb1hwmpyE+C/8RzY6cXAOs1BrIUo1FbmaOllObWU7NIV&#xA;aQmrA1+3H4HatDXplnAW/R6rDjJOSHHfnX60YLhAiKAaqoVmJqSQOvt9GEQcSWQHkFcuF06F6VAm&#xA;c0P+qMhXrPuZXUAfNjmqeVfL2o3cd1PZRvLE3NWdEc8iKEnkDWvc9T45cLAaSe5X1LRrW6t4o4ZJ&#xA;bWWGpjuIiokUleNVLBqGm1aVp3yPBfN2Oh7UyaUngoiXMS3Br5JhoFhBp+nSWUFfSgtmVSaVNXBJ&#xA;226ntt4ADI5Onva82qnqMk8k/qkP1LJ7PTby29G+gSdQ3JQ4rQjuKZM8V7OJCQFHqEjtfI2hRap9&#xA;ckJeJSWig+IKpPUgAhR0G6gE9+9WzWzus3b2bJAxPCOMVKQG8h5/r+VUGSW0drFPbxWqCOCN1CIB&#xA;QAVFOmRN8JvudNGuIV3svzUu4diqTv5dRnZvXI5EmnHx+nMwasgcnCOjBPNtPL/D7NyR/sR/XAdV&#xA;fRI0ldWzoJLFjcsWPU8RX9eP5ryX8r5qtppH1e4WYzFyoIAK06injkMmo4hVM8en4ZXaY5juS7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUHc/or1T9Y9L1dq86V9suh4lbXTTPw79VWpf7gf+KP&#xA;wyX73zYfufJ3+4H/AIo/DH975r+58lQ/oj0Fr6Xo8jx6ceVN8j+8vrbL93XSlP8A3A/8Ufhkv3vm&#xA;x/c+Tv8AcD/xR+GP73zX9z5L4/0PR/T9GnH95Sn2ajr7VwHxOtso+H0pZ/uB/wCKPww/vfNj+58n&#xA;f7gf+KPwx/e+a/ufJcn6E5rw9HnUcaUrXtifFre0jwr2pH5juQ7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:416eec19-72db-1042-9a5e-b4bdd730665f</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:instanceID>
            <stRef:documentID>xmp.did:201650fa-6700-7641-9c67-adbd4f0de4fc</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:416eec19-72db-1042-9a5e-b4bdd730665f</stEvt:instanceID>
                  <stEvt:when>2019-01-17T16:24:57+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>РћС‚С‚РµРЅРєРё СЃРµСЂРѕРіРѕ</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=232 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>232</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=224 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=121 G=177 B=224</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>121</xmpG:red>
                           <xmpG:green>177</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=105 G=157 B=209</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>209</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=6 G=3 B=62</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>6</xmpG:red>
                           <xmpG:green>3</xmpG:green>
                           <xmpG:blue>62</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=44 G=38 B=96</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>44</xmpG:red>
                           <xmpG:green>38</xmpG:green>
                           <xmpG:blue>96</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=25 B=187</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>25</xmpG:green>
                           <xmpG:blue>187</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=45 G=9 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>45</xmpG:red>
                           <xmpG:green>9</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=91 G=4 B=247</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>91</xmpG:red>
                           <xmpG:green>4</xmpG:green>
                           <xmpG:blue>247</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=101 G=7 B=250</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>7</xmpG:green>
                           <xmpG:blue>250</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=183 G=0 B=131</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>183</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>131</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=0 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=229 G=115 B=181</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>229</xmpG:red>
                           <xmpG:green>115</xmpG:green>
                           <xmpG:blue>181</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=226 G=64 B=152</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>226</xmpG:red>
                           <xmpG:green>64</xmpG:green>
                           <xmpG:blue>152</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 2</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=180 B=42</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=249 G=191 B=48</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>249</xmpG:red>
                           <xmpG:green>191</xmpG:green>
                           <xmpG:blue>48</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=215 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=134 G=184 B=224 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>134</xmpG:red>
                           <xmpG:green>184</xmpG:green>
                           <xmpG:blue>224</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=9 G=46 B=99 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>9</xmpG:red>
                           <xmpG:green>46</xmpG:green>
                           <xmpG:blue>99</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 3</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=239 G=152 B=132</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>239</xmpG:red>
                           <xmpG:green>152</xmpG:green>
                           <xmpG:blue>132</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176 1</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
600 400 mo
-.000300407 400 li
-.000300407 -.000450611 li
600 -.000450611 li
600 400 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.261051 .0218814 0 0 cmyk
f
543.074 128.244 mo
543.074 128.244 li
543.074 128.244 li
542.084 127.672 li
541.966 127.604 li
522.463 116.344 li
541.966 127.604 li
571.036 110.821 li
541.966 94.0377 li
512.896 110.82 li
511.789 110.18 li
541.966 92.7584 li
542.242 92.9185 li
573.251 110.821 li
543.074 128.244 li
540.859 128.244 mo
531.292 122.72 li
540.859 128.244 li
540.859 128.244 li
.159609 .0111391 0 0 cmyk
f
482.719 128.243 mo
482.719 128.243 li
497.254 119.851 li
482.72 128.243 li
480.504 128.243 mo
464.162 118.807 li
480.505 128.243 li
480.504 128.243 li
481.612 127.603 mo
481.612 127.603 li
467.077 119.211 li
481.612 127.603 li
499.24 117.425 li
481.612 127.603 li
510.681 110.82 mo
481.612 94.0367 li
458.515 107.372 li
458.515 106.093 li
481.612 92.7574 li
511.789 110.18 li
510.681 110.82 li
f
512.897 145.666 mo
512.897 145.666 li
532.973 134.075 li
512.898 145.666 li
511.79 145.026 mo
482.719 128.243 li
482.719 128.243 li
481.693 127.65 li
481.612 127.603 li
499.24 117.425 li
510.681 110.82 li
511.789 110.18 li
512.896 110.82 li
522.463 116.344 li
541.966 127.604 li
540.859 128.244 li
531.292 122.72 li
511.789 111.46 li
497.254 119.851 li
482.719 128.243 li
511.79 145.026 li
522.242 138.992 li
511.79 145.026 li
511.79 145.026 li
543.074 128.244 mo
542.243 127.764 li
542.084 127.672 li
543.074 128.244 li
f
543.076 163.088 mo
541.968 162.449 li
512.897 145.666 li
512.897 145.666 li
511.913 145.098 li
511.79 145.026 li
522.242 138.992 li
540.859 128.244 li
540.859 128.244 li
541.966 127.604 li
542.084 127.672 li
542.243 127.764 li
543.074 128.244 li
543.074 128.244 li
573.252 145.667 li
543.076 163.088 li
512.897 145.666 mo
541.968 162.449 li
571.037 145.667 li
541.966 128.883 li
532.973 134.075 li
512.897 145.666 li
f
401.964 116.463 mo
401.964 116.463 li
401.964 116.463 li
401.964 116.463 li
401.964 116.463 li
431.033 99.68 mo
431.032 99.6799 li
432.14 99.0405 li
432.14 99.0407 li
431.033 99.68 li
f
458.515 142.217 mo
458.515 142.217 li
467.077 137.274 li
458.515 142.217 li
458.515 140.938 mo
458.515 140.938 li
462.876 138.421 li
458.515 140.938 li
482.719 128.243 mo
481.888 127.763 li
481.693 127.65 li
482.719 128.243 li
480.505 128.243 mo
464.162 118.807 li
458.515 115.547 li
458.515 114.268 li
467.077 119.211 li
481.612 127.603 li
480.504 128.243 li
f
482.72 163.088 mo
482.72 163.088 li
495.447 155.741 li
482.721 163.089 li
481.613 162.449 mo
458.515 149.114 li
458.515 149.114 li
481.613 162.449 li
500.724 151.415 li
481.613 162.449 li
481.613 162.449 li
512.897 145.666 mo
512.066 145.186 li
511.913 145.098 li
512.897 145.666 li
510.682 145.666 mo
481.612 128.882 li
467.077 137.274 li
458.515 142.217 li
458.515 140.938 li
462.876 138.421 li
480.504 128.243 li
480.504 128.243 li
481.612 127.603 li
481.612 127.603 li
481.693 127.65 li
481.888 127.763 li
482.719 128.243 li
511.79 145.026 li
510.682 145.665 li
f
512.898 180.511 mo
512.898 180.511 li
521.257 175.685 li
512.898 180.511 li
511.79 179.872 mo
482.72 163.089 li
482.72 163.088 li
481.75 162.528 li
481.613 162.449 li
500.724 151.415 li
510.682 145.665 li
511.79 145.026 li
511.79 145.026 li
511.913 145.098 li
512.066 145.186 li
512.897 145.666 li
541.967 162.449 li
540.86 163.088 li
511.79 146.305 li
495.447 155.741 li
482.72 163.088 li
511.791 179.872 li
526.325 171.48 li
511.791 179.872 li
511.791 179.872 li
f
543.076 197.934 mo
543.076 197.934 li
543.076 197.934 li
542.143 197.395 li
541.968 197.294 li
512.898 180.511 li
512.898 180.511 li
511.928 179.951 li
511.791 179.872 li
526.325 171.48 li
540.86 163.088 li
541.968 162.449 li
543.076 163.088 li
573.253 180.512 li
543.076 197.934 li
512.898 180.511 mo
541.968 197.294 li
571.038 180.512 li
541.968 163.728 li
521.257 175.685 li
512.898 180.511 li
f
400.857 117.102 mo
400.856 117.102 li
401.964 116.463 li
401.964 116.463 li
400.857 117.102 li
f
458.515 177.064 mo
458.515 177.064 li
462.502 174.762 li
458.515 177.064 li
458.515 175.785 mo
458.515 175.784 li
467.779 170.436 li
458.515 175.785 li
482.72 163.089 mo
481.889 162.609 li
481.75 162.528 li
482.72 163.088 li
480.506 163.088 mo
458.515 150.393 li
458.515 149.114 li
481.613 162.449 li
480.505 163.088 li
f
482.721 197.934 mo
482.721 197.934 li
497.256 189.543 li
482.722 197.934 li
481.614 197.295 mo
481.614 197.294 li
458.515 183.959 li
458.515 183.959 li
481.614 197.294 li
497.957 187.859 li
481.614 197.295 li
512.898 180.511 mo
512.067 180.032 li
511.928 179.951 li
512.898 180.511 li
510.683 180.511 mo
481.613 163.728 li
462.502 174.762 li
458.515 177.064 li
458.515 175.785 li
467.779 170.436 li
480.505 163.088 li
481.613 162.449 li
481.613 162.449 li
481.75 162.528 li
481.889 162.609 li
482.72 163.089 li
511.79 179.872 li
510.683 180.511 li
f
512.899 215.357 mo
512.899 215.357 li
530.527 205.179 li
512.899 215.357 li
511.791 214.718 mo
482.721 197.934 li
482.721 197.934 li
481.788 197.395 li
481.614 197.295 li
497.957 187.859 li
510.683 180.511 li
511.791 179.872 li
511.791 179.872 li
511.928 179.951 li
512.067 180.032 li
512.898 180.511 li
541.968 197.295 li
540.861 197.934 li
511.791 181.151 li
497.256 189.543 li
482.721 197.934 li
511.792 214.717 li
526.326 206.326 li
511.792 214.717 li
511.792 214.717 li
543.076 197.934 mo
542.245 197.455 li
542.143 197.395 li
543.076 197.934 li
f
543.077 232.78 mo
543.077 232.78 li
543.077 232.78 li
542.112 232.223 li
541.969 232.14 li
512.899 215.357 li
512.899 215.357 li
511.978 214.825 li
511.792 214.717 li
526.326 206.326 li
540.861 197.934 li
541.968 197.294 li
542.143 197.395 li
542.245 197.455 li
543.076 197.934 li
543.076 197.934 li
573.254 215.357 li
543.077 232.78 li
512.899 215.357 mo
541.969 232.14 li
571.039 215.357 li
541.968 198.574 li
530.527 205.179 li
512.899 215.357 li
f
301.657 128.241 mo
301.657 128.241 li
320.274 117.493 li
301.657 128.241 li
300.549 127.601 mo
271.479 110.818 li
271.479 110.818 li
270.472 110.236 li
270.372 110.178 li
300.549 92.7565 li
300.825 92.9166 li
323.651 106.095 li
323.651 107.373 li
300.549 94.0358 li
271.479 110.818 li
300.55 127.601 li
309.543 122.409 li
300.55 127.601 li
300.55 127.601 li
f
323.651 142.219 mo
320.053 140.141 li
323.651 142.218 li
323.651 142.219 li
323.651 140.94 mo
311.224 133.764 li
323.651 140.939 li
323.651 140.94 li
301.657 128.241 mo
300.55 127.601 li
309.543 122.409 li
323.651 114.264 li
323.651 115.543 li
320.274 117.493 li
301.657 128.241 li
f
458.515 211.909 mo
458.515 211.909 li
471.162 204.608 li
458.515 211.909 li
458.515 210.63 mo
458.515 210.63 li
464.339 207.268 li
458.515 210.63 li
482.721 197.934 mo
481.89 197.455 li
481.788 197.395 li
482.721 197.934 li
480.507 197.934 mo
458.515 185.238 li
458.515 183.959 li
481.614 197.295 li
480.506 197.934 li
f
482.722 232.78 mo
482.722 232.78 li
498.912 223.433 li
482.723 232.78 li
480.507 232.78 mo
465.972 224.388 li
480.508 232.78 li
480.507 232.78 li
481.615 232.14 mo
481.615 232.14 li
472.048 226.616 li
481.615 232.14 li
491.573 226.391 li
481.615 232.14 li
512.899 215.357 mo
512.068 214.877 li
511.978 214.825 li
512.899 215.357 li
510.684 215.357 mo
481.614 198.574 li
471.162 204.608 li
458.515 211.909 li
458.515 210.63 li
464.339 207.268 li
480.506 197.934 li
481.614 197.294 li
481.614 197.295 li
481.788 197.395 li
481.89 197.455 li
482.721 197.934 li
511.791 214.718 li
510.684 215.357 li
f
512.9 250.203 mo
512.9 250.203 li
525.627 242.855 li
512.9 250.203 li
511.793 249.563 mo
482.722 232.78 li
482.722 232.78 li
481.689 232.183 li
481.615 232.14 li
491.573 226.391 li
510.684 215.357 li
511.792 214.717 li
511.792 214.717 li
511.978 214.825 li
512.068 214.877 li
512.899 215.357 li
541.969 232.14 li
540.862 232.78 li
511.792 215.997 li
498.912 223.433 li
482.722 232.78 li
511.793 249.563 li
526.327 241.171 li
511.793 249.563 li
511.793 249.563 li
543.077 232.78 mo
542.246 232.3 li
542.112 232.223 li
543.077 232.78 li
f
543.078 267.626 mo
543.078 267.626 li
543.078 267.626 li
542.07 267.044 li
541.97 266.986 li
512.9 250.203 li
512.9 250.203 li
511.893 249.621 li
511.793 249.563 li
526.327 241.171 li
540.862 232.78 li
541.969 232.14 li
542.112 232.223 li
542.246 232.3 li
543.077 232.78 li
543.077 232.78 li
573.255 250.203 li
543.078 267.626 li
512.9 250.203 mo
541.97 266.986 li
571.04 250.203 li
541.969 233.419 li
525.627 242.855 li
512.9 250.203 li
f
241.302 128.241 mo
241.302 128.241 li
255.837 119.849 li
241.303 128.241 li
239.088 128.241 mo
208.91 110.818 li
240.194 92.7554 li
240.471 92.9155 li
270.372 110.178 li
269.264 110.818 li
240.194 94.0347 li
211.125 110.818 li
240.195 127.601 li
254.73 119.21 li
240.195 127.601 li
240.195 127.601 li
239.088 128.241 li
271.479 110.818 mo
270.648 110.338 li
270.472 110.236 li
271.479 110.818 li
f
271.48 145.664 mo
271.48 145.664 li
286.015 137.272 li
271.48 145.664 li
270.373 145.024 mo
240.471 127.761 li
240.195 127.601 li
254.73 119.21 li
269.264 110.818 li
270.372 110.178 li
270.372 110.178 li
270.472 110.236 li
270.648 110.338 li
271.479 110.818 li
300.549 127.601 li
299.442 128.241 li
270.372 111.458 li
255.837 119.849 li
241.302 128.241 li
270.373 145.024 li
284.907 136.632 li
270.373 145.024 li
270.373 145.024 li
f
301.658 163.087 mo
301.658 163.086 li
320.229 152.365 li
301.658 163.087 li
300.55 162.447 mo
300.55 162.447 li
271.48 145.664 li
271.48 145.664 li
270.473 145.082 li
270.373 145.024 li
284.907 136.632 li
299.442 128.241 li
300.55 127.601 li
301.657 128.241 li
301.657 128.241 li
311.224 133.764 li
323.651 140.94 li
323.651 142.218 li
320.053 140.141 li
300.55 128.88 li
286.015 137.272 li
271.48 145.664 li
300.55 162.447 li
316.719 153.113 li
300.551 162.447 li
f
323.651 177.064 mo
315.086 172.118 li
323.651 177.064 li
323.651 177.064 li
323.651 175.785 mo
321.161 174.347 li
323.651 175.785 li
323.651 175.785 li
301.658 163.086 mo
300.55 162.447 li
316.719 153.113 li
323.651 149.11 li
323.651 150.389 li
320.229 152.365 li
301.658 163.086 li
f
451.438 249.562 mo
451.438 249.562 li
440.606 243.309 li
440.606 243.309 li
451.438 249.562 li
455.646 247.133 li
455.646 247.133 455.646 247.133 455.646 247.133 cv
451.439 249.562 li
459.068 246.436 mo
459.068 246.436 li
463.044 244.141 li
459.068 246.436 li
458.626 245.413 mo
458.625 245.413 458.625 245.413 458.625 245.413 cv
471.514 237.972 li
458.626 245.413 li
482.722 232.78 mo
481.891 232.3 li
481.689 232.183 li
482.722 232.78 li
480.508 232.78 mo
465.972 224.388 li
458.515 220.082 li
458.515 218.803 li
472.048 226.616 li
481.615 232.14 li
480.507 232.78 li
f
482.723 267.626 mo
482.723 267.626 li
497.258 259.234 li
482.724 267.626 li
480.508 267.626 mo
462.375 257.156 li
480.509 267.626 li
480.508 267.626 li
481.616 266.986 mo
481.616 266.986 li
472.049 261.462 li
481.616 266.986 li
499.244 256.808 li
481.616 266.986 li
512.9 250.203 mo
512.069 249.723 li
511.893 249.621 li
512.9 250.203 li
510.685 250.203 mo
481.615 233.419 li
463.044 244.141 li
459.068 246.436 li
458.974 246.079 458.825 245.736 458.626 245.413 cv
471.514 237.972 li
480.507 232.78 li
480.507 232.78 li
481.615 232.14 li
481.615 232.14 li
481.689 232.183 li
481.891 232.3 li
482.722 232.78 li
511.793 249.563 li
510.685 250.203 li
452.156 249.977 mo
451.438 249.562 li
455.646 247.133 li
455.718 247.221 455.753 247.297 455.753 247.354 cv
455.753 247.572 455.441 248.077 454.582 248.573 cv
452.156 249.977 li
f
512.901 285.048 mo
512.901 285.048 li
525.781 277.612 li
512.901 285.049 li
511.793 284.409 mo
482.723 267.626 li
482.723 267.626 li
481.689 267.029 li
481.616 266.986 li
499.244 256.808 li
510.685 250.203 li
511.793 249.563 li
511.793 249.563 li
511.893 249.621 li
512.069 249.723 li
512.9 250.203 li
541.97 266.986 li
540.863 267.625 li
511.793 250.842 li
497.258 259.234 li
482.723 267.626 li
511.794 284.409 li
530.964 273.341 li
511.794 284.409 li
511.794 284.409 li
543.078 267.626 mo
542.247 267.146 li
542.07 267.044 li
543.078 267.626 li
f
543.079 302.471 mo
543.079 302.471 li
543.079 302.471 li
542.189 301.957 li
541.971 301.832 li
512.901 285.049 li
512.901 285.048 li
511.946 284.497 li
511.794 284.409 li
530.964 273.341 li
540.863 267.625 li
541.97 266.986 li
542.07 267.044 li
542.247 267.146 li
543.078 267.626 li
543.078 267.626 li
573.256 285.048 li
543.079 302.471 li
512.901 285.048 mo
541.971 301.832 li
571.041 285.048 li
541.97 268.265 li
525.781 277.612 li
512.901 285.048 li
f
241.303 163.086 mo
241.303 163.086 li
257.646 153.651 li
241.304 163.087 li
239.089 163.086 mo
208.911 145.664 li
239.088 128.241 li
240.195 127.601 li
240.195 127.601 li
240.471 127.761 li
270.373 145.024 li
269.265 145.664 li
240.195 128.88 li
211.126 145.664 li
240.196 162.447 li
259.367 151.379 li
240.196 162.447 li
240.196 162.447 li
239.089 163.086 li
271.48 145.664 mo
270.649 145.184 li
270.473 145.082 li
271.48 145.664 li
f
271.481 180.509 mo
271.481 180.509 li
281.38 174.794 li
271.481 180.509 li
270.374 179.87 mo
240.472 162.607 li
240.196 162.447 li
259.367 151.379 li
269.265 145.664 li
270.373 145.024 li
270.373 145.024 li
270.473 145.082 li
270.649 145.184 li
271.48 145.664 li
300.55 162.447 li
299.443 163.086 li
270.373 146.303 li
257.646 153.651 li
241.303 163.086 li
270.374 179.87 li
283.101 172.522 li
270.374 179.87 li
270.374 179.87 li
f
301.659 197.932 mo
301.659 197.932 li
312.111 191.898 li
301.659 197.932 li
300.551 197.293 mo
271.481 180.51 li
271.481 180.509 li
270.511 179.949 li
270.374 179.87 li
283.101 172.522 li
299.443 163.086 li
300.55 162.447 li
301.658 163.086 li
301.658 163.087 li
321.161 174.347 li
323.651 175.785 li
323.651 177.064 li
315.086 172.118 li
300.55 163.726 li
281.38 174.794 li
271.481 180.509 li
300.552 197.293 li
316.571 188.044 li
300.552 197.293 li
300.552 197.293 li
f
323.651 210.629 mo
301.659 197.932 li
301.659 197.932 li
300.726 197.394 li
300.552 197.293 li
316.571 188.044 li
323.651 183.957 li
323.651 185.236 li
312.111 191.898 li
301.659 197.932 li
323.651 210.629 li
323.651 210.629 li
f
450.331 250.202 mo
439.498 243.948 li
440.606 243.309 li
451.438 249.562 li
450.331 250.202 li
f
452.547 285.047 mo
452.547 285.047 li
467.081 276.656 li
452.547 285.048 li
451.439 284.408 mo
435.435 275.168 li
435.435 275.168 li
451.439 284.408 li
463.358 277.527 li
451.439 284.408 li
451.439 284.408 li
482.723 267.626 mo
481.892 267.146 li
481.689 267.029 li
482.723 267.626 li
480.509 267.626 mo
462.375 257.156 li
454.482 252.599 li
455.589 251.958 li
472.049 261.462 li
481.616 266.986 li
480.508 267.625 li
446.459 253.275 mo
445.734 252.856 li
450.331 250.202 li
451.438 249.562 li
452.156 249.977 li
446.459 253.275 li
f
482.725 302.47 mo
482.725 302.47 li
498.744 293.222 li
482.725 302.47 li
481.617 301.831 mo
452.546 285.048 li
452.547 285.047 li
451.539 284.466 li
451.439 284.408 li
463.358 277.527 li
480.508 267.626 li
480.508 267.625 li
481.616 266.986 li
481.616 266.986 li
481.689 267.029 li
481.892 267.146 li
482.723 267.626 li
511.793 284.409 li
510.686 285.048 li
481.616 268.265 li
467.081 276.656 li
452.547 285.047 li
481.617 301.831 li
492.115 295.77 li
481.617 301.831 li
481.617 301.831 li
512.901 285.049 mo
512.07 284.569 li
511.946 284.497 li
512.901 285.048 li
f
511.795 320.534 mo
511.795 320.534 li
511.795 320.534 li
511.795 320.534 li
511.795 320.534 li
512.902 319.894 mo
512.902 319.894 li
524.343 313.289 li
512.902 319.894 li
510.687 319.894 mo
501.12 314.37 li
510.687 319.894 li
511.795 319.255 mo
492.291 307.994 li
511.795 319.254 li
526.329 310.863 li
511.795 319.255 li
543.079 302.471 mo
542.248 301.992 li
542.189 301.957 li
543.079 302.471 li
540.864 302.471 mo
511.794 285.688 li
498.744 293.222 li
482.724 302.47 li
481.617 301.831 li
492.115 295.77 li
510.686 285.048 li
511.794 284.409 li
511.794 284.409 li
511.946 284.497 li
512.07 284.569 li
512.901 285.049 li
541.971 301.832 li
540.864 302.471 li
f
541.972 337.957 mo
541.696 337.796 li
511.795 320.534 li
511.795 320.534 li
512.902 319.894 li
511.795 319.255 li
526.329 310.863 li
540.864 302.471 li
541.971 301.832 li
542.189 301.957 li
542.248 301.992 li
543.079 302.471 li
543.079 302.471 li
573.257 319.894 li
541.972 337.957 li
512.902 319.894 mo
541.972 336.677 li
571.042 319.894 li
541.971 303.111 li
524.343 313.289 li
512.902 319.894 li
f
241.304 197.932 mo
241.304 197.932 li
255.839 189.541 li
241.305 197.932 li
239.089 197.932 mo
208.912 180.508 li
239.089 163.086 li
240.196 162.447 li
240.196 162.447 li
240.472 162.607 li
270.374 179.87 li
269.266 180.509 li
240.196 163.726 li
211.127 180.508 li
240.197 197.293 li
254.732 188.901 li
240.197 197.293 li
240.197 197.293 li
239.089 197.932 li
271.481 180.51 mo
270.65 180.03 li
270.511 179.949 li
271.481 180.509 li
f
271.482 215.355 mo
271.482 215.355 li
286.017 206.963 li
271.482 215.355 li
270.374 214.716 mo
240.473 197.453 li
240.197 197.293 li
254.732 188.901 li
269.266 180.509 li
270.374 179.87 li
270.374 179.87 li
270.511 179.949 li
270.65 180.03 li
271.481 180.51 li
300.551 197.293 li
299.444 197.932 li
270.374 181.149 li
255.839 189.541 li
241.304 197.932 li
270.375 214.715 li
284.909 206.324 li
270.375 214.716 li
270.375 214.715 li
301.659 197.932 mo
300.828 197.453 li
300.726 197.394 li
301.659 197.932 li
f
301.66 232.778 mo
301.66 232.778 li
320.771 221.744 li
301.66 232.778 li
300.553 232.138 mo
300.552 232.138 li
271.482 215.355 li
271.482 215.355 li
270.547 214.815 li
270.375 214.716 li
284.909 206.324 li
299.444 197.932 li
300.552 197.293 li
300.552 197.293 li
300.726 197.394 li
300.828 197.453 li
301.659 197.932 li
323.651 210.629 li
323.651 211.908 li
300.552 198.572 li
286.017 206.963 li
271.482 215.355 li
300.552 232.138 li
313.432 224.702 li
300.553 232.138 li
f
331.838 250.201 mo
331.838 250.201 li
340.075 245.445 li
340.075 245.445 li
331.838 250.201 li
330.73 249.561 mo
330.73 249.561 li
329.689 248.96 li
329.689 248.96 li
330.73 249.561 li
338.967 244.806 li
338.968 244.806 li
330.73 249.561 li
326.385 247.053 mo
301.66 232.778 li
301.66 232.778 li
300.652 232.196 li
300.553 232.138 li
313.432 224.702 li
323.651 218.802 li
323.651 220.081 li
320.771 221.744 li
301.66 232.778 li
326.386 247.053 li
326.386 247.053 326.386 247.053 326.385 247.053 cv
f
331.838 250.201 mo
330.73 249.561 li
338.968 244.806 li
340.075 245.445 li
331.838 250.201 li
f
422.37 302.47 mo
422.37 302.47 li
436.905 294.079 li
422.37 302.47 li
421.262 301.831 mo
405.297 292.613 li
405.297 292.613 li
421.262 301.831 li
435.797 293.439 li
421.263 301.831 li
421.262 301.831 li
452.546 285.048 mo
451.716 284.568 li
451.539 284.466 li
452.547 285.047 li
450.332 285.047 mo
434.329 275.808 li
435.435 275.168 li
451.439 284.408 li
450.332 285.047 li
f
451.44 320.533 mo
451.44 320.533 li
451.44 320.532 li
451.44 320.533 li
451.44 320.533 li
452.548 319.893 mo
452.548 319.893 li
467.082 311.502 li
452.548 319.893 li
451.44 319.254 mo
422.37 302.47 li
422.37 302.47 li
421.362 301.889 li
421.263 301.831 li
435.797 293.439 li
450.332 285.047 li
451.439 284.408 li
451.439 284.408 li
451.539 284.466 li
451.716 284.568 li
452.546 285.048 li
481.617 301.831 li
480.509 302.47 li
451.439 285.687 li
436.905 294.079 li
422.37 302.47 li
451.44 319.254 li
469.069 309.076 li
451.44 319.254 li
f
481.618 337.956 mo
481.341 337.795 li
451.44 320.533 li
451.44 320.532 li
452.548 319.893 li
451.44 319.254 li
469.069 309.076 li
480.509 302.47 li
481.617 301.831 li
482.725 302.47 li
482.725 302.47 li
492.291 307.994 li
511.795 319.255 li
512.902 319.894 li
511.795 320.534 li
511.794 320.534 li
481.618 337.956 li
452.548 319.893 mo
481.618 336.676 li
510.687 319.894 li
501.12 314.37 li
481.617 303.11 li
467.082 311.502 li
452.548 319.893 li
f
241.305 232.778 mo
241.305 232.778 li
262.015 220.821 li
241.306 232.778 li
239.09 232.778 mo
208.913 215.354 li
239.089 197.932 li
240.197 197.293 li
240.197 197.293 li
240.473 197.453 li
270.374 214.716 li
269.267 215.355 li
240.197 198.572 li
211.128 215.354 li
240.198 232.138 li
250.097 226.423 li
240.198 232.138 li
240.198 232.138 li
239.09 232.778 li
271.482 215.355 mo
270.651 214.876 li
270.547 214.815 li
271.482 215.355 li
f
271.483 250.201 mo
271.483 250.201 li
286.018 241.809 li
271.483 250.201 li
270.376 249.561 mo
240.474 232.298 li
240.198 232.138 li
250.097 226.423 li
269.267 215.355 li
270.375 214.715 li
270.375 214.716 li
270.547 214.815 li
270.651 214.876 li
271.482 215.355 li
300.552 232.138 li
299.445 232.778 li
270.375 215.995 li
262.015 220.821 li
241.305 232.778 li
270.376 249.561 li
281.817 242.956 li
270.376 249.561 li
270.376 249.561 li
301.66 232.778 mo
300.829 232.298 li
300.652 232.196 li
301.66 232.778 li
f
301.661 267.624 mo
301.661 267.624 li
316.196 259.232 li
301.661 267.624 li
300.553 266.984 mo
271.483 250.201 li
271.483 250.201 li
270.476 249.619 li
270.376 249.561 li
281.817 242.956 li
299.445 232.778 li
300.552 232.138 li
300.553 232.138 li
300.652 232.196 li
300.829 232.298 li
301.66 232.778 li
326.385 247.053 li
326.086 247.313 325.823 247.589 325.599 247.877 cv
300.552 233.418 li
286.018 241.809 li
271.483 250.201 li
300.553 266.984 li
311.994 260.379 li
300.554 266.984 li
300.553 266.984 li
329.623 250.201 mo
328.646 249.637 li
328.811 249.496 329.017 249.349 329.271 249.202 cv
329.689 248.96 li
330.73 249.561 li
329.623 250.201 li
f
331.838 285.046 mo
331.838 285.046 li
341.796 279.297 li
331.838 285.047 li
329.622 285.046 mo
316.743 277.61 li
329.623 285.046 li
329.622 285.046 li
330.73 284.407 mo
330.73 284.407 li
311.56 273.339 li
330.73 284.407 li
345.192 276.057 li
345.192 276.057 li
330.73 284.407 li
301.661 267.624 mo
300.553 266.984 li
311.994 260.379 li
325.41 252.633 li
325.628 252.929 325.891 253.206 326.196 253.458 cv
316.196 259.232 li
301.661 267.624 li
338.567 255.365 mo
330.73 250.84 li
329.555 251.519 li
328.676 251.011 li
328.595 250.965 328.523 250.918 328.46 250.872 cv
329.623 250.201 li
330.73 249.561 li
331.838 250.201 li
331.838 250.201 li
339.673 254.725 li
338.567 255.365 li
f
362.016 302.469 mo
362.016 302.469 li
375.065 294.935 li
362.016 302.469 li
360.908 301.83 mo
331.837 285.047 li
331.838 285.046 li
330.853 284.478 li
330.73 284.407 li
345.192 276.057 li
346.299 276.697 li
341.796 279.297 li
331.838 285.046 li
360.908 301.83 li
375.37 293.481 li
375.37 293.481 li
360.908 301.83 li
360.908 301.83 li
f
391.086 320.533 mo
391.086 320.533 li
391.086 320.532 li
391.086 320.533 li
391.086 320.533 li
392.193 319.893 mo
392.193 319.893 li
408.536 310.458 li
392.193 319.893 li
389.978 319.893 mo
370.475 308.633 li
389.978 319.893 li
391.086 319.254 mo
380.149 312.939 li
391.086 319.254 li
405.62 310.862 li
391.086 319.254 li
422.37 302.47 mo
421.539 301.991 li
421.362 301.889 li
422.37 302.47 li
420.155 302.47 mo
404.191 293.253 li
405.297 292.613 li
421.262 301.831 li
420.155 302.47 li
362.016 302.469 mo
360.908 301.83 li
375.37 293.481 li
376.477 294.12 li
375.065 294.935 li
362.015 302.469 li
f
421.263 337.956 mo
420.987 337.795 li
391.086 320.533 li
391.086 320.532 li
392.193 319.893 li
391.086 319.254 li
405.62 310.862 li
420.155 302.47 li
421.262 301.831 li
421.263 301.831 li
421.362 301.889 li
421.539 301.991 li
422.37 302.47 li
451.44 319.254 li
452.548 319.893 li
451.44 320.532 li
451.44 320.533 li
421.263 337.956 li
392.193 319.893 mo
421.263 336.676 li
450.333 319.893 li
421.262 303.11 li
408.536 310.458 li
392.193 319.893 li
f
241.307 267.623 mo
241.307 267.623 li
251.805 261.562 li
241.307 267.623 li
239.092 267.622 mo
208.914 250.2 li
239.09 232.778 li
240.198 232.138 li
240.198 232.138 li
240.474 232.298 li
270.376 249.561 li
269.268 250.201 li
240.198 233.418 li
211.129 250.2 li
240.199 266.983 li
258.77 256.262 li
240.199 266.983 li
240.199 266.983 li
239.092 267.622 li
271.483 250.201 mo
270.652 249.721 li
270.476 249.619 li
271.483 250.201 li
f
271.484 285.046 mo
271.484 285.046 li
281.442 279.297 li
271.484 285.047 li
269.269 285.046 mo
254.734 276.654 li
269.269 285.046 li
269.269 285.046 li
270.377 284.407 mo
270.377 284.407 li
255.842 276.015 li
270.377 284.407 li
289.488 273.373 li
270.377 284.407 li
299.446 267.624 mo
270.376 250.84 li
251.805 261.562 li
241.306 267.623 li
240.199 266.983 li
258.77 256.262 li
269.268 250.201 li
270.376 249.561 li
270.376 249.561 li
270.476 249.619 li
270.652 249.721 li
271.483 250.201 li
300.553 266.984 li
299.446 267.623 li
f
301.662 302.469 mo
301.662 302.469 li
316.196 294.078 li
301.662 302.469 li
300.554 301.83 mo
300.554 301.83 li
271.484 285.047 li
271.484 285.046 li
270.494 284.475 li
270.377 284.407 li
289.488 273.373 li
299.446 267.623 li
300.553 266.984 li
301.661 267.624 li
301.661 267.624 li
311.56 273.339 li
330.73 284.407 li
329.623 285.046 li
316.743 277.61 li
300.553 268.263 li
281.442 279.297 li
271.484 285.046 li
300.554 301.83 li
315.089 293.438 li
300.555 301.83 li
331.837 285.047 mo
331.007 284.567 li
330.853 284.478 li
331.838 285.046 li
f
330.731 320.532 mo
330.731 320.532 li
330.731 320.532 li
330.731 320.532 li
330.731 320.532 li
329.624 319.892 mo
318.183 313.287 li
329.624 319.892 li
331.839 319.892 mo
331.839 319.892 li
343.28 313.287 li
331.839 319.892 li
330.731 319.253 mo
316.197 310.861 li
330.731 319.252 li
345.266 310.861 li
330.731 319.253 li
359.801 302.469 mo
330.73 285.686 li
316.196 294.078 li
301.662 302.469 li
300.554 301.83 li
315.089 293.438 li
329.622 285.046 li
329.623 285.046 li
330.73 284.407 li
330.73 284.407 li
330.853 284.478 li
331.007 284.567 li
331.837 285.047 li
360.908 301.83 li
359.8 302.469 li
f
360.909 337.955 mo
360.633 337.795 li
330.731 320.532 li
330.731 320.532 li
331.839 319.892 li
330.731 319.253 li
345.266 310.861 li
359.8 302.469 li
360.908 301.83 li
362.016 302.469 li
362.016 302.469 li
380.149 312.939 li
391.086 319.254 li
392.193 319.893 li
391.086 320.532 li
391.085 320.533 li
360.909 337.955 li
331.839 319.892 mo
360.909 336.675 li
389.978 319.893 li
370.475 308.633 li
360.908 303.109 li
343.28 313.287 li
331.839 319.892 li
f
241.307 302.468 mo
241.307 302.468 li
261.383 290.878 li
241.308 302.468 li
239.093 302.468 mo
208.915 285.045 li
239.092 267.622 li
240.199 266.983 li
241.307 267.623 li
241.307 267.623 li
255.842 276.015 li
270.376 284.407 li
269.269 285.046 li
254.734 276.654 li
240.199 268.262 li
211.13 285.045 li
240.2 301.829 li
250.652 295.795 li
240.2 301.829 li
240.2 301.829 li
239.093 302.468 li
271.484 285.047 mo
270.653 284.567 li
270.494 284.475 li
271.484 285.046 li
f
270.378 320.531 mo
270.377 320.531 li
270.378 320.531 li
270.378 320.531 li
270.378 320.531 li
271.485 319.891 mo
271.485 319.891 li
290.103 309.143 li
271.485 319.891 li
270.378 319.252 mo
240.476 301.989 li
240.2 301.829 li
250.652 295.795 li
269.269 285.046 li
269.269 285.046 li
270.377 284.407 li
270.377 284.407 li
270.494 284.475 li
270.653 284.567 li
271.484 285.047 li
300.554 301.83 li
299.447 302.469 li
270.377 285.686 li
261.383 290.878 li
241.307 302.468 li
270.378 319.252 li
279.371 314.06 li
270.378 319.252 li
f
300.554 337.955 mo
270.378 320.531 li
270.378 320.531 li
271.485 319.891 li
270.378 319.252 li
279.371 314.06 li
299.447 302.469 li
300.554 301.83 li
301.662 302.469 li
301.662 302.469 li
316.197 310.861 li
330.731 319.253 li
331.839 319.892 li
330.731 320.532 li
330.731 320.532 li
300.554 337.955 li
271.485 319.891 mo
300.554 336.675 li
329.624 319.892 li
318.183 313.287 li
300.554 303.109 li
290.103 309.143 li
271.485 319.891 li
f
240.201 337.954 mo
239.925 337.793 li
208.916 319.891 li
239.093 302.468 li
240.2 301.829 li
240.2 301.829 li
240.476 301.989 li
270.378 319.252 li
271.485 319.891 li
270.378 320.531 li
270.377 320.531 li
240.201 337.954 li
240.2 303.108 mo
211.131 319.891 li
240.201 336.674 li
269.27 319.891 li
240.2 303.108 li
f
209.213 244.55 mo
208.622 244.891 208.052 245.317 207.508 245.799 cv
207.272 238.128 201.73 235.076 194.911 239.013 cv
189.357 242.22 184.651 249.085 182.965 255.814 cv
181.593 255.629 179.983 255.986 178.253 256.985 cv
173.281 259.855 169.251 266.836 169.251 272.576 cv
169.251 278.317 173.281 280.643 178.253 277.773 cv
209.213 259.898 li
212.884 257.779 215.859 252.626 215.859 248.387 cv
215.859 244.149 212.884 242.431 209.213 244.55 cv
cp
0 0 0 0 cmyk
f
449.392 291.554 mo
449.392 293.417 448.086 295.679 446.473 296.611 cv
444.861 297.542 443.554 296.787 443.554 294.925 cv
443.554 293.064 444.861 290.8 446.473 289.87 cv
448.086 288.939 449.392 289.693 449.392 291.554 cv
cp
f
458.854 286.092 mo
458.854 287.954 457.548 290.217 455.935 291.148 cv
454.323 292.079 453.016 291.324 453.016 289.462 cv
453.016 287.601 454.323 285.337 455.935 284.407 cv
457.548 283.476 458.854 284.23 458.854 286.092 cv
cp
f
468.316 280.629 mo
468.316 282.491 467.01 284.754 465.397 285.685 cv
463.785 286.616 462.478 285.861 462.478 284 cv
462.478 282.138 463.785 279.875 465.397 278.944 cv
467.01 278.013 468.316 278.767 468.316 280.629 cv
cp
f
477.778 275.167 mo
477.778 277.028 476.471 279.292 474.859 280.222 cv
473.247 281.153 471.94 280.398 471.94 278.537 cv
471.94 276.675 473.247 274.412 474.859 273.481 cv
476.471 272.55 477.778 273.305 477.778 275.167 cv
cp
f
313.115 343.733 mo
313.115 345.595 311.808 347.859 310.196 348.79 cv
308.584 349.72 307.277 348.965 307.277 347.104 cv
307.277 345.243 308.584 342.979 310.196 342.048 cv
311.808 341.118 313.115 341.872 313.115 343.733 cv
cp
f
321.168 339.085 mo
321.168 340.946 319.861 343.21 318.249 344.14 cv
316.636 345.071 315.33 344.316 315.33 342.455 cv
315.33 340.593 316.636 338.33 318.249 337.399 cv
319.861 336.468 321.168 337.223 321.168 339.085 cv
cp
f
313.115 334.435 mo
313.115 336.296 311.808 338.56 310.196 339.492 cv
308.584 340.422 307.277 339.668 307.277 337.806 cv
307.277 335.945 308.584 333.681 310.196 332.751 cv
311.808 331.82 313.115 332.574 313.115 334.435 cv
cp
f
321.168 329.787 mo
321.168 331.648 319.861 333.912 318.249 334.842 cv
316.636 335.773 315.33 335.018 315.33 333.157 cv
315.33 331.295 316.636 329.032 318.249 328.101 cv
319.861 327.17 321.168 327.924 321.168 329.787 cv
cp
f
286.07 110.73 mo
280.232 114.1 li
280.232 107.359 li
286.07 103.989 li
286.07 110.73 li
cp
f
294.174 105.994 mo
288.335 109.364 li
288.335 102.623 li
294.174 99.2525 li
294.174 105.994 li
cp
f
286.121 119.476 mo
280.283 122.846 li
280.283 116.105 li
286.121 112.735 li
286.121 119.476 li
cp
f
294.174 114.827 mo
288.335 118.197 li
288.335 111.457 li
294.174 108.086 li
294.174 114.827 li
cp
f
475.691 85.4748 mo
473.569 85.4747 472.111 83.7827 472.111 80.856 cv
472.111 76.7309 475.008 71.7144 478.581 69.6518 cv
479.615 69.0548 480.59 68.775 481.456 68.775 cv
481.775 68.775 482.08 68.8131 482.367 68.8873 cv
482.287 68.2467 482.231 67.5835 482.231 66.8716 cv
482.231 58.2496 488.285 47.7652 495.752 43.4536 cv
497.917 42.204 499.96 41.613 501.772 41.613 cv
504.404 41.613 506.546 42.8614 507.856 45.1509 cv
509.16 43.5729 510.655 42.2388 512.247 41.3198 cv
513.714 40.4728 515.099 40.0717 516.327 40.0717 cv
519.258 40.0717 521.289 42.3576 521.383 46.32 cv
522.238 45.316 523.207 44.4634 524.235 43.8697 cv
525.234 43.2931 526.177 43.02 527.013 43.02 cv
529.054 43.02 530.455 44.6469 530.455 47.4605 cv
530.455 48.9457 530.064 50.5515 529.395 52.083 cv
528.903 48.9911 527.027 47.2407 524.463 47.2407 cv
523.235 47.2407 521.85 47.6417 520.383 48.4889 cv
518.791 49.4078 517.295 50.7418 515.991 52.3198 cv
514.681 50.0303 512.539 48.7816 509.907 48.7816 cv
508.095 48.7816 506.052 49.3727 503.887 50.6227 cv
496.42 54.9332 490.367 65.4185 490.367 74.0406 cv
490.367 74.7525 490.423 75.4156 490.503 76.0562 cv
490.215 75.9819 489.91 75.9438 489.59 75.9438 cv
488.725 75.9438 487.75 76.223 486.716 76.8199 cv
484.567 78.0614 482.661 80.3723 481.485 82.9146 cv
478.581 84.5914 li
477.542 85.1908 476.561 85.4748 475.691 85.4748 cv
.211002 .0162356 0 0 cmyk
f
483.827 92.6437 mo
481.704 92.6436 480.247 90.9518 480.247 88.0249 cv
480.247 86.3819 480.706 84.5976 481.485 82.9146 cv
524.235 58.232 li
526.384 56.992 528.278 54.6409 529.395 52.083 cv
529.465 52.5246 529.508 52.9937 529.519 53.4889 cv
530.374 52.4849 531.342 51.6324 532.371 51.0386 cv
533.37 50.462 534.313 50.1889 535.149 50.1889 cv
537.19 50.1889 538.591 51.8156 538.591 54.6285 cv
538.591 58.5952 535.806 63.4175 532.371 65.4009 cv
486.716 91.7603 li
485.678 92.3598 484.697 92.6438 483.827 92.6437 cv
.12958 .00274662 0 0 cmyk
f
481.485 82.9146 mo
482.661 80.3723 484.567 78.0614 486.716 76.8199 cv
487.75 76.223 488.725 75.9438 489.59 75.9438 cv
489.91 75.9438 490.215 75.9819 490.503 76.0562 cv
490.423 75.4156 490.367 74.7525 490.367 74.0406 cv
490.367 65.4185 496.42 54.9332 503.887 50.6227 cv
506.052 49.3727 508.095 48.7816 509.907 48.7816 cv
512.539 48.7816 514.681 50.0303 515.991 52.3198 cv
517.295 50.7418 518.791 49.4078 520.383 48.4889 cv
521.85 47.6417 523.235 47.2407 524.463 47.2407 cv
527.027 47.2407 528.903 48.9911 529.395 52.083 cv
528.278 54.6409 526.384 56.992 524.235 58.232 cv
481.485 82.9146 li
.0956741 .00158694 0 0 cmyk
f
540.507 58.2066 mo
539.477 58.8013 538.51 59.6529 537.655 60.6578 cv
537.521 55.0357 533.487 52.7886 528.518 55.6568 cv
526.927 56.5757 525.43 57.9107 524.127 59.4888 cv
521.915 55.6226 517.333 54.7252 512.023 57.7916 cv
504.555 62.1021 498.503 72.5875 498.503 81.2095 cv
498.503 81.9214 498.558 82.5845 498.637 83.2252 cv
497.573 82.9488 496.267 83.1714 494.851 83.9888 cv
491.279 86.0513 488.383 91.0689 488.383 95.1939 cv
488.383 99.3199 491.279 100.992 494.851 98.9293 cv
540.507 72.5699 li
543.941 70.5865 546.726 65.7642 546.726 61.7974 cv
546.726 57.8316 543.941 56.2242 540.507 58.2066 cv
cp
0 0 0 0 cmyk
f
291.034 249.104 mo
291.044 249.104 li
291.034 249.104 li
cp
276.782 240.876 mo
276.782 255.702 li
289.622 248.289 li
289.622 233.461 li
276.782 240.876 li
cp
275.37 259.559 mo
275.126 259.559 274.883 259.496 274.664 259.37 cv
274.227 259.118 273.958 258.651 273.958 258.147 cv
273.958 240.06 li
273.958 239.555 274.227 239.089 274.664 238.837 cv
290.328 229.794 li
290.765 229.542 291.302 229.542 291.74 229.794 cv
292.177 230.045 292.446 230.511 292.446 231.016 cv
292.446 249.104 li
292.446 249.609 292.177 250.075 291.74 250.327 cv
276.076 259.37 li
275.857 259.496 275.614 259.559 275.37 259.559 cv
cp
f
57.4607 120.253 mo
57.4607 110.981 li
59.1501 110.981 li
59.1501 119.085 li
61.3699 119.085 li
61.3699 120.253 li
57.4607 120.253 li
cp
f
64.1658 119.258 mo
64.2927 119.258 64.3962 119.23 64.4763 119.174 cv
64.5564 119.118 64.614 119.032 64.6501 118.914 cv
64.6853 118.796 64.7087 118.683 64.7195 118.573 cv
64.7312 118.463 64.7361 118.321 64.7361 118.145 cv
64.7361 115.746 li
64.7361 115.608 64.7332 115.494 64.7283 115.402 cv
64.7224 115.311 64.7097 115.211 64.6892 115.103 cv
64.6687 114.995 64.6375 114.91 64.5964 114.848 cv
64.4285 114.692 li
64.3582 114.649 64.2703 114.628 64.1658 114.628 cv
64.0388 114.628 63.9353 114.657 63.8552 114.714 cv
63.7751 114.772 63.7175 114.86 63.6824 114.977 cv
63.6462 115.094 63.6238 115.209 63.6121 115.318 cv
63.6013 115.428 63.5955 115.571 63.5955 115.746 cv
63.5955 118.145 li
63.5955 118.283 63.5984 118.398 63.6042 118.489 cv
63.6091 118.581 63.6228 118.679 63.6433 118.786 cv
63.6638 118.892 63.6941 118.975 63.7351 119.037 cv
63.9031 119.194 li
63.9734 119.237 64.0613 119.258 64.1658 119.258 cv
cp
64.1599 120.36 mo
63.448 120.36 62.9177 120.16 62.5691 119.758 cv
62.2205 119.358 62.0466 118.785 62.0466 118.039 cv
62.0466 115.852 li
62.0466 115.107 62.2205 114.534 62.5691 114.132 cv
62.9177 113.732 63.448 113.532 64.1599 113.532 cv
64.8757 113.532 65.4099 113.732 65.7625 114.132 cv
66.115 114.534 66.2908 115.107 66.2908 115.852 cv
66.2908 118.039 li
66.2908 118.785 66.115 119.358 65.7625 119.758 cv
65.4099 120.16 64.8757 120.36 64.1599 120.36 cv
cp
f
67.3875 120.253 mo
67.3875 113.632 li
68.9529 113.632 li
68.9529 114.65 li
69.1726 114.258 69.3953 113.977 69.6208 113.805 cv
69.8464 113.634 70.0886 113.548 70.3455 113.548 cv
70.5808 113.576 li
70.5808 115.126 li
70.405 115.058 70.2244 115.025 70.0378 115.025 cv
69.8142 115.032 69.6179 115.088 69.448 115.192 cv
69.2781 115.296 69.113 115.47 68.9529 115.712 cv
68.9529 120.253 li
67.3875 120.253 li
cp
f
72.7507 116.238 mo
73.8806 116.238 li
73.8806 115.606 li
73.8806 115.271 73.8386 115.03 73.7546 114.884 cv
73.6707 114.74 73.5222 114.667 73.3093 114.667 cv
73.0935 114.667 72.946 114.749 72.8679 114.913 cv
72.7898 115.077 72.7507 115.376 72.7507 115.807 cv
72.7507 116.238 li
cp
73.3269 120.36 mo
72.5701 120.36 72.0251 120.151 71.6931 119.733 cv
71.3621 119.316 71.196 118.699 71.196 117.882 cv
71.196 116.008 li
71.196 115.192 71.364 114.576 71.699 114.158 cv
72.0349 113.74 72.575 113.532 73.321 113.532 cv
73.7156 113.532 74.0486 113.589 74.3191 113.705 cv
74.5896 113.821 74.8005 113.996 74.9509 114.23 cv
75.1023 114.465 75.2097 114.737 75.2722 115.044 cv
75.3357 115.352 75.3679 115.722 75.3679 116.154 cv
75.3679 117.021 li
72.7507 117.021 li
72.7507 118.016 li
72.7507 118.155 72.7517 118.261 72.7537 118.338 cv
72.7556 118.415 72.7615 118.506 72.7732 118.615 cv
72.7839 118.723 72.8015 118.807 72.8259 118.867 cv
72.9236 119.048 li
73.0857 119.179 li
73.321 119.219 li
73.53 119.219 73.6755 119.145 73.7576 118.998 cv
73.8386 118.851 73.8806 118.637 73.8806 118.358 cv
73.8806 117.977 li
75.3621 117.977 li
75.3621 118.24 li
75.3621 118.926 75.1912 119.451 74.8503 119.814 cv
74.5095 120.178 74.0017 120.36 73.3269 120.36 cv
cp
f
76.4363 120.253 mo
76.4363 113.632 li
77.9236 113.632 li
77.9236 114.213 li
78.3669 113.748 78.8914 113.514 79.4949 113.514 cv
80.0466 113.514 80.4138 113.785 80.5964 114.326 cv
81.0632 113.785 81.6199 113.514 82.2693 113.514 cv
82.6384 113.514 82.9343 113.649 83.158 113.918 cv
83.3816 114.186 83.4939 114.576 83.4939 115.086 cv
83.4939 120.253 li
82.0056 120.253 li
82.0056 115.22 li
82.0056 114.978 81.9656 114.806 81.8855 114.706 cv
81.8054 114.605 81.6873 114.557 81.531 114.56 cv
81.2585 114.568 80.9841 114.697 80.7087 114.946 cv
80.7117 115.013 li
80.7146 115.086 li
80.7146 120.253 li
79.2322 120.253 li
79.2322 115.22 li
79.2322 114.978 79.1921 114.806 79.1121 114.706 cv
79.032 114.605 78.9119 114.557 78.7517 114.56 cv
78.49 114.568 78.2146 114.699 77.9236 114.952 cv
77.9236 120.253 li
76.4363 120.253 li
cp
f
87.4968 120.253 mo
87.4968 113.632 li
89.0632 113.632 li
89.0632 120.253 li
87.4968 120.253 li
cp
87.4968 112.586 mo
87.4968 111.266 li
89.0681 111.266 li
89.0681 112.586 li
87.4968 112.586 li
cp
f
92.5476 119.236 mo
92.6628 119.236 92.7595 119.203 92.8376 119.138 cv
92.9167 119.073 92.9734 118.977 93.0085 118.852 cv
93.0437 118.728 93.0681 118.599 93.0808 118.466 cv
93.0945 118.335 93.1013 118.175 93.1013 117.989 cv
93.1013 115.707 li
93.1013 115.554 93.0925 115.417 93.0759 115.295 cv
93.0593 115.174 93.03 115.059 92.989 114.949 cv
92.948 114.839 92.8865 114.755 92.8044 114.698 cv
92.7224 114.639 92.6238 114.613 92.5076 114.617 cv
92.3025 114.62 92.0867 114.708 91.8591 114.879 cv
91.8591 119.029 li
92.0828 119.167 92.3123 119.236 92.5476 119.236 cv
cp
90.2937 122.434 mo
90.2937 113.632 li
91.8591 113.632 li
91.8591 114.141 li
92.2693 113.731 92.7146 113.528 93.196 113.532 cv
93.4304 113.535 93.6384 113.589 93.8191 113.694 cv
94.0007 113.798 94.1423 113.927 94.2449 114.083 cv
94.3474 114.237 94.4304 114.419 94.4958 114.63 cv
94.5613 114.841 94.6052 115.037 94.6277 115.217 cv
94.6501 115.398 94.6609 115.582 94.6609 115.768 cv
94.6609 117.938 li
94.6609 118.274 94.6335 118.583 94.5769 118.864 cv
94.5212 119.145 94.4333 119.401 94.3142 119.629 cv
94.1951 119.859 94.032 120.039 93.825 120.167 cv
93.6179 120.295 93.3748 120.36 93.0955 120.36 cv
92.6853 120.36 92.2732 120.161 91.8591 119.761 cv
91.8591 122.434 li
90.2937 122.434 li
cp
f
97.4685 120.36 mo
96.9207 120.36 96.4714 120.207 96.1208 119.901 cv
95.7703 119.595 95.53 119.156 95.3992 118.582 cv
96.5847 118.151 li
96.6667 118.516 96.782 118.793 96.9314 118.981 cv
97.0808 119.169 97.2673 119.26 97.491 119.253 cv
97.655 119.249 97.7898 119.19 97.8962 119.077 cv
98.0027 118.962 98.0515 118.824 98.0447 118.66 cv
98.0291 118.421 97.8113 118.121 97.3904 117.759 cv
96.5007 116.999 li
95.8591 116.447 95.5466 115.871 95.5613 115.271 cv
95.572 114.742 95.7527 114.319 96.1013 114.004 cv
96.45 113.689 96.8943 113.532 97.4343 113.532 cv
97.9529 113.532 98.3748 113.688 98.699 114.002 cv
99.0232 114.314 99.2332 114.734 99.3308 115.259 cv
98.3015 115.69 li
98.1599 115.004 97.8953 114.66 97.5076 114.656 cv
97.3435 114.652 97.2117 114.702 97.113 114.806 cv
97.0144 114.911 96.9646 115.036 96.9646 115.181 cv
96.9617 115.382 97.1462 115.645 97.5183 115.969 cv
98.4246 116.792 li
98.5779 116.926 98.7039 117.046 98.8044 117.153 cv
98.906 117.258 99.0105 117.388 99.1208 117.542 cv
99.2312 117.694 99.3132 117.858 99.3669 118.034 cv
99.4207 118.209 99.448 118.397 99.448 118.598 cv
99.448 119.158 99.2625 119.59 98.8914 119.898 cv
98.5203 120.206 98.0466 120.36 97.4685 120.36 cv
cp
f
101.333 120.354 mo
100.956 120.354 100.681 120.216 100.508 119.94 cv
100.335 119.665 100.248 119.325 100.248 118.922 cv
100.248 113.632 li
101.808 113.632 li
101.808 118.604 li
101.808 118.809 101.84 118.961 101.903 119.062 cv
101.967 119.163 102.084 119.211 102.256 119.208 cv
102.438 119.208 102.662 119.115 102.927 118.928 cv
102.927 113.632 li
104.487 113.632 li
104.487 120.253 li
102.927 120.253 li
102.927 119.632 li
102.401 120.114 101.87 120.354 101.333 120.354 cv
cp
f
105.695 120.253 mo
105.695 113.632 li
107.182 113.632 li
107.182 114.213 li
107.626 113.748 108.15 113.514 108.754 113.514 cv
109.305 113.514 109.673 113.785 109.855 114.326 cv
110.322 113.785 110.879 113.514 111.528 113.514 cv
111.897 113.514 112.193 113.649 112.417 113.918 cv
112.64 114.186 112.753 114.576 112.753 115.086 cv
112.753 120.253 li
111.264 120.253 li
111.264 115.22 li
111.264 114.978 111.224 114.806 111.144 114.706 cv
111.064 114.605 110.946 114.557 110.79 114.56 cv
110.517 114.568 110.243 114.697 109.968 114.946 cv
109.97 115.013 li
109.973 115.086 li
109.973 120.253 li
108.491 120.253 li
108.491 115.22 li
108.491 114.978 108.451 114.806 108.371 114.706 cv
108.291 114.605 108.171 114.557 108.01 114.56 cv
107.749 114.568 107.473 114.699 107.182 114.952 cv
107.182 120.253 li
105.695 120.253 li
cp
f
118.758 119.241 mo
118.948 119.241 119.149 119.181 119.362 119.062 cv
119.362 114.835 li
119.149 114.7 118.946 114.633 118.753 114.633 cv
118.544 114.633 118.393 114.728 118.302 114.919 cv
118.211 115.109 118.165 115.351 118.165 115.645 cv
118.165 118.073 li
118.165 118.311 118.178 118.508 118.204 118.666 cv
118.23 118.822 118.289 118.957 118.381 119.071 cv
118.471 119.184 118.597 119.241 118.758 119.241 cv
cp
118.21 120.36 mo
117.67 120.36 117.264 120.168 116.997 119.784 cv
116.728 119.4 116.594 118.791 116.594 117.955 cv
116.594 116.031 li
116.594 115.677 116.621 115.356 116.675 115.069 cv
116.729 114.782 116.814 114.519 116.932 114.281 cv
117.05 114.043 117.215 113.858 117.427 113.727 cv
117.639 113.596 117.893 113.532 118.187 113.532 cv
118.605 113.532 118.997 113.701 119.362 114.041 cv
119.362 110.981 li
120.927 110.981 li
120.927 120.253 li
119.362 120.253 li
119.362 119.8 li
119.008 120.169 118.624 120.356 118.21 120.36 cv
cp
f
124.121 119.258 mo
124.248 119.258 124.351 119.23 124.431 119.174 cv
124.511 119.118 124.569 119.032 124.605 118.914 cv
124.64 118.796 124.664 118.683 124.675 118.573 cv
124.686 118.463 124.691 118.321 124.691 118.145 cv
124.691 115.746 li
124.691 115.608 124.688 115.494 124.683 115.402 cv
124.677 115.311 124.665 115.211 124.644 115.103 cv
124.624 114.995 124.593 114.91 124.552 114.848 cv
124.384 114.692 li
124.313 114.649 124.225 114.628 124.121 114.628 cv
123.994 114.628 123.89 114.657 123.81 114.714 cv
123.73 114.772 123.673 114.86 123.637 114.977 cv
123.601 115.094 123.579 115.209 123.567 115.318 cv
123.556 115.428 123.551 115.571 123.551 115.746 cv
123.551 118.145 li
123.551 118.283 123.553 118.398 123.559 118.489 cv
123.564 118.581 123.578 118.679 123.598 118.786 cv
123.619 118.892 123.649 118.975 123.69 119.037 cv
123.858 119.194 li
123.928 119.237 124.016 119.258 124.121 119.258 cv
cp
124.115 120.36 mo
123.403 120.36 122.873 120.16 122.524 119.758 cv
122.176 119.358 122.002 118.785 122.002 118.039 cv
122.002 115.852 li
122.002 115.107 122.176 114.534 122.524 114.132 cv
122.873 113.732 123.403 113.532 124.115 113.532 cv
124.831 113.532 125.365 113.732 125.718 114.132 cv
126.07 114.534 126.246 115.107 126.246 115.852 cv
126.246 118.039 li
126.246 118.785 126.07 119.358 125.718 119.758 cv
125.365 120.16 124.831 120.36 124.115 120.36 cv
cp
f
127.421 120.253 mo
127.421 110.981 li
128.986 110.981 li
128.986 120.253 li
127.421 120.253 li
cp
f
132.213 119.258 mo
132.34 119.258 132.443 119.23 132.523 119.174 cv
132.603 119.118 132.661 119.032 132.697 118.914 cv
132.732 118.796 132.756 118.683 132.766 118.573 cv
132.778 118.463 132.783 118.321 132.783 118.145 cv
132.783 115.746 li
132.783 115.608 132.78 115.494 132.775 115.402 cv
132.769 115.311 132.757 115.211 132.736 115.103 cv
132.716 114.995 132.684 114.91 132.643 114.848 cv
132.475 114.692 li
132.405 114.649 132.317 114.628 132.213 114.628 cv
132.086 114.628 131.982 114.657 131.902 114.714 cv
131.822 114.772 131.764 114.86 131.729 114.977 cv
131.693 115.094 131.671 115.209 131.659 115.318 cv
131.648 115.428 131.642 115.571 131.642 115.746 cv
131.642 118.145 li
131.642 118.283 131.645 118.398 131.651 118.489 cv
131.656 118.581 131.67 118.679 131.69 118.786 cv
131.711 118.892 131.741 118.975 131.782 119.037 cv
131.95 119.194 li
132.02 119.237 132.108 119.258 132.213 119.258 cv
cp
132.207 120.36 mo
131.495 120.36 130.965 120.16 130.616 119.758 cv
130.267 119.358 130.094 118.785 130.094 118.039 cv
130.094 115.852 li
130.094 115.107 130.267 114.534 130.616 114.132 cv
130.965 113.732 131.495 113.532 132.207 113.532 cv
132.923 113.532 133.457 113.732 133.809 114.132 cv
134.162 114.534 134.338 115.107 134.338 115.852 cv
134.338 118.039 li
134.338 118.785 134.162 119.358 133.809 119.758 cv
133.457 120.16 132.923 120.36 132.207 120.36 cv
cp
f
135.434 120.253 mo
135.434 113.632 li
137 113.632 li
137 114.65 li
137.219 114.258 137.442 113.977 137.668 113.805 cv
137.893 113.634 138.135 113.548 138.392 113.548 cv
138.628 113.576 li
138.628 115.126 li
138.452 115.058 138.271 115.025 138.085 115.025 cv
137.861 115.032 137.665 115.088 137.495 115.192 cv
137.325 115.296 137.16 115.47 137 115.712 cv
137 120.253 li
135.434 120.253 li
cp
f
143.895 120.36 mo
143.347 120.36 142.898 120.207 142.548 119.901 cv
142.197 119.595 141.957 119.156 141.826 118.582 cv
143.011 118.151 li
143.094 118.516 143.209 118.793 143.358 118.981 cv
143.508 119.169 143.694 119.26 143.918 119.253 cv
144.082 119.249 144.217 119.19 144.323 119.077 cv
144.429 118.962 144.478 118.824 144.471 118.66 cv
144.456 118.421 144.238 118.121 143.817 117.759 cv
142.927 116.999 li
142.286 116.447 141.973 115.871 141.988 115.271 cv
141.999 114.742 142.179 114.319 142.528 114.004 cv
142.877 113.689 143.321 113.532 143.861 113.532 cv
144.38 113.532 144.802 113.688 145.126 114.002 cv
145.45 114.314 145.66 114.734 145.758 115.259 cv
144.728 115.69 li
144.587 115.004 144.322 114.66 143.934 114.656 cv
143.77 114.652 143.638 114.702 143.54 114.806 cv
143.441 114.911 143.391 115.036 143.391 115.181 cv
143.388 115.382 143.573 115.645 143.945 115.969 cv
144.851 116.792 li
145.005 116.926 145.131 117.046 145.231 117.153 cv
145.333 117.258 145.437 117.388 145.548 117.542 cv
145.658 117.694 145.74 117.858 145.794 118.034 cv
145.847 118.209 145.875 118.397 145.875 118.598 cv
145.875 119.158 145.689 119.59 145.318 119.898 cv
144.947 120.206 144.473 120.36 143.895 120.36 cv
cp
f
146.769 120.253 mo
146.769 113.632 li
148.336 113.632 li
148.336 120.253 li
146.769 120.253 li
cp
146.769 112.586 mo
146.769 111.266 li
148.341 111.266 li
148.341 112.586 li
146.769 112.586 li
cp
f
151.412 120.343 mo
151.109 120.339 150.853 120.289 150.642 120.192 cv
150.431 120.095 150.269 119.957 150.156 119.775 cv
150.042 119.594 149.96 119.392 149.91 119.169 cv
149.859 118.945 149.835 118.684 149.835 118.385 cv
149.835 114.667 li
149.18 114.667 li
149.18 113.632 li
149.835 113.632 li
149.835 111.686 li
151.406 111.686 li
151.406 113.632 li
152.413 113.632 li
152.413 114.667 li
151.406 114.667 li
151.406 118.486 li
151.406 118.703 151.453 118.858 151.549 118.954 cv
151.643 119.048 151.796 119.098 152.005 119.101 cv
152.149 119.105 152.308 119.094 152.479 119.068 cv
152.479 120.264 li
152.036 120.324 151.679 120.35 151.412 120.343 cv
cp
f
158.038 119.146 mo
158.157 119.146 158.276 119.101 158.393 119.012 cv
158.51 118.922 158.604 118.832 158.676 118.738 cv
158.676 116.915 li
157.9 117.343 157.512 117.83 157.512 118.375 cv
157.512 118.613 157.558 118.801 157.649 118.939 cv
157.741 119.078 157.87 119.146 158.038 119.146 cv
cp
157.439 120.36 mo
157.022 120.356 156.679 120.193 156.414 119.871 cv
156.147 119.548 156.013 119.183 156.013 118.777 cv
156.013 118.393 156.077 118.057 156.204 117.77 cv
156.331 117.483 156.538 117.237 156.827 117.032 cv
157.116 116.828 157.356 116.678 157.546 116.585 cv
157.736 116.492 158.029 116.369 158.424 116.215 cv
158.536 116.171 158.62 116.137 158.676 116.115 cv
158.676 115.561 li
158.676 115.263 158.641 115.045 158.572 114.907 cv
158.503 114.769 158.362 114.7 158.15 114.7 cv
157.803 114.7 157.626 114.943 157.619 115.427 cv
157.596 115.841 li
156.097 115.785 li
156.1 115.662 li
156.103 115.544 li
156.151 114.851 156.357 114.342 156.721 114.018 cv
157.085 113.694 157.603 113.532 158.278 113.532 cv
158.93 113.532 159.415 113.709 159.729 114.063 cv
160.045 114.417 160.202 114.919 160.202 115.567 cv
160.202 118.592 li
160.202 119.099 160.243 119.653 160.325 120.253 cv
158.911 120.253 li
158.825 119.821 158.77 119.497 158.748 119.281 cv
158.655 119.586 158.5 119.842 158.281 120.049 cv
158.063 120.256 157.783 120.36 157.439 120.36 cv
cp
f
161.349 120.253 mo
161.349 113.632 li
162.837 113.632 li
162.837 114.213 li
163.28 113.748 163.804 113.514 164.408 113.514 cv
164.96 113.514 165.327 113.785 165.51 114.326 cv
165.976 113.785 166.533 113.514 167.182 113.514 cv
167.552 113.514 167.847 113.649 168.071 113.918 cv
168.295 114.186 168.407 114.576 168.407 115.086 cv
168.407 120.253 li
166.919 120.253 li
166.919 115.22 li
166.919 114.978 166.879 114.806 166.799 114.706 cv
166.719 114.605 166.6 114.557 166.444 114.56 cv
166.172 114.568 165.897 114.697 165.622 114.946 cv
165.625 115.013 li
165.628 115.086 li
165.628 120.253 li
164.145 120.253 li
164.145 115.22 li
164.145 114.978 164.105 114.806 164.025 114.706 cv
163.945 114.605 163.825 114.557 163.665 114.56 cv
163.403 114.568 163.128 114.699 162.837 114.952 cv
162.837 120.253 li
161.349 120.253 li
cp
f
170.996 116.238 mo
172.126 116.238 li
172.126 115.606 li
172.126 115.271 172.084 115.03 172 114.884 cv
171.916 114.74 171.767 114.667 171.554 114.667 cv
171.339 114.667 171.191 114.749 171.113 114.913 cv
171.035 115.077 170.996 115.376 170.996 115.807 cv
170.996 116.238 li
cp
171.572 120.36 mo
170.815 120.36 170.27 120.151 169.938 119.733 cv
169.607 119.316 169.441 118.699 169.441 117.882 cv
169.441 116.008 li
169.441 115.192 169.609 114.576 169.944 114.158 cv
170.28 113.74 170.82 113.532 171.566 113.532 cv
171.961 113.532 172.294 113.589 172.564 113.705 cv
172.835 113.821 173.046 113.996 173.196 114.23 cv
173.347 114.465 173.455 114.737 173.517 115.044 cv
173.581 115.352 173.613 115.722 173.613 116.154 cv
173.613 117.021 li
170.996 117.021 li
170.996 118.016 li
170.996 118.155 170.997 118.261 170.999 118.338 cv
171.001 118.415 171.007 118.506 171.018 118.615 cv
171.029 118.723 171.047 118.807 171.071 118.867 cv
171.169 119.048 li
171.331 119.179 li
171.566 119.219 li
171.775 119.219 171.921 119.145 172.003 118.998 cv
172.084 118.851 172.126 118.637 172.126 118.358 cv
172.126 117.977 li
173.607 117.977 li
173.607 118.24 li
173.607 118.926 173.436 119.451 173.095 119.814 cv
172.755 120.178 172.247 120.36 171.572 120.36 cv
cp
f
176.527 120.343 mo
176.224 120.339 175.969 120.289 175.758 120.192 cv
175.547 120.095 175.385 119.957 175.271 119.775 cv
175.157 119.594 175.075 119.392 175.025 119.169 cv
174.974 118.945 174.95 118.684 174.95 118.385 cv
174.95 114.667 li
174.296 114.667 li
174.296 113.632 li
174.95 113.632 li
174.95 111.686 li
176.521 111.686 li
176.521 113.632 li
177.528 113.632 li
177.528 114.667 li
176.521 114.667 li
176.521 118.486 li
176.521 118.703 176.568 118.858 176.664 118.954 cv
176.759 119.048 176.911 119.098 177.12 119.101 cv
177.264 119.105 177.424 119.094 177.594 119.068 cv
177.594 120.264 li
177.151 120.324 176.795 120.35 176.527 120.343 cv
cp
f
178.579 121.825 mo
178.411 121.238 li
178.632 121.182 178.811 121.069 178.951 120.899 cv
179.091 120.73 179.161 120.514 179.161 120.253 cv
178.339 120.253 li
178.339 118.738 li
179.877 118.738 li
179.877 120.147 li
179.877 121.094 179.444 121.654 178.579 121.825 cv
cp
f
185.67 120.36 mo
184.92 120.36 184.382 120.149 184.053 119.728 cv
183.725 119.306 183.561 118.697 183.561 117.899 cv
183.561 115.981 li
183.561 115.183 183.725 114.576 184.053 114.158 cv
184.382 113.74 184.92 113.532 185.67 113.532 cv
186.374 113.532 186.885 113.698 187.205 114.029 cv
187.523 114.361 187.682 114.876 187.682 115.573 cv
187.682 116.11 li
186.223 116.11 li
186.223 115.544 li
186.223 115.21 186.183 114.975 186.103 114.843 cv
186.022 114.711 185.884 114.644 185.686 114.644 cv
185.467 114.644 185.318 114.722 185.242 114.879 cv
185.165 115.036 185.127 115.327 185.127 115.752 cv
185.127 118.168 li
185.127 118.588 185.169 118.874 185.253 119.02 cv
185.337 119.168 185.481 119.241 185.686 119.241 cv
185.895 119.241 186.037 119.169 186.111 119.026 cv
186.185 118.882 186.223 118.666 186.223 118.375 cv
186.223 117.665 li
187.682 117.665 li
187.682 118.291 li
187.682 118.976 187.519 119.493 187.193 119.839 cv
186.867 120.186 186.359 120.36 185.67 120.36 cv
cp
f
190.708 119.258 mo
190.835 119.258 190.938 119.23 191.018 119.174 cv
191.098 119.118 191.156 119.032 191.192 118.914 cv
191.227 118.796 191.251 118.683 191.261 118.573 cv
191.273 118.463 191.278 118.321 191.278 118.145 cv
191.278 115.746 li
191.278 115.608 191.275 115.494 191.27 115.402 cv
191.264 115.311 191.252 115.211 191.231 115.103 cv
191.211 114.995 191.179 114.91 191.138 114.848 cv
190.97 114.692 li
190.9 114.649 190.812 114.628 190.708 114.628 cv
190.581 114.628 190.477 114.657 190.397 114.714 cv
190.317 114.772 190.26 114.86 190.224 114.977 cv
190.188 115.094 190.166 115.209 190.154 115.318 cv
190.143 115.428 190.137 115.571 190.137 115.746 cv
190.137 118.145 li
190.137 118.283 190.14 118.398 190.146 118.489 cv
190.151 118.581 190.165 118.679 190.185 118.786 cv
190.206 118.892 190.236 118.975 190.277 119.037 cv
190.445 119.194 li
190.515 119.237 190.603 119.258 190.708 119.258 cv
cp
190.702 120.36 mo
189.99 120.36 189.46 120.16 189.111 119.758 cv
188.762 119.358 188.589 118.785 188.589 118.039 cv
188.589 115.852 li
188.589 115.107 188.762 114.534 189.111 114.132 cv
189.46 113.732 189.99 113.532 190.702 113.532 cv
191.418 113.532 191.952 113.732 192.304 114.132 cv
192.657 114.534 192.833 115.107 192.833 115.852 cv
192.833 118.039 li
192.833 118.785 192.657 119.358 192.304 119.758 cv
191.952 120.16 191.418 120.36 190.702 120.36 cv
cp
f
193.907 120.253 mo
193.907 113.632 li
195.472 113.632 li
195.472 114.281 li
196.006 113.781 196.545 113.532 197.089 113.532 cv
197.466 113.532 197.74 113.669 197.914 113.945 cv
198.087 114.221 198.174 114.56 198.174 114.963 cv
198.174 120.253 li
196.608 120.253 li
196.608 115.31 li
196.608 115.101 196.578 114.946 196.518 114.845 cv
196.459 114.745 196.344 114.697 196.172 114.7 cv
195.977 114.704 195.745 114.804 195.472 115.003 cv
195.472 120.253 li
193.907 120.253 li
cp
f
201.049 120.36 mo
200.501 120.36 200.052 120.207 199.701 119.901 cv
199.35 119.595 199.11 119.156 198.979 118.582 cv
200.165 118.151 li
200.247 118.516 200.362 118.793 200.511 118.981 cv
200.661 119.169 200.847 119.26 201.071 119.253 cv
201.235 119.249 201.37 119.19 201.476 119.077 cv
201.583 118.962 201.632 118.824 201.625 118.66 cv
201.609 118.421 201.391 118.121 200.97 117.759 cv
200.081 116.999 li
199.439 116.447 199.127 115.871 199.141 115.271 cv
199.152 114.742 199.333 114.319 199.681 114.004 cv
200.03 113.689 200.474 113.532 201.014 113.532 cv
201.533 113.532 201.955 113.688 202.279 114.002 cv
202.603 114.314 202.813 114.734 202.911 115.259 cv
201.882 115.69 li
201.74 115.004 201.475 114.66 201.088 114.656 cv
200.924 114.652 200.792 114.702 200.693 114.806 cv
200.594 114.911 200.545 115.036 200.545 115.181 cv
200.542 115.382 200.726 115.645 201.098 115.969 cv
202.005 116.792 li
202.158 116.926 202.284 117.046 202.385 117.153 cv
202.486 117.258 202.591 117.388 202.701 117.542 cv
202.811 117.694 202.893 117.858 202.947 118.034 cv
203.001 118.209 203.028 118.397 203.028 118.598 cv
203.028 119.158 202.843 119.59 202.471 119.898 cv
202.1 120.206 201.627 120.36 201.049 120.36 cv
cp
f
205.304 116.238 mo
206.434 116.238 li
206.434 115.606 li
206.434 115.271 206.392 115.03 206.308 114.884 cv
206.224 114.74 206.076 114.667 205.863 114.667 cv
205.647 114.667 205.5 114.749 205.422 114.913 cv
205.344 115.077 205.304 115.376 205.304 115.807 cv
205.304 116.238 li
cp
205.881 120.36 mo
205.124 120.36 204.579 120.151 204.247 119.733 cv
203.916 119.316 203.75 118.699 203.75 117.882 cv
203.75 116.008 li
203.75 115.192 203.918 114.576 204.253 114.158 cv
204.589 113.74 205.129 113.532 205.875 113.532 cv
206.269 113.532 206.602 113.589 206.873 113.705 cv
207.143 113.821 207.354 113.996 207.505 114.23 cv
207.656 114.465 207.763 114.737 207.826 115.044 cv
207.889 115.352 207.922 115.722 207.922 116.154 cv
207.922 117.021 li
205.304 117.021 li
205.304 118.016 li
205.304 118.155 205.305 118.261 205.307 118.338 cv
205.309 118.415 205.315 118.506 205.327 118.615 cv
205.338 118.723 205.355 118.807 205.38 118.867 cv
205.477 119.048 li
205.639 119.179 li
205.875 119.219 li
206.084 119.219 206.229 119.145 206.311 118.998 cv
206.392 118.851 206.434 118.637 206.434 118.358 cv
206.434 117.977 li
207.916 117.977 li
207.916 118.24 li
207.916 118.926 207.745 119.451 207.404 119.814 cv
207.063 120.178 206.555 120.36 205.881 120.36 cv
cp
f
210.975 120.36 mo
210.225 120.36 209.687 120.149 209.359 119.728 cv
209.031 119.306 208.867 118.697 208.867 117.899 cv
208.867 115.981 li
208.867 115.183 209.031 114.576 209.359 114.158 cv
209.687 113.74 210.225 113.532 210.975 113.532 cv
211.679 113.532 212.191 113.698 212.51 114.029 cv
212.829 114.361 212.988 114.876 212.988 115.573 cv
212.988 116.11 li
211.529 116.11 li
211.529 115.544 li
211.529 115.21 211.489 114.975 211.409 114.843 cv
211.328 114.711 211.189 114.644 210.992 114.644 cv
210.772 114.644 210.624 114.722 210.548 114.879 cv
210.47 115.036 210.432 115.327 210.432 115.752 cv
210.432 118.168 li
210.432 118.588 210.474 118.874 210.558 119.02 cv
210.642 119.168 210.787 119.241 210.992 119.241 cv
211.201 119.241 211.343 119.169 211.417 119.026 cv
211.491 118.882 211.529 118.666 211.529 118.375 cv
211.529 117.665 li
212.988 117.665 li
212.988 118.291 li
212.988 118.976 212.825 119.493 212.499 119.839 cv
212.173 120.186 211.665 120.36 210.975 120.36 cv
cp
f
215.863 120.343 mo
215.56 120.339 215.304 120.289 215.094 120.192 cv
214.883 120.095 214.72 119.957 214.607 119.775 cv
214.493 119.594 214.411 119.392 214.361 119.169 cv
214.31 118.945 214.286 118.684 214.286 118.385 cv
214.286 114.667 li
213.632 114.667 li
213.632 113.632 li
214.286 113.632 li
214.286 111.686 li
215.857 111.686 li
215.857 113.632 li
216.864 113.632 li
216.864 114.667 li
215.857 114.667 li
215.857 118.486 li
215.857 118.703 215.904 118.858 216 118.954 cv
216.094 119.048 216.247 119.098 216.456 119.101 cv
216.6 119.105 216.76 119.094 216.93 119.068 cv
216.93 120.264 li
216.487 120.324 216.131 120.35 215.863 120.343 cv
cp
f
219.252 116.238 mo
220.382 116.238 li
220.382 115.606 li
220.382 115.271 220.34 115.03 220.256 114.884 cv
220.172 114.74 220.023 114.667 219.81 114.667 cv
219.594 114.667 219.447 114.749 219.369 114.913 cv
219.291 115.077 219.252 115.376 219.252 115.807 cv
219.252 116.238 li
cp
219.828 120.36 mo
219.071 120.36 218.526 120.151 218.194 119.733 cv
217.863 119.316 217.697 118.699 217.697 117.882 cv
217.697 116.008 li
217.697 115.192 217.865 114.576 218.2 114.158 cv
218.536 113.74 219.076 113.532 219.822 113.532 cv
220.217 113.532 220.55 113.589 220.82 113.705 cv
221.091 113.821 221.302 113.996 221.452 114.23 cv
221.603 114.465 221.711 114.737 221.773 115.044 cv
221.837 115.352 221.869 115.722 221.869 116.154 cv
221.869 117.021 li
219.252 117.021 li
219.252 118.016 li
219.252 118.155 219.253 118.261 219.255 118.338 cv
219.257 118.415 219.262 118.506 219.274 118.615 cv
219.285 118.723 219.302 118.807 219.327 118.867 cv
219.425 119.048 li
219.587 119.179 li
219.822 119.219 li
220.031 119.219 220.177 119.145 220.259 118.998 cv
220.34 118.851 220.382 118.637 220.382 118.358 cv
220.382 117.977 li
221.863 117.977 li
221.863 118.24 li
221.863 118.926 221.692 119.451 221.351 119.814 cv
221.01 120.178 220.503 120.36 219.828 120.36 cv
cp
f
224.783 120.343 mo
224.48 120.339 224.224 120.289 224.013 120.192 cv
223.802 120.095 223.64 119.957 223.527 119.775 cv
223.413 119.594 223.331 119.392 223.281 119.169 cv
223.23 118.945 223.206 118.684 223.206 118.385 cv
223.206 114.667 li
222.552 114.667 li
222.552 113.632 li
223.206 113.632 li
223.206 111.686 li
224.777 111.686 li
224.777 113.632 li
225.784 113.632 li
225.784 114.667 li
224.777 114.667 li
224.777 118.486 li
224.777 118.703 224.824 118.858 224.92 118.954 cv
225.014 119.048 225.167 119.098 225.376 119.101 cv
225.52 119.105 225.679 119.094 225.85 119.068 cv
225.85 120.264 li
225.407 120.324 225.051 120.35 224.783 120.343 cv
cp
f
227.78 120.354 mo
227.403 120.354 227.129 120.216 226.955 119.94 cv
226.782 119.665 226.695 119.325 226.695 118.922 cv
226.695 113.632 li
228.256 113.632 li
228.256 118.604 li
228.256 118.809 228.287 118.961 228.35 119.062 cv
228.414 119.163 228.531 119.211 228.703 119.208 cv
228.885 119.208 229.109 119.115 229.374 118.928 cv
229.374 113.632 li
230.934 113.632 li
230.934 120.253 li
229.374 120.253 li
229.374 119.632 li
228.848 120.114 228.317 120.354 227.78 120.354 cv
cp
f
232.165 120.253 mo
232.165 113.632 li
233.73 113.632 li
233.73 114.65 li
233.95 114.258 234.173 113.977 234.398 113.805 cv
234.624 113.634 234.866 113.548 235.123 113.548 cv
235.358 113.576 li
235.358 115.126 li
235.182 115.058 235.002 115.025 234.815 115.025 cv
234.592 115.032 234.395 115.088 234.225 115.192 cv
234.055 115.296 233.89 115.47 233.73 115.712 cv
233.73 120.253 li
232.165 120.253 li
cp
f
59.239 132.889 mo
59.3582 132.889 59.4773 132.844 59.5945 132.755 cv
59.7117 132.666 59.8054 132.575 59.8767 132.481 cv
59.8767 130.658 li
59.1013 131.086 58.7136 131.573 58.7136 132.118 cv
58.7136 132.356 58.7595 132.544 58.8503 132.682 cv
58.9421 132.821 59.071 132.889 59.239 132.889 cv
cp
58.6404 134.103 mo
58.2234 134.099 57.8806 133.936 57.615 133.614 cv
57.3484 133.292 57.2146 132.926 57.2146 132.52 cv
57.2146 132.136 57.2781 131.8 57.405 131.513 cv
57.532 131.226 57.739 130.98 58.0281 130.775 cv
58.3171 130.571 58.5574 130.421 58.7468 130.328 cv
58.9373 130.235 59.2302 130.112 59.6248 129.959 cv
59.7371 129.915 59.821 129.88 59.8767 129.858 cv
59.8767 129.304 li
59.8767 129.006 59.8425 128.789 59.7732 128.65 cv
59.7039 128.512 59.5632 128.443 59.3513 128.443 cv
59.0046 128.443 58.8269 128.686 58.8201 129.17 cv
58.7976 129.585 li
57.2986 129.528 li
57.3015 129.405 li
57.3044 129.288 li
57.3523 128.594 57.5583 128.086 57.9226 127.761 cv
58.2859 127.437 58.8044 127.275 59.4792 127.275 cv
60.1316 127.275 60.616 127.452 60.9304 127.806 cv
61.2458 128.16 61.4031 128.662 61.4031 129.31 cv
61.4031 132.336 li
61.4031 132.842 61.4441 133.396 61.5261 133.997 cv
60.1121 133.997 li
60.0261 133.564 59.9714 133.24 59.949 133.024 cv
59.8562 133.33 59.7009 133.586 59.4822 133.793 cv
59.2644 134 58.9841 134.103 58.6404 134.103 cv
cp
f
64.6023 132.984 mo
64.7927 132.984 64.9939 132.924 65.2068 132.805 cv
65.2068 128.578 li
64.9939 128.443 64.7908 128.377 64.5974 128.377 cv
64.3884 128.377 64.238 128.471 64.1472 128.662 cv
64.0554 128.852 64.0095 129.094 64.0095 129.388 cv
64.0095 131.816 li
64.0095 132.054 64.0232 132.252 64.0486 132.409 cv
64.075 132.565 64.1335 132.7 64.2253 132.814 cv
64.3162 132.927 64.4421 132.984 64.6023 132.984 cv
cp
64.0544 134.103 mo
63.5144 134.103 63.1091 133.911 62.8416 133.527 cv
62.573 133.143 62.4382 132.534 62.4382 131.698 cv
62.4382 129.774 li
62.4382 129.42 62.4656 129.099 62.5193 128.812 cv
62.574 128.525 62.6589 128.262 62.7771 128.024 cv
62.8943 127.786 63.0593 127.601 63.2712 127.47 cv
63.4841 127.339 63.738 127.275 64.032 127.275 cv
64.45 127.275 64.8416 127.444 65.2068 127.784 cv
65.2068 124.724 li
66.7722 124.724 li
66.7722 133.997 li
65.2068 133.997 li
65.2068 133.544 li
64.8523 133.913 64.4685 134.099 64.0544 134.103 cv
cp
f
68.0193 133.997 mo
68.0193 127.376 li
69.5857 127.376 li
69.5857 133.997 li
68.0193 133.997 li
cp
68.0193 126.33 mo
68.0193 125.009 li
69.5906 125.009 li
69.5906 126.33 li
68.0193 126.33 li
cp
f
73.0701 132.979 mo
73.1853 132.979 73.282 132.946 73.3601 132.881 cv
73.4392 132.816 73.4958 132.72 73.531 132.595 cv
73.5662 132.471 73.5906 132.342 73.6033 132.21 cv
73.6169 132.078 73.6238 131.919 73.6238 131.732 cv
73.6238 129.45 li
73.6238 129.297 73.615 129.16 73.5984 129.039 cv
73.5818 128.918 73.5525 128.802 73.5115 128.692 cv
73.4705 128.583 73.4089 128.499 73.3269 128.441 cv
73.2449 128.382 73.1462 128.356 73.03 128.36 cv
72.825 128.363 72.6091 128.451 72.3816 128.623 cv
72.3816 132.772 li
72.6052 132.91 72.8347 132.979 73.0701 132.979 cv
cp
70.8162 136.177 mo
70.8162 127.376 li
72.3816 127.376 li
72.3816 127.884 li
72.7917 127.474 73.2371 127.271 73.7185 127.275 cv
73.9529 127.278 74.1609 127.333 74.3416 127.437 cv
74.5232 127.542 74.6648 127.67 74.7673 127.826 cv
74.8699 127.98 74.9529 128.163 75.0183 128.374 cv
75.0837 128.585 75.1277 128.78 75.1501 128.961 cv
75.1726 129.141 75.1833 129.325 75.1833 129.511 cv
75.1833 131.681 li
75.1833 132.017 75.156 132.326 75.0994 132.607 cv
75.0437 132.888 74.9558 133.144 74.8367 133.373 cv
74.7175 133.602 74.5544 133.782 74.3474 133.91 cv
74.1404 134.039 73.8972 134.103 73.6179 134.103 cv
73.2078 134.103 72.7957 133.904 72.3816 133.504 cv
72.3816 136.177 li
70.8162 136.177 li
cp
f
76.324 133.997 mo
76.324 127.376 li
77.8904 127.376 li
77.8904 133.997 li
76.324 133.997 li
cp
76.324 126.33 mo
76.324 125.009 li
77.8953 125.009 li
77.8953 126.33 li
76.324 126.33 li
cp
f
80.8376 134.103 mo
80.2898 134.103 79.8406 133.95 79.49 133.644 cv
79.1394 133.338 78.8992 132.899 78.7683 132.325 cv
79.9539 131.894 li
80.0359 132.259 80.1511 132.536 80.3005 132.724 cv
80.45 132.913 80.6365 133.003 80.8601 132.996 cv
81.0242 132.992 81.1589 132.933 81.2654 132.82 cv
81.3718 132.706 81.4207 132.567 81.4138 132.403 cv
81.3982 132.165 81.1804 131.864 80.7595 131.503 cv
79.8699 130.742 li
79.2283 130.19 78.9158 129.614 78.9304 129.014 cv
78.9412 128.485 79.1218 128.062 79.4705 127.748 cv
79.8191 127.432 80.2634 127.275 80.8035 127.275 cv
81.322 127.275 81.7439 127.431 82.0681 127.745 cv
82.3923 128.057 82.6023 128.477 82.7 129.003 cv
81.6707 129.433 li
81.5291 128.748 81.2644 128.403 80.8767 128.399 cv
80.7126 128.395 80.5808 128.445 80.4822 128.549 cv
80.3835 128.654 80.3337 128.779 80.3337 128.924 cv
80.3308 129.126 80.5154 129.388 80.8875 129.712 cv
81.7937 130.535 li
81.947 130.669 82.073 130.79 82.1736 130.896 cv
82.2751 131.002 82.3796 131.131 82.49 131.285 cv
82.6003 131.437 82.6824 131.601 82.7361 131.777 cv
82.7898 131.952 82.8171 132.14 82.8171 132.341 cv
82.8171 132.901 82.6316 133.334 82.2605 133.641 cv
81.8894 133.949 81.4158 134.103 80.8376 134.103 cv
cp
f
85.6472 134.103 mo
84.8972 134.103 84.3591 133.892 84.031 133.471 cv
83.7029 133.049 83.5388 132.44 83.5388 131.642 cv
83.5388 129.724 li
83.5388 128.926 83.7029 128.319 84.031 127.901 cv
84.3591 127.483 84.8972 127.275 85.6472 127.275 cv
86.3513 127.275 86.863 127.441 87.1824 127.772 cv
87.5007 128.104 87.6599 128.619 87.6599 129.316 cv
87.6599 129.853 li
86.2009 129.853 li
86.2009 129.288 li
86.2009 128.953 86.1609 128.718 86.0808 128.586 cv
85.9998 128.454 85.8611 128.387 85.6638 128.387 cv
85.4441 128.387 85.2957 128.465 85.2195 128.623 cv
85.1423 128.779 85.1042 129.07 85.1042 129.495 cv
85.1042 131.911 li
85.1042 132.332 85.1462 132.617 85.2302 132.763 cv
85.3142 132.911 85.4587 132.984 85.6638 132.984 cv
85.8728 132.984 86.0144 132.913 86.0886 132.769 cv
86.1628 132.626 86.2009 132.409 86.2009 132.118 cv
86.2009 131.408 li
87.6599 131.408 li
87.6599 132.034 li
87.6599 132.719 87.4968 133.236 87.1707 133.583 cv
86.8445 133.929 86.3367 134.103 85.6472 134.103 cv
cp
f
88.739 133.997 mo
88.739 127.376 li
90.3054 127.376 li
90.3054 133.997 li
88.739 133.997 li
cp
88.739 126.33 mo
88.739 125.009 li
90.3103 125.009 li
90.3103 126.33 li
88.739 126.33 li
cp
f
91.5359 133.997 mo
91.5359 127.376 li
93.1013 127.376 li
93.1013 128.024 li
93.6345 127.524 94.1736 127.275 94.7175 127.275 cv
95.0945 127.275 95.3689 127.413 95.5427 127.688 cv
95.7156 127.964 95.8025 128.303 95.8025 128.707 cv
95.8025 133.997 li
94.2371 133.997 li
94.2371 129.053 li
94.2371 128.844 94.2068 128.689 94.1472 128.588 cv
94.0876 128.488 93.9724 128.44 93.8005 128.443 cv
93.6062 128.447 93.3738 128.547 93.1013 128.746 cv
93.1013 133.997 li
91.5359 133.997 li
cp
f
98.9343 130.955 mo
99.1951 130.955 99.365 130.857 99.4431 130.664 cv
99.5222 130.469 99.5613 130.127 99.5613 129.634 cv
99.5613 129.128 99.5232 128.775 99.449 128.578 cv
99.3748 128.38 99.2068 128.281 98.946 128.281 cv
98.6814 128.281 98.5095 128.381 98.4314 128.581 cv
98.3533 128.78 98.3142 129.131 98.3142 129.634 cv
98.3142 129.813 98.3171 129.965 98.325 130.09 cv
98.3328 130.215 98.3494 130.336 98.3757 130.451 cv
98.4011 130.567 98.4373 130.659 98.4812 130.728 cv
98.6609 130.893 li
98.7351 130.934 98.8259 130.955 98.9343 130.955 cv
cp
99.2361 134.903 mo
99.5574 134.903 99.7908 134.862 99.9382 134.78 cv
100.086 134.698 100.161 134.565 100.165 134.382 cv
100.177 134.185 100.126 134.041 100.013 133.949 cv
99.9021 133.858 99.699 133.799 99.4041 133.773 cv
98.3533 133.672 li
98.1257 133.937 98.0115 134.181 98.0115 134.405 cv
98.0115 134.524 98.0408 134.618 98.0984 134.684 cv
98.156 134.752 98.2751 134.804 98.4568 134.844 cv
98.6375 134.883 98.8972 134.903 99.2361 134.903 cv
cp
99.2478 136.004 mo
99.0505 136.004 98.8777 136.003 98.7302 135.999 cv
98.5828 135.995 98.4128 135.985 98.2185 135.968 cv
98.0251 135.951 97.8582 135.927 97.7185 135.895 cv
97.5789 135.864 97.4353 135.82 97.2878 135.764 cv
97.1404 135.708 97.0212 135.642 96.9294 135.565 cv
96.8386 135.489 96.7625 135.392 96.7029 135.275 cv
96.6433 135.157 96.614 135.026 96.614 134.88 cv
96.614 134.325 96.9246 133.857 97.5476 133.476 cv
97.1003 133.324 96.863 133.076 96.8376 132.733 cv
96.8191 132.495 96.8689 132.289 96.988 132.115 cv
97.1082 131.941 97.3113 131.737 97.5984 131.503 cv
97.3523 131.316 97.1677 131.083 97.0447 130.803 cv
96.9216 130.524 96.8601 130.149 96.8601 129.679 cv
96.8601 128.867 97.0359 128.262 97.3884 127.868 cv
97.741 127.472 98.2507 127.275 98.9177 127.275 cv
99.6033 127.275 100.077 127.491 100.339 127.923 cv
100.421 127.823 100.545 127.704 100.71 127.565 cv
100.876 127.427 101.051 127.314 101.233 127.224 cv
101.451 127.124 li
101.82 127.996 li
101.689 128.03 101.492 128.096 101.227 128.198 cv
100.963 128.298 100.786 128.377 100.696 128.432 cv
100.767 128.563 100.829 128.747 100.881 128.983 cv
100.933 129.22 100.959 129.458 100.959 129.696 cv
100.959 131.21 100.298 131.966 98.9734 131.966 cv
98.866 131.966 98.7175 131.951 98.5291 131.919 cv
98.3406 131.887 98.2185 131.86 98.1628 131.838 cv
98.0359 132.028 97.9763 132.173 97.9841 132.274 cv
97.9949 132.423 98.1892 132.516 98.5652 132.554 cv
98.6101 132.561 98.8074 132.583 99.158 132.618 cv
99.5085 132.654 99.7136 132.675 99.7732 132.682 cv
100.329 132.742 100.735 132.903 100.993 133.167 cv
101.25 133.429 101.379 133.804 101.379 134.294 cv
101.379 134.878 101.215 135.31 100.886 135.587 cv
100.558 135.866 100.012 136.004 99.2478 136.004 cv
cp
f
106.501 129.981 mo
107.631 129.981 li
107.631 129.349 li
107.631 129.014 107.589 128.773 107.505 128.628 cv
107.421 128.483 107.272 128.41 107.059 128.41 cv
106.844 128.41 106.696 128.492 106.618 128.656 cv
106.54 128.82 106.501 129.119 106.501 129.55 cv
106.501 129.981 li
cp
107.077 134.103 mo
106.32 134.103 105.775 133.894 105.443 133.476 cv
105.112 133.059 104.946 132.442 104.946 131.626 cv
104.946 129.752 li
104.946 128.935 105.114 128.319 105.449 127.901 cv
105.785 127.483 106.325 127.275 107.071 127.275 cv
107.466 127.275 107.799 127.333 108.069 127.448 cv
108.34 127.564 108.551 127.739 108.701 127.973 cv
108.852 128.209 108.96 128.48 109.022 128.788 cv
109.086 129.095 109.118 129.465 109.118 129.897 cv
109.118 130.764 li
106.501 130.764 li
106.501 131.759 li
106.501 131.898 106.502 132.004 106.504 132.082 cv
106.506 132.158 106.511 132.25 106.523 132.358 cv
106.534 132.466 106.552 132.55 106.576 132.61 cv
106.674 132.792 li
106.836 132.922 li
107.071 132.962 li
107.28 132.962 107.426 132.888 107.508 132.741 cv
107.589 132.594 107.631 132.38 107.631 132.101 cv
107.631 131.72 li
109.112 131.72 li
109.112 131.983 li
109.112 132.669 108.941 133.194 108.6 133.557 cv
108.26 133.921 107.752 134.103 107.077 134.103 cv
cp
f
110.287 133.997 mo
110.287 124.724 li
111.852 124.724 li
111.852 133.997 li
110.287 133.997 li
cp
f
113.133 133.997 mo
113.133 127.376 li
114.699 127.376 li
114.699 133.997 li
113.133 133.997 li
cp
113.133 126.33 mo
113.133 125.009 li
114.704 125.009 li
114.704 126.33 li
113.133 126.33 li
cp
f
117.775 134.086 mo
117.472 134.083 117.217 134.032 117.006 133.935 cv
116.795 133.838 116.633 133.7 116.519 133.518 cv
116.405 133.337 116.323 133.135 116.273 132.912 cv
116.222 132.688 116.198 132.427 116.198 132.128 cv
116.198 128.41 li
115.544 128.41 li
115.544 127.376 li
116.198 127.376 li
116.198 125.429 li
117.769 125.429 li
117.769 127.376 li
118.776 127.376 li
118.776 128.41 li
117.769 128.41 li
117.769 132.229 li
117.769 132.446 117.816 132.601 117.912 132.697 cv
118.007 132.792 118.159 132.841 118.368 132.844 cv
118.512 132.848 118.672 132.837 118.843 132.811 cv
118.843 134.007 li
118.399 134.067 118.043 134.093 117.775 134.086 cv
cp
f
119.827 135.568 mo
119.659 134.981 li
119.88 134.925 120.059 134.812 120.199 134.642 cv
120.339 134.473 120.409 134.257 120.409 133.997 cv
119.587 133.997 li
119.587 132.481 li
121.125 132.481 li
121.125 133.89 li
121.125 134.837 120.692 135.397 119.827 135.568 cv
cp
f
126.649 134.103 mo
126.101 134.103 125.652 133.95 125.302 133.644 cv
124.951 133.338 124.711 132.899 124.58 132.325 cv
125.765 131.894 li
125.847 132.259 125.963 132.536 126.112 132.724 cv
126.261 132.913 126.448 133.003 126.672 132.996 cv
126.836 132.992 126.97 132.933 127.077 132.82 cv
127.183 132.706 127.232 132.567 127.225 132.403 cv
127.21 132.165 126.992 131.864 126.571 131.503 cv
125.681 130.742 li
125.04 130.19 124.727 129.614 124.742 129.014 cv
124.753 128.485 124.933 128.062 125.282 127.748 cv
125.631 127.432 126.075 127.275 126.615 127.275 cv
127.134 127.275 127.555 127.431 127.88 127.745 cv
128.204 128.057 128.414 128.477 128.511 129.003 cv
127.482 129.433 li
127.341 128.748 127.076 128.403 126.688 128.399 cv
126.524 128.395 126.392 128.445 126.294 128.549 cv
126.195 128.654 126.145 128.779 126.145 128.924 cv
126.142 129.126 126.327 129.388 126.699 129.712 cv
127.605 130.535 li
127.759 130.669 127.885 130.79 127.985 130.896 cv
128.087 131.002 128.191 131.131 128.302 131.285 cv
128.412 131.437 128.494 131.601 128.548 131.777 cv
128.601 131.952 128.629 132.14 128.629 132.341 cv
128.629 132.901 128.443 133.334 128.072 133.641 cv
127.701 133.949 127.227 134.103 126.649 134.103 cv
cp
f
130.905 129.981 mo
132.035 129.981 li
132.035 129.349 li
132.035 129.014 131.993 128.773 131.909 128.628 cv
131.825 128.483 131.677 128.41 131.464 128.41 cv
131.248 128.41 131.1 128.492 131.022 128.656 cv
130.944 128.82 130.905 129.119 130.905 129.55 cv
130.905 129.981 li
cp
131.481 134.103 mo
130.724 134.103 130.179 133.894 129.847 133.476 cv
129.516 133.059 129.35 132.442 129.35 131.626 cv
129.35 129.752 li
129.35 128.935 129.518 128.319 129.853 127.901 cv
130.189 127.483 130.729 127.275 131.475 127.275 cv
131.87 127.275 132.203 127.333 132.473 127.448 cv
132.744 127.564 132.955 127.739 133.105 127.973 cv
133.257 128.209 133.364 128.48 133.427 128.788 cv
133.49 129.095 133.522 129.465 133.522 129.897 cv
133.522 130.764 li
130.905 130.764 li
130.905 131.759 li
130.905 131.898 130.906 132.004 130.908 132.082 cv
130.91 132.158 130.916 132.25 130.927 132.358 cv
130.938 132.466 130.956 132.55 130.98 132.61 cv
131.078 132.792 li
131.24 132.922 li
131.475 132.962 li
131.684 132.962 131.83 132.888 131.912 132.741 cv
131.993 132.594 132.035 132.38 132.035 132.101 cv
132.035 131.72 li
133.516 131.72 li
133.516 131.983 li
133.516 132.669 133.345 133.194 133.005 133.557 cv
132.664 133.921 132.156 134.103 131.481 134.103 cv
cp
f
136.642 132.984 mo
136.833 132.984 137.034 132.924 137.247 132.805 cv
137.247 128.578 li
137.034 128.443 136.831 128.377 136.637 128.377 cv
136.428 128.377 136.278 128.471 136.187 128.662 cv
136.095 128.852 136.05 129.094 136.05 129.388 cv
136.05 131.816 li
136.05 132.054 136.063 132.252 136.089 132.409 cv
136.115 132.565 136.174 132.7 136.265 132.814 cv
136.356 132.927 136.482 132.984 136.642 132.984 cv
cp
136.094 134.103 mo
135.554 134.103 135.149 133.911 134.882 133.527 cv
134.613 133.143 134.478 132.534 134.478 131.698 cv
134.478 129.774 li
134.478 129.42 134.506 129.099 134.559 128.812 cv
134.614 128.525 134.699 128.262 134.817 128.024 cv
134.934 127.786 135.099 127.601 135.311 127.47 cv
135.524 127.339 135.778 127.275 136.072 127.275 cv
136.49 127.275 136.882 127.444 137.247 127.784 cv
137.247 124.724 li
138.812 124.724 li
138.812 133.997 li
137.247 133.997 li
137.247 133.544 li
136.892 133.913 136.509 134.099 136.094 134.103 cv
cp
f
144.857 132.984 mo
145.048 132.984 145.249 132.924 145.462 132.805 cv
145.462 128.578 li
145.249 128.443 145.046 128.377 144.852 128.377 cv
144.643 128.377 144.493 128.471 144.402 128.662 cv
144.31 128.852 144.264 129.094 144.264 129.388 cv
144.264 131.816 li
144.264 132.054 144.278 132.252 144.303 132.409 cv
144.33 132.565 144.388 132.7 144.48 132.814 cv
144.571 132.927 144.697 132.984 144.857 132.984 cv
cp
144.309 134.103 mo
143.769 134.103 143.364 133.911 143.096 133.527 cv
142.828 133.143 142.693 132.534 142.693 131.698 cv
142.693 129.774 li
142.693 129.42 142.72 129.099 142.774 128.812 cv
142.829 128.525 142.914 128.262 143.032 128.024 cv
143.149 127.786 143.314 127.601 143.526 127.47 cv
143.739 127.339 143.993 127.275 144.287 127.275 cv
144.705 127.275 145.096 127.444 145.462 127.784 cv
145.462 124.724 li
147.027 124.724 li
147.027 133.997 li
145.462 133.997 li
145.462 133.544 li
145.107 133.913 144.723 134.099 144.309 134.103 cv
cp
f
150.22 133.002 mo
150.347 133.002 150.451 132.973 150.531 132.918 cv
150.611 132.861 150.669 132.775 150.705 132.657 cv
150.74 132.54 150.763 132.426 150.774 132.316 cv
150.786 132.207 150.791 132.064 150.791 131.888 cv
150.791 129.489 li
150.791 129.351 150.788 129.237 150.783 129.145 cv
150.777 129.054 150.764 128.955 150.744 128.846 cv
150.723 128.738 150.692 128.653 150.651 128.591 cv
150.483 128.435 li
150.413 128.392 150.325 128.371 150.22 128.371 cv
150.094 128.371 149.99 128.4 149.91 128.458 cv
149.83 128.515 149.772 128.603 149.737 128.72 cv
149.701 128.837 149.678 128.952 149.667 129.061 cv
149.656 129.171 149.65 129.314 149.65 129.489 cv
149.65 131.888 li
149.65 132.026 149.653 132.141 149.659 132.232 cv
149.664 132.324 149.677 132.422 149.698 132.529 cv
149.719 132.635 149.749 132.718 149.79 132.78 cv
149.958 132.937 li
150.028 132.98 150.116 133.002 150.22 133.002 cv
cp
150.215 134.103 mo
149.503 134.103 148.972 133.903 148.624 133.502 cv
148.275 133.101 148.101 132.528 148.101 131.782 cv
148.101 129.595 li
148.101 128.85 148.275 128.277 148.624 127.876 cv
148.972 127.475 149.503 127.275 150.215 127.275 cv
150.93 127.275 151.465 127.475 151.817 127.876 cv
152.17 128.277 152.345 128.85 152.345 129.595 cv
152.345 131.782 li
152.345 132.528 152.17 133.101 151.817 133.502 cv
151.465 133.903 150.93 134.103 150.215 134.103 cv
cp
f
157.647 129.981 mo
158.777 129.981 li
158.777 129.349 li
158.777 129.014 158.735 128.773 158.651 128.628 cv
158.567 128.483 158.419 128.41 158.206 128.41 cv
157.99 128.41 157.843 128.492 157.764 128.656 cv
157.686 128.82 157.647 129.119 157.647 129.55 cv
157.647 129.981 li
cp
158.223 134.103 mo
157.467 134.103 156.922 133.894 156.59 133.476 cv
156.259 133.059 156.093 132.442 156.093 131.626 cv
156.093 129.752 li
156.093 128.935 156.26 128.319 156.595 127.901 cv
156.931 127.483 157.471 127.275 158.218 127.275 cv
158.612 127.275 158.945 127.333 159.216 127.448 cv
159.486 127.564 159.697 127.739 159.847 127.973 cv
159.999 128.209 160.106 128.48 160.169 128.788 cv
160.232 129.095 160.264 129.465 160.264 129.897 cv
160.264 130.764 li
157.647 130.764 li
157.647 131.759 li
157.647 131.898 157.648 132.004 157.65 132.082 cv
157.652 132.158 157.658 132.25 157.67 132.358 cv
157.68 132.466 157.698 132.55 157.722 132.61 cv
157.82 132.792 li
157.982 132.922 li
158.218 132.962 li
158.427 132.962 158.572 132.888 158.654 132.741 cv
158.735 132.594 158.777 132.38 158.777 132.101 cv
158.777 131.72 li
160.259 131.72 li
160.259 131.983 li
160.259 132.669 160.088 133.194 159.747 133.557 cv
159.406 133.921 158.898 134.103 158.223 134.103 cv
cp
f
161.383 133.997 mo
161.383 127.376 li
162.949 127.376 li
162.949 133.997 li
161.383 133.997 li
cp
161.383 126.33 mo
161.383 125.009 li
162.954 125.009 li
162.954 126.33 li
161.383 126.33 li
cp
f
165.219 134.097 mo
164.843 134.097 164.568 133.96 164.394 133.683 cv
164.221 133.408 164.135 133.068 164.135 132.666 cv
164.135 127.376 li
165.695 127.376 li
165.695 132.347 li
165.695 132.552 165.726 132.705 165.79 132.805 cv
165.853 132.906 165.97 132.955 166.142 132.951 cv
166.325 132.951 166.549 132.858 166.813 132.671 cv
166.813 127.376 li
168.374 127.376 li
168.374 133.997 li
166.813 133.997 li
166.813 133.376 li
166.288 133.857 165.757 134.097 165.219 134.097 cv
cp
f
171.299 134.103 mo
170.751 134.103 170.302 133.95 169.951 133.644 cv
169.6 133.338 169.36 132.899 169.229 132.325 cv
170.415 131.894 li
170.497 132.259 170.612 132.536 170.761 132.724 cv
170.911 132.913 171.097 133.003 171.321 132.996 cv
171.485 132.992 171.62 132.933 171.726 132.82 cv
171.833 132.706 171.882 132.567 171.875 132.403 cv
171.859 132.165 171.641 131.864 171.22 131.503 cv
170.331 130.742 li
169.689 130.19 169.377 129.614 169.391 129.014 cv
169.402 128.485 169.583 128.062 169.931 127.748 cv
170.28 127.432 170.724 127.275 171.264 127.275 cv
171.783 127.275 172.205 127.431 172.529 127.745 cv
172.853 128.057 173.063 128.477 173.161 129.003 cv
172.132 129.433 li
171.99 128.748 171.725 128.403 171.338 128.399 cv
171.174 128.395 171.042 128.445 170.943 128.549 cv
170.844 128.654 170.795 128.779 170.795 128.924 cv
170.792 129.126 170.976 129.388 171.348 129.712 cv
172.255 130.535 li
172.408 130.669 172.534 130.79 172.635 130.896 cv
172.736 131.002 172.841 131.131 172.951 131.285 cv
173.061 131.437 173.143 131.601 173.197 131.777 cv
173.251 131.952 173.278 132.14 173.278 132.341 cv
173.278 132.901 173.093 133.334 172.721 133.641 cv
172.35 133.949 171.877 134.103 171.299 134.103 cv
cp
f
174.123 133.997 mo
174.123 127.376 li
175.61 127.376 li
175.61 127.957 li
176.053 127.491 176.578 127.257 177.181 127.257 cv
177.733 127.257 178.1 127.528 178.283 128.069 cv
178.75 127.528 179.306 127.257 179.956 127.257 cv
180.325 127.257 180.621 127.392 180.844 127.661 cv
181.068 127.929 181.18 128.319 181.18 128.83 cv
181.18 133.997 li
179.692 133.997 li
179.692 128.963 li
179.692 128.721 179.652 128.549 179.572 128.449 cv
179.492 128.348 179.374 128.3 179.218 128.303 cv
178.945 128.311 178.671 128.44 178.395 128.689 cv
178.398 128.756 li
178.401 128.83 li
178.401 133.997 li
176.919 133.997 li
176.919 128.963 li
176.919 128.721 176.879 128.549 176.799 128.449 cv
176.719 128.348 176.598 128.3 176.438 128.303 cv
176.177 128.311 175.901 128.442 175.61 128.695 cv
175.61 133.997 li
174.123 133.997 li
cp
f
184.334 133.002 mo
184.461 133.002 184.564 132.973 184.644 132.918 cv
184.724 132.861 184.782 132.775 184.818 132.657 cv
184.853 132.54 184.877 132.426 184.887 132.316 cv
184.899 132.207 184.904 132.064 184.904 131.888 cv
184.904 129.489 li
184.904 129.351 184.901 129.237 184.896 129.145 cv
184.89 129.054 184.878 128.955 184.857 128.846 cv
184.837 128.738 184.805 128.653 184.764 128.591 cv
184.596 128.435 li
184.526 128.392 184.438 128.371 184.334 128.371 cv
184.207 128.371 184.103 128.4 184.023 128.458 cv
183.943 128.515 183.885 128.603 183.85 128.72 cv
183.814 128.837 183.792 128.952 183.78 129.061 cv
183.769 129.171 183.763 129.314 183.763 129.489 cv
183.763 131.888 li
183.763 132.026 183.766 132.141 183.772 132.232 cv
183.777 132.324 183.791 132.422 183.811 132.529 cv
183.832 132.635 183.862 132.718 183.903 132.78 cv
184.071 132.937 li
184.141 132.98 184.229 133.002 184.334 133.002 cv
cp
184.328 134.103 mo
183.616 134.103 183.086 133.903 182.737 133.502 cv
182.388 133.101 182.215 132.528 182.215 131.782 cv
182.215 129.595 li
182.215 128.85 182.388 128.277 182.737 127.876 cv
183.086 127.475 183.616 127.275 184.328 127.275 cv
185.044 127.275 185.578 127.475 185.93 127.876 cv
186.283 128.277 186.459 128.85 186.459 129.595 cv
186.459 131.782 li
186.459 132.528 186.283 133.101 185.93 133.502 cv
185.578 133.903 185.044 134.103 184.328 134.103 cv
cp
f
189.585 132.984 mo
189.775 132.984 189.976 132.924 190.189 132.805 cv
190.189 128.578 li
189.976 128.443 189.773 128.377 189.58 128.377 cv
189.371 128.377 189.22 128.471 189.13 128.662 cv
189.038 128.852 188.992 129.094 188.992 129.388 cv
188.992 131.816 li
188.992 132.054 189.006 132.252 189.031 132.409 cv
189.057 132.565 189.116 132.7 189.208 132.814 cv
189.299 132.927 189.425 132.984 189.585 132.984 cv
cp
189.037 134.103 mo
188.497 134.103 188.092 133.911 187.824 133.527 cv
187.555 133.143 187.421 132.534 187.421 131.698 cv
187.421 129.774 li
187.421 129.42 187.448 129.099 187.502 128.812 cv
187.556 128.525 187.641 128.262 187.76 128.024 cv
187.877 127.786 188.042 127.601 188.254 127.47 cv
188.467 127.339 188.72 127.275 189.014 127.275 cv
189.432 127.275 189.824 127.444 190.189 127.784 cv
190.189 124.724 li
191.755 124.724 li
191.755 133.997 li
190.189 133.997 li
190.189 133.544 li
189.835 133.913 189.451 134.099 189.037 134.103 cv
cp
f
197.594 134.086 mo
197.291 134.083 197.035 134.032 196.824 133.935 cv
196.613 133.838 196.451 133.7 196.338 133.518 cv
196.223 133.337 196.141 133.135 196.092 132.912 cv
196.041 132.688 196.016 132.427 196.016 132.128 cv
196.016 128.41 li
195.362 128.41 li
195.362 127.376 li
196.016 127.376 li
196.016 125.429 li
197.588 125.429 li
197.588 127.376 li
198.594 127.376 li
198.594 128.41 li
197.588 128.41 li
197.588 132.229 li
197.588 132.446 197.635 132.601 197.73 132.697 cv
197.825 132.792 197.977 132.841 198.186 132.844 cv
198.331 132.848 198.49 132.837 198.661 132.811 cv
198.661 134.007 li
198.218 134.067 197.861 134.093 197.594 134.086 cv
cp
f
200.982 129.981 mo
202.112 129.981 li
202.112 129.349 li
202.112 129.014 202.07 128.773 201.986 128.628 cv
201.902 128.483 201.754 128.41 201.541 128.41 cv
201.325 128.41 201.177 128.492 201.099 128.656 cv
201.021 128.82 200.982 129.119 200.982 129.55 cv
200.982 129.981 li
cp
201.558 134.103 mo
200.802 134.103 200.257 133.894 199.925 133.476 cv
199.594 133.059 199.427 132.442 199.427 131.626 cv
199.427 129.752 li
199.427 128.935 199.595 128.319 199.93 127.901 cv
200.266 127.483 200.806 127.275 201.552 127.275 cv
201.947 127.275 202.28 127.333 202.551 127.448 cv
202.821 127.564 203.032 127.739 203.182 127.973 cv
203.334 128.209 203.441 128.48 203.504 128.788 cv
203.567 129.095 203.599 129.465 203.599 129.897 cv
203.599 130.764 li
200.982 130.764 li
200.982 131.759 li
200.982 131.898 200.983 132.004 200.985 132.082 cv
200.987 132.158 200.993 132.25 201.005 132.358 cv
201.015 132.466 201.033 132.55 201.057 132.61 cv
201.155 132.792 li
201.317 132.922 li
201.552 132.962 li
201.761 132.962 201.907 132.888 201.989 132.741 cv
202.07 132.594 202.112 132.38 202.112 132.101 cv
202.112 131.72 li
203.594 131.72 li
203.594 131.983 li
203.594 132.669 203.423 133.194 203.082 133.557 cv
202.741 133.921 202.233 134.103 201.558 134.103 cv
cp
f
204.668 133.997 mo
204.668 127.376 li
206.155 127.376 li
206.155 127.957 li
206.598 127.491 207.123 127.257 207.726 127.257 cv
208.278 127.257 208.645 127.528 208.828 128.069 cv
209.295 127.528 209.851 127.257 210.501 127.257 cv
210.87 127.257 211.166 127.392 211.389 127.661 cv
211.613 127.929 211.725 128.319 211.725 128.83 cv
211.725 133.997 li
210.237 133.997 li
210.237 128.963 li
210.237 128.721 210.197 128.549 210.117 128.449 cv
210.037 128.348 209.919 128.3 209.762 128.303 cv
209.49 128.311 209.216 128.44 208.94 128.689 cv
208.943 128.756 li
208.946 128.83 li
208.946 133.997 li
207.464 133.997 li
207.464 128.963 li
207.464 128.721 207.424 128.549 207.344 128.449 cv
207.263 128.348 207.143 128.3 206.983 128.303 cv
206.721 128.311 206.446 128.442 206.155 128.695 cv
206.155 133.997 li
204.668 133.997 li
cp
f
215.136 132.979 mo
215.252 132.979 215.348 132.946 215.427 132.881 cv
215.506 132.816 215.562 132.72 215.597 132.595 cv
215.633 132.471 215.657 132.342 215.67 132.21 cv
215.683 132.078 215.69 131.919 215.69 131.732 cv
215.69 129.45 li
215.69 129.297 215.681 129.16 215.665 129.039 cv
215.648 128.918 215.619 128.802 215.578 128.692 cv
215.537 128.583 215.475 128.499 215.393 128.441 cv
215.311 128.382 215.213 128.356 215.096 128.36 cv
214.891 128.363 214.676 128.451 214.448 128.623 cv
214.448 132.772 li
214.672 132.91 214.901 132.979 215.136 132.979 cv
cp
212.883 136.177 mo
212.883 127.376 li
214.448 127.376 li
214.448 127.884 li
214.858 127.474 215.303 127.271 215.785 127.275 cv
216.019 127.278 216.227 127.333 216.408 127.437 cv
216.59 127.542 216.731 127.67 216.834 127.826 cv
216.936 127.98 217.019 128.163 217.085 128.374 cv
217.15 128.585 217.194 128.78 217.217 128.961 cv
217.239 129.141 217.25 129.325 217.25 129.511 cv
217.25 131.681 li
217.25 132.017 217.222 132.326 217.166 132.607 cv
217.11 132.888 217.022 133.144 216.903 133.373 cv
216.784 133.602 216.621 133.782 216.414 133.91 cv
216.207 134.039 215.964 134.103 215.684 134.103 cv
215.274 134.103 214.862 133.904 214.448 133.504 cv
214.448 136.177 li
212.883 136.177 li
cp
f
220.337 133.002 mo
220.464 133.002 220.567 132.973 220.647 132.918 cv
220.727 132.861 220.785 132.775 220.821 132.657 cv
220.856 132.54 220.88 132.426 220.89 132.316 cv
220.902 132.207 220.907 132.064 220.907 131.888 cv
220.907 129.489 li
220.907 129.351 220.904 129.237 220.899 129.145 cv
220.893 129.054 220.881 128.955 220.86 128.846 cv
220.84 128.738 220.808 128.653 220.767 128.591 cv
220.599 128.435 li
220.529 128.392 220.441 128.371 220.337 128.371 cv
220.21 128.371 220.106 128.4 220.026 128.458 cv
219.946 128.515 219.888 128.603 219.853 128.72 cv
219.817 128.837 219.795 128.952 219.783 129.061 cv
219.772 129.171 219.766 129.314 219.766 129.489 cv
219.766 131.888 li
219.766 132.026 219.769 132.141 219.775 132.232 cv
219.78 132.324 219.794 132.422 219.814 132.529 cv
219.835 132.635 219.865 132.718 219.906 132.78 cv
220.074 132.937 li
220.144 132.98 220.232 133.002 220.337 133.002 cv
cp
220.331 134.103 mo
219.619 134.103 219.089 133.903 218.74 133.502 cv
218.391 133.101 218.218 132.528 218.218 131.782 cv
218.218 129.595 li
218.218 128.85 218.391 128.277 218.74 127.876 cv
219.089 127.475 219.619 127.275 220.331 127.275 cv
221.047 127.275 221.581 127.475 221.933 127.876 cv
222.286 128.277 222.462 128.85 222.462 129.595 cv
222.462 131.782 li
222.462 132.528 222.286 133.101 221.933 133.502 cv
221.581 133.903 221.047 134.103 220.331 134.103 cv
cp
f
223.558 133.997 mo
223.558 127.376 li
225.124 127.376 li
225.124 128.393 li
225.344 128.002 225.566 127.72 225.792 127.548 cv
226.017 127.378 226.26 127.292 226.516 127.292 cv
226.752 127.319 li
226.752 128.869 li
226.576 128.801 226.395 128.768 226.209 128.768 cv
225.985 128.775 225.789 128.832 225.619 128.935 cv
225.449 129.04 225.284 129.213 225.124 129.456 cv
225.124 133.997 li
223.558 133.997 li
cp
f
202.754 166.475 mo
136.622 166.475 li
131.525 166.475 127.394 162.343 127.394 157.247 cv
127.394 152.151 131.525 148.019 136.622 148.019 cv
202.754 148.019 li
207.85 148.019 211.982 152.151 211.982 157.247 cv
211.982 162.343 207.85 166.475 202.754 166.475 cv
cp
0 .912535 0 0 cmyk
f
146.545 161.355 mo
146.545 153.566 li
147.963 153.566 li
147.963 160.374 li
149.828 160.374 li
149.828 161.355 li
146.545 161.355 li
cp
0 0 0 0 cmyk
f
150.58 161.355 mo
150.58 153.566 li
153.84 153.566 li
153.84 154.567 li
151.998 154.567 li
151.998 156.803 li
153.455 156.803 li
153.455 157.803 li
151.998 157.803 li
151.998 160.374 li
153.863 160.374 li
153.863 161.355 li
150.58 161.355 li
cp
f
156.086 158.621 mo
157.129 158.621 li
156.607 155.421 li
156.086 158.621 li
cp
154.277 161.355 mo
155.86 153.566 li
157.34 153.566 li
158.919 161.355 li
157.598 161.355 li
157.284 159.546 li
155.935 159.546 li
155.616 161.355 li
154.277 161.355 li
cp
f
161.102 156.892 mo
161.445 156.892 li
161.865 156.892 162.164 156.803 162.341 156.625 cv
162.517 156.446 162.606 156.14 162.606 155.709 cv
162.606 155.292 162.529 154.994 162.376 154.813 cv
162.222 154.633 161.94 154.544 161.53 154.544 cv
161.102 154.544 li
161.102 156.892 li
cp
159.684 161.355 mo
159.684 153.566 li
161.469 153.566 li
161.88 153.566 162.231 153.6 162.526 153.668 cv
162.82 153.735 163.076 153.847 163.294 154.005 cv
163.511 154.164 163.675 154.378 163.783 154.649 cv
163.89 154.919 163.945 155.252 163.945 155.642 cv
163.945 156.131 163.872 156.531 163.726 156.84 cv
163.581 157.151 163.341 157.377 163.006 157.517 cv
164.086 161.355 li
162.662 161.355 li
161.732 157.798 li
161.102 157.798 li
161.102 161.355 li
159.684 161.355 li
cp
f
165.021 161.355 mo
165.021 153.566 li
165.998 153.566 li
167.905 157.977 li
167.905 153.566 li
169.08 153.566 li
169.08 161.355 li
168.149 161.355 li
166.223 156.718 li
166.223 161.355 li
165.021 161.355 li
cp
f
172.579 161.355 mo
172.706 153.566 li
174.162 153.566 li
175.29 159.039 li
176.45 153.566 li
177.874 153.566 li
178.005 161.355 li
176.933 161.355 li
176.84 155.99 li
175.717 161.355 li
174.885 161.355 li
173.749 155.971 li
173.664 161.355 li
172.579 161.355 li
cp
f
180.92 160.336 mo
181.018 160.377 181.136 160.397 181.274 160.397 cv
181.412 160.397 181.529 160.377 181.627 160.336 cv
181.723 160.294 181.802 160.242 181.859 160.176 cv
181.917 160.11 181.963 160.024 181.995 159.918 cv
182.028 159.811 182.051 159.705 182.061 159.598 cv
182.072 159.492 182.078 159.365 182.078 159.217 cv
182.078 155.68 li
182.078 155.492 182.068 155.336 182.05 155.211 cv
182.031 155.086 181.994 154.967 181.939 154.856 cv
181.885 154.745 181.802 154.662 181.692 154.607 cv
181.583 154.552 181.443 154.525 181.274 154.525 cv
181.105 154.525 180.965 154.552 180.853 154.607 cv
180.743 154.662 180.66 154.745 180.607 154.856 cv
180.553 154.967 180.518 155.086 180.499 155.211 cv
180.48 155.336 180.47 155.492 180.47 155.68 cv
180.47 159.217 li
180.47 159.365 180.476 159.492 180.487 159.598 cv
180.498 159.705 180.52 159.811 180.553 159.918 cv
180.586 160.024 180.631 160.11 180.687 160.176 cv
180.743 160.242 180.821 160.294 180.92 160.336 cv
cp
181.274 161.449 mo
180.472 161.449 179.898 161.231 179.551 160.796 cv
179.203 160.361 179.029 159.723 179.029 158.884 cv
179.029 156.009 li
179.029 155.595 179.068 155.237 179.146 154.933 cv
179.224 154.629 179.35 154.367 179.524 154.144 cv
179.698 153.921 179.93 153.754 180.221 153.644 cv
180.513 153.533 180.864 153.477 181.274 153.477 cv
182.073 153.477 182.646 153.691 182.996 154.121 cv
183.345 154.549 183.519 155.179 183.519 156.009 cv
183.519 158.884 li
183.519 159.292 183.48 159.649 183.4 159.958 cv
183.32 160.266 183.193 160.534 183.019 160.76 cv
182.845 160.988 182.613 161.16 182.322 161.275 cv
182.031 161.391 181.681 161.449 181.274 161.449 cv
cp
f
185.977 156.892 mo
186.32 156.892 li
186.74 156.892 187.039 156.803 187.216 156.625 cv
187.392 156.446 187.481 156.14 187.481 155.709 cv
187.481 155.292 187.404 154.994 187.251 154.813 cv
187.097 154.633 186.815 154.544 186.405 154.544 cv
185.977 154.544 li
185.977 156.892 li
cp
184.559 161.355 mo
184.559 153.566 li
186.344 153.566 li
186.755 153.566 187.106 153.6 187.401 153.668 cv
187.695 153.735 187.951 153.847 188.169 154.005 cv
188.386 154.164 188.55 154.378 188.658 154.649 cv
188.765 154.919 188.82 155.252 188.82 155.642 cv
188.82 156.131 188.747 156.531 188.601 156.84 cv
188.456 157.151 188.216 157.377 187.881 157.517 cv
188.961 161.355 li
187.537 161.355 li
186.607 157.798 li
185.977 157.798 li
185.977 161.355 li
184.559 161.355 li
cp
f
189.895 161.355 mo
189.895 153.566 li
193.155 153.566 li
193.155 154.567 li
191.313 154.567 li
191.313 156.803 li
192.77 156.803 li
192.77 157.803 li
191.313 157.803 li
191.313 160.374 li
193.178 160.374 li
193.178 161.355 li
189.895 161.355 li
cp
f
60.739 96.6939 mo
61.7917 96.6939 li
62.1589 96.6939 62.4802 96.6617 62.7576 96.5963 cv
63.0349 96.5308 63.2673 96.4537 63.4548 96.3638 cv
63.6423 96.274 63.7996 96.1275 63.9265 95.9234 cv
64.0525 95.7193 64.1482 95.5318 64.2136 95.3609 cv
64.2791 95.189 64.3279 94.9302 64.3601 94.5836 cv
64.3933 94.2379 64.4138 93.942 64.4216 93.6968 cv
64.4294 93.4527 64.4343 93.0894 64.4343 92.608 cv
64.4343 85.1949 li
64.4343 84.7134 64.4255 84.3267 64.4099 84.0328 cv
64.3933 83.7388 64.3542 83.4439 64.2937 83.1461 cv
64.2322 82.8482 64.1423 82.6177 64.0242 82.4547 cv
63.906 82.2916 63.7488 82.1431 63.5535 82.0084 cv
63.3572 81.8736 63.113 81.7798 62.8191 81.7271 cv
62.5251 81.6734 62.1707 81.647 61.7546 81.647 cv
60.739 81.647 li
60.739 96.6939 li
cp
57.0447 99.2877 mo
57.0447 79.0045 li
61.7673 79.0045 li
62.99 79.0045 64.0134 79.1275 64.8376 79.3716 cv
65.6609 79.6168 66.322 80.0035 66.8191 80.5338 cv
67.3171 81.064 67.6697 81.7144 67.8777 82.4849 cv
68.0857 83.2554 68.1892 84.2037 68.1892 85.3297 cv
68.1892 92.6451 li
68.1892 93.8033 68.0837 94.7857 67.8718 95.5933 cv
67.6589 96.4009 67.3103 97.0855 66.8259 97.648 cv
66.3406 98.2115 65.6941 98.6255 64.8865 98.8902 cv
64.0789 99.1548 63.0886 99.2877 61.9138 99.2877 cv
57.0447 99.2877 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
74.282 92.1675 mo
76.9978 92.1675 li
75.6394 83.8375 li
74.282 92.1675 li
cp
69.572 99.2877 mo
73.6951 79.0045 li
77.5486 79.0045 li
81.6589 99.2877 li
78.2214 99.2877 li
77.4011 94.5777 li
73.8904 94.5777 li
73.0583 99.2877 li
69.572 99.2877 li
cp
f
84.9246 99.2877 mo
84.9246 81.733 li
81.5232 81.733 li
81.5232 79.0045 li
91.9099 79.0045 li
91.9099 81.733 li
88.6189 81.733 li
88.6189 99.2877 li
84.9246 99.2877 li
cp
f
97.0847 92.1675 mo
99.8005 92.1675 li
98.4421 83.8375 li
97.0847 92.1675 li
cp
92.3748 99.2877 mo
96.4978 79.0045 li
100.351 79.0045 li
104.462 99.2877 li
101.024 99.2877 li
100.204 94.5777 li
96.6931 94.5777 li
95.8611 99.2877 li
92.3748 99.2877 li
cp
f
110.149 96.6822 mo
111.508 96.6822 li
112.608 96.6822 113.371 96.4254 113.795 95.9117 cv
114.219 95.397 114.431 94.5494 114.431 93.3668 cv
114.431 92.1431 114.193 91.2564 113.716 90.7056 cv
113.239 90.1558 112.437 89.8804 111.312 89.8804 cv
110.149 89.8804 li
110.149 96.6822 li
cp
110.149 87.275 mo
111.3 87.275 li
112.385 87.275 113.131 87.0425 113.538 86.5777 cv
113.946 86.1129 114.15 85.3297 114.15 84.2281 cv
114.15 83.6578 114.083 83.1949 113.948 82.8404 cv
113.813 82.4849 113.588 82.2183 113.269 82.0386 cv
112.951 81.8589 112.598 81.7408 112.211 81.6841 cv
111.823 81.6265 111.307 81.5982 110.664 81.5982 cv
110.149 81.5982 li
110.149 87.275 li
cp
106.455 99.2877 mo
106.455 79.0045 li
111.422 79.0045 li
112.36 79.0045 113.177 79.0884 113.875 79.2554 cv
114.572 79.4224 115.192 79.6998 115.734 80.0875 cv
116.276 80.4752 116.686 81.0113 116.964 81.6959 cv
117.241 82.3814 117.376 83.2095 117.367 84.1793 cv
117.359 86.6832 116.364 88.0816 114.383 88.3755 cv
115.581 88.6041 116.476 89.1275 117.067 89.9478 cv
117.659 90.7672 117.959 91.9195 117.967 93.4039 cv
117.974 95.3287 117.494 96.7906 116.523 97.7886 cv
115.552 98.7886 114.137 99.2877 112.278 99.2877 cv
106.455 99.2877 li
cp
f
123.998 92.1675 mo
126.714 92.1675 li
125.355 83.8375 li
123.998 92.1675 li
cp
119.288 99.2877 mo
123.411 79.0045 li
127.264 79.0045 li
131.375 99.2877 li
127.937 99.2877 li
127.117 94.5777 li
123.606 94.5777 li
122.774 99.2877 li
119.288 99.2877 li
cp
f
138.482 99.5328 mo
134.91 99.5328 133.034 97.4693 132.854 93.3423 cv
136.072 92.6695 li
136.153 95.3531 136.92 96.6939 138.372 96.6939 cv
138.934 96.6939 139.352 96.523 139.626 96.1802 cv
139.899 95.8375 140.035 95.3775 140.035 94.7984 cv
140.035 94.2349 139.933 93.7193 139.729 93.2505 cv
139.525 92.7818 139.289 92.398 139.02 92.1002 cv
138.751 91.8033 138.368 91.4341 137.87 90.9937 cv
135.203 88.6812 li
134.421 87.9966 133.837 87.2847 133.454 86.5464 cv
133.07 85.8091 132.879 84.8853 132.879 83.7759 cv
132.879 82.2017 133.342 80.9791 134.267 80.106 cv
135.193 79.233 136.464 78.7886 138.078 78.772 cv
138.82 78.7642 139.476 78.856 140.048 79.0474 cv
140.618 79.2398 141.09 79.4966 141.461 79.8179 cv
141.832 80.1402 142.141 80.5425 142.39 81.023 cv
142.639 81.5045 142.825 82.0045 142.947 82.522 cv
143.069 83.0396 143.155 83.6168 143.204 84.2525 cv
140.048 84.8765 li
140.031 84.4693 140.005 84.1148 139.969 83.8121 cv
139.931 83.5113 139.868 83.2047 139.778 82.8951 cv
139.688 82.5855 139.572 82.3345 139.429 82.1431 cv
139.287 81.9507 139.095 81.7984 138.855 81.6841 cv
138.614 81.5699 138.335 81.525 138.017 81.5494 cv
137.47 81.5816 137.052 81.7632 136.763 82.0933 cv
136.473 82.4244 136.329 82.8668 136.329 83.4214 cv
136.329 84.0738 136.457 84.6099 136.714 85.0298 cv
136.971 85.4498 137.373 85.9 137.919 86.3814 cv
140.561 88.6812 li
141.002 89.0806 141.385 89.4683 141.712 89.8433 cv
142.038 90.2183 142.349 90.647 142.647 91.1285 cv
142.945 91.6089 143.171 92.1392 143.326 92.7183 cv
143.481 93.2974 143.558 93.9088 143.558 94.5533 cv
143.558 96.0298 143.092 97.2281 142.158 98.15 cv
141.224 99.0718 139.999 99.5328 138.482 99.5328 cv
cp
f
145.723 99.2877 mo
145.723 79.0045 li
154.214 79.0045 li
154.214 81.6109 li
149.418 81.6109 li
149.418 87.4332 li
153.211 87.4332 li
153.211 90.0396 li
149.418 90.0396 li
149.418 96.731 li
154.275 96.731 li
154.275 99.2877 li
145.723 99.2877 li
cp
f
121.323 157.247 mo
121.323 159.042 119.868 160.497 118.073 160.497 cv
116.278 160.497 114.823 159.042 114.823 157.247 cv
114.823 155.452 116.278 153.997 118.073 153.997 cv
119.868 153.997 121.323 155.452 121.323 157.247 cv
cp
0 0 0 0 cmyk
f
105.583 160.497 mo
103.788 160.497 102.333 159.041 102.333 157.247 cv
102.333 155.452 103.788 153.997 105.583 153.997 cv
107.378 153.997 108.833 155.452 108.833 157.247 cv
108.833 159.041 107.378 160.497 105.583 160.497 cv
.159609 .0111391 0 0 cmyk
f
264.613 347.848 mo
242.022 334.805 li
264.612 321.763 li
287.203 334.806 li
264.613 347.848 li
cp
.470191 .0827344 .00714122 0 cmyk
f
245.457 325.011 mo
264.613 336.071 li
283.768 325.011 li
264.612 313.953 li
245.457 325.011 li
cp
264.613 339.772 mo
264.316 339.772 264.02 339.695 263.755 339.542 cv
241.164 326.499 li
240.633 326.192 240.304 325.625 240.304 325.011 cv
240.304 324.398 240.633 323.831 241.164 323.524 cv
263.754 310.482 li
264.285 310.175 264.939 310.175 265.47 310.482 cv
288.061 323.524 li
288.593 323.831 288.921 324.398 288.921 325.011 cv
288.921 325.625 288.594 326.192 288.061 326.499 cv
265.471 339.542 li
265.206 339.695 264.91 339.772 264.613 339.772 cv
cp
0 0 0 0 cmyk
f
287.203 314.821 mo
264.613 327.863 li
264.613 301.779 li
287.203 288.737 li
287.203 314.821 li
cp
level3{
gsave
clp
[33.6688 0 0 33.6688 262.475 300.954 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~nA6mgnA6mgnA?sin\['jn\d-kn\d0lo#3?no#3?no#<Eoo>WNpo>`Tro>`TroZ/ctoZ/fuoZ/fuouT!"
ouT!"ou]'$ou]'$p<,6&p<,9'p<5?(pWPH)pWYN+pWYQ,ps(`.ps(`.q9Lo0q9Lr1qTq,4qTq,4qTq,4
qU%56qp@>7qpID8qpID8r6mS;r6mS;rR<b=rR<e>rm`t@rm`t@rm`t@s40.Cs40.Cs494Ds497Es4B=F
s4B=Fs4KCHs4KCHs4TLJs4TLJs4TLKs4TOLs4]UMs4]UNs4]XOs4]XPs4f^Qs4faRs4faSs4ogTs4ogT
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.6688 0 0 33.6688 262.475 300.954 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~n*f`6n*f`6n*oi9nF5r:nF5r:nF?&=naZ/>naZ/>nac8Ao()ABo()ABo(2JEoCMSFoCMSFoCV\Io^qeJ
o^qeJo^qeJo^qhLp%A"Np%A"Np%A%Pp@e4Rp@e4Rp@e7Tp\4FVp\4IXq"XXZq"X[\q>'j^q>'j^q>'j^
q>'j_qYL'bqYL'bqYL'cqtp9fqtp9gr;?Kjr;?KkrVc]nrVc]nrVc]orr2oss8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
<~_83t(_8=(+_SX1,_Sa:/_o'C0_o0L3`5KU4`5T^7`Pog8`Q#p;`l?$<`lH-?a2c6@a2c6@a2l?CaN2HD
aN2KFaiVZHaiV]Jb0%lLb0%oNbKJ)PbKJ,Rbfn;Tbfn>Vc-=MXc-=PZcHa_\cHab^cd0q`cd0q`cd0tb
d*U.dd*U.edF$@hdF$@idaHRldaHRme'ldpe'ldqeC<!teC<!teC<!ue^`4#e^`4$f%/F'f%/F(f@SX+
f@SX+f\"j/f\"j/g"G'3g"G'3g"G'3g"G'3g=k97g=k97g=k97g=k97gY:K;gY:K;gY:K;gt^]?gt^]?
~>
<~0JG170JG170JG170JG170JP::0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0ekC;0etL>1,:U?1,:U?1,:U?
1,:U?1,:U?1,:U?1,:XA1G^gC1G^gC1G^gC1G^jE1c.$G1c.$G1c.$G1c.'I2)R6K2)R6K2)R6K2)R9M
2E!HO2E!HO2E!HO2E!HO2E!HO2E!HO2E!HP2`EZS2`EZS2`EZS2`EZS2`EZS2`EZS2`EZT3&ilW3&ilW
3&ilW3&ilW3&ilW3B9)[3B9)[3B9)[3]];_3]];_3]];_4$,Mc4$,Mc4$,Mc4?P_g4?P_g4?P_g4?P_g
~>
<~$O[=M$OdFP$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ$k3XT%1NaU%1NaU%1NaU%1NaU%1NaU%1NaU
%1NdW%LrsY%LrsY%LrsY%LrsY%LrsY%Ls![%hB0]%hB0]%hB0]%hB0]%hB0]%hB3_&.fBa&.fBa&.fBa
&.fBa&.fBa&.fBa&.fBb&J5Te&J5Te&J5Te&J5Te&J5Te&J5Te&J5Tf&eYfi&eYfi&eYfi&eYfi&eYfi
&eYfi',)#m',)#m',)#m',)#m'GM5q'GM5q'GM5q'bqGu'bqGu()@Z$()@Z$()@Z$(Ddl((Ddl((Ddl(
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
264.613 301.779 mo
242.023 288.737 li
264.612 275.695 li
287.202 288.737 li
264.613 301.779 li
cp
level3{
gsave
clp
[59.5775 0 0 59.5775 242.023 288.737 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.5775 0 0 59.5775 242.023 288.737 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`,pai`,pjrc-71&d-71&d-7:/g-RU8h-R^Ak-n$Jl-n$Jl-n-So
.4H\p.4H_r.Olnt.Olr!.k</%/1`A)/M/P+/M/S-/hSe10/#"50JG490ekF=1,:U?1,:XA1c.'I2)R9M
2E!HP2`EZT3&ilX3BB2_4$,Md4?P_h4[)%o5<qJ"5s[e'6:4+.6psF377Ka:7n?0B8P2TJ92&#R9hnGZ
:JXe`;,L4h;c?Xp<E3(#='&L+=^#!5>[1N=?!^iE?smDO@U`hWA7]=aB4kmlC2.O"Ci!s+Df9T6EH-#?
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tJ=#6tM?#RC\A#RC\A
#RC\B#mgnF$47+I$47+J$O[=N$k*OR%1NaU%1NaV%LrsY%LrsZ%hB0^&.fBb&J5Tf&eYfj',)#n'GV>t
'bqGu()@Z$(Ddl((`4),)&X;0)B'M4)]K_8*#oq<*??.@*ZcCF+<VdL+X&!P+sJ6V,U=W\,palb-RU;j
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!<E3%!
<E3%!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
264.613 327.863 mo
242.023 314.821 li
242.023 288.737 li
264.613 301.779 li
264.613 327.863 li
cp
level3{
gsave
clp
[60.8593 0 0 60.8593 214.069 266.113 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Pt;&XQ:V/YQ:V/YQ:_5ZQ:_8[QV%A\QV.G]QqIP^QqRV_R7m_`R8!eaRSEtcRna+eRnj1fS50:gSPTIi
SPTIiSl#XkT2GgmTMl$pTi;3rTi;3rU/_BtUK.U"UfRd$V-!s&VHF0)VcsE,W*BT.WEfc0Wa5u3X'Z/5
XC)>7X^MM9Y$q\;Y@It?Y[n.AZ"==CZY0[GZtTjI[;$$K[VQ9N[quHP\ShiU\o8#W]5\2Y]Q4G\^2sb`
^NL"c^j$7f_0HIi_Ku^l_gN!p`IA?t`dnU"a+=g%ab10)b(^H-b_Qf1c&*)5c\rG9d#Se>d?"t@dutCE
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.8593 0 0 60.8593 214.069 266.113 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Pa.N!Q'IW"Q'IW"Q'IW"Q'R`%QBmi&QC!r)Q^=&*Q^F/-R$a8.R$jA1R@9S5R[T\6R[]e9S"-"=S=H+>
S=H.@SXl@DSt;RHT:_dLTV.sNTV/!PTqS3TU8"EXUSFW\Unji`V5:&dVP^8hVl-JlW2Q\pWMuntWiE,#
X/i;&XK8M*Xf\_.Y-+q2YHP.6Yct@:Z*L[AZa7!F['[3J[C*EN[^NWR\%&rY\[f8^]"5Jb]=Y\f]Y2"m
^:q=q^V@Ou^qdb$_83t(_SX1,_o'F2`Pog8`l?$<a2c9BaiVZHb0%oNbfn;Tc-=PZcd0q`d*U.ddF$Cj
~>
<~84Z9B84Z9B84cBE8P)KF8P)KF8P2TI8kM]J8kVfM91qoN92&#Q9MJ5U9he>V9hnGY:/4PZ:/=Y]:JXb^
:JXe`:f("d;,L4h;GpFl;c?Un;c?Xp<)cjt<E3(#<`W:'='&L+=BJ^/>$>-7>?b?;>[1Q??!UcC?=$uG
?XI/J?smAN@:<SR@UinYA7T4^AS#FbAnPaiBP;'nBk_9rC27U$Ci!p)D/O60Df9Q5E,]c9EH6)@F)uDE
FEDYJG'8(RG^+IXH$O^^H[C-fI=6QnIt*!!JUrB'JqAW-KS5&5L5(J=LkpnEMMd=MN/WaVO,o?_OH>Tf
~>
<~!WiE)!WiE)!WiE)!WrN,!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sA`0"9\i1"9\i1"9\i1"9\i1
"9\i1"9\i1"9\l3"U,&5"U,&5"U,&5"U,)7"pP89"pP89"pP;;#6tJ=#6tJ=#6tJ=#6tM?#RC\A#RC\A
#RC\A#RC\A#RC\B#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnE#mgnF$47+I$47+I$47+I$47+J$O[=M
$O[=M$O[=M$k*OQ$k*OQ%1NaU%1NaU%1NaU%LrsY%LrsY%hB0]%hB0]&.fBa&.fBa&J5Te&J5Te&J5Te
~>
0 ]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
256.477 313.771 mo
250.159 310.124 li
250.159 302.828 li
256.477 306.476 li
256.477 313.771 li
cp
0 0 0 0 cmyk
f
517.554 207.352 mo
494.964 194.309 li
517.553 181.267 li
540.144 194.309 li
517.554 207.352 li
cp
.470191 .0827344 .00714122 0 cmyk
f
498.399 184.515 mo
517.554 195.574 li
536.709 184.515 li
517.553 173.457 li
498.399 184.515 li
cp
517.554 199.275 mo
517.258 199.275 516.962 199.198 516.696 199.044 cv
494.105 186.003 li
493.574 185.696 493.246 185.128 493.246 184.515 cv
493.246 183.902 493.574 183.335 494.105 183.028 cv
516.695 169.986 li
517.226 169.679 517.881 169.679 518.412 169.986 cv
541.003 183.028 li
541.534 183.335 541.862 183.902 541.862 184.515 cv
541.862 185.128 541.534 185.696 541.003 186.003 cv
518.413 199.044 li
518.147 199.198 517.851 199.275 517.554 199.275 cv
cp
0 0 0 0 cmyk
f
540.144 174.324 mo
517.554 187.367 li
517.554 161.283 li
540.144 148.24 li
540.144 174.324 li
cp
level3{
gsave
clp
[33.6688 0 0 33.6688 515.417 160.457 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.6688 0 0 33.6688 515.417 160.457 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
517.554 161.283 mo
494.965 148.24 li
517.553 135.198 li
540.144 148.241 li
517.554 161.283 li
cp
level3{
gsave
clp
[59.5775 0 0 59.5775 494.965 148.24 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.5775 0 0 59.5775 494.965 148.24 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
517.554 187.367 mo
494.965 174.324 li
494.965 148.24 li
517.554 161.283 li
517.554 187.367 li
cp
level3{
gsave
clp
[60.8593 0 0 60.8593 467.011 125.617 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.8593 0 0 60.8593 467.011 125.617 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
509.419 173.275 mo
503.1 169.628 li
503.1 162.332 li
509.419 165.979 li
509.419 173.275 li
cp
0 0 0 0 cmyk
f
511.237 148.316 mo
517.511 144.593 li
523.872 148.165 li
517.598 151.888 li
511.237 148.316 li
cp
f
517.554 347.848 mo
494.964 334.805 li
517.553 321.763 li
540.144 334.806 li
517.554 347.848 li
cp
.470191 .0827344 .00714122 0 cmyk
f
498.398 325.011 mo
517.554 336.071 li
536.71 325.011 li
517.553 313.953 li
498.398 325.011 li
cp
517.554 339.772 mo
517.258 339.772 516.962 339.695 516.696 339.542 cv
494.105 326.499 li
493.574 326.192 493.246 325.625 493.246 325.011 cv
493.246 324.398 493.574 323.831 494.105 323.524 cv
516.695 310.482 li
517.226 310.175 517.881 310.175 518.412 310.482 cv
541.003 323.524 li
541.534 323.831 541.862 324.398 541.862 325.011 cv
541.862 325.625 541.535 326.192 541.003 326.499 cv
518.413 339.542 li
518.147 339.695 517.851 339.772 517.554 339.772 cv
cp
0 0 0 0 cmyk
f
540.144 314.821 mo
517.554 327.863 li
517.554 301.779 li
540.144 288.737 li
540.144 314.821 li
cp
level3{
gsave
clp
[33.6688 0 0 33.6688 515.417 300.954 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.6688 0 0 33.6688 515.417 300.954 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
517.554 301.779 mo
494.965 288.737 li
517.553 275.695 li
540.143 288.737 li
517.554 301.779 li
cp
level3{
gsave
clp
[59.5775 0 0 59.5775 494.964 288.737 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.5775 0 0 59.5775 494.964 288.737 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
517.554 327.863 mo
494.965 314.821 li
494.965 288.737 li
517.554 301.779 li
517.554 327.863 li
cp
level3{
gsave
clp
[60.8593 0 0 60.8593 467.011 266.113 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.8593 0 0 60.8593 467.011 266.113 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
509.419 313.771 mo
503.1 310.124 li
503.1 302.828 li
509.419 306.476 li
509.419 313.771 li
cp
0 0 0 0 cmyk
f
264.613 207.352 mo
242.022 194.309 li
264.612 181.267 li
287.203 194.309 li
264.613 207.352 li
cp
.470191 .0827344 .00714122 0 cmyk
f
245.458 184.515 mo
264.613 195.574 li
283.767 184.515 li
264.612 173.457 li
245.458 184.515 li
cp
264.613 199.275 mo
264.316 199.275 264.02 199.198 263.755 199.044 cv
241.164 186.003 li
240.633 185.696 240.304 185.128 240.304 184.515 cv
240.304 183.902 240.633 183.335 241.164 183.028 cv
263.754 169.986 li
264.285 169.679 264.939 169.679 265.47 169.986 cv
288.061 183.028 li
288.593 183.335 288.921 183.902 288.921 184.515 cv
288.921 185.128 288.593 185.696 288.061 186.003 cv
265.471 199.044 li
265.206 199.198 264.91 199.275 264.613 199.275 cv
cp
0 0 0 0 cmyk
f
287.203 174.324 mo
264.613 187.367 li
264.613 161.283 li
287.203 148.24 li
287.203 174.324 li
cp
level3{
gsave
clp
[33.6688 0 0 33.6688 262.475 160.457 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[33.6688 0 0 33.6688 262.475 160.457 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
264.613 161.283 mo
242.023 148.24 li
264.612 135.198 li
287.202 148.241 li
264.613 161.283 li
cp
level3{
gsave
clp
[59.5775 0 0 59.5775 242.023 148.24 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.5775 0 0 59.5775 242.023 148.24 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
264.613 187.367 mo
242.023 174.324 li
242.023 148.24 li
264.613 161.283 li
264.613 187.367 li
cp
level3{
gsave
clp
[60.8593 0 0 60.8593 214.069 125.617 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[60.8593 0 0 60.8593 214.069 125.617 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
256.477 173.275 mo
250.159 169.628 li
250.159 162.332 li
256.477 165.979 li
256.477 173.275 li
cp
0 0 0 0 cmyk
f
441.099 207.578 mo
439.383 204.603 li
505.077 166.673 li
506.794 169.648 li
441.099 207.578 li
cp
f
385.753 299.475 mo
327.816 266.026 li
325.693 264.8 325.96 262.659 328.411 261.244 cv
389.817 225.699 li
392.269 224.284 395.977 224.129 398.1 225.355 cv
456.037 258.804 li
458.16 260.031 457.893 262.171 455.442 263.587 cv
394.036 299.131 li
391.584 300.547 387.876 300.701 385.753 299.475 cv
.470191 .0827344 .00714122 0 cmyk
f
386.611 284.461 mo
388.202 285.379 391.27 285.218 393.177 284.117 cv
454.582 248.573 li
455.441 248.077 455.753 247.572 455.753 247.354 cv
455.753 247.225 455.575 246.994 455.178 246.764 cv
397.242 213.315 li
395.651 212.396 392.583 212.557 390.676 213.659 cv
329.271 249.202 li
328.412 249.698 328.1 250.203 328.1 250.422 cv
328.1 250.549 328.278 250.782 328.676 251.011 cv
386.611 284.461 li
389.358 288.485 mo
387.704 288.485 386.112 288.138 384.894 287.435 cv
326.958 253.986 li
325.501 253.144 324.666 251.845 324.666 250.422 cv
324.666 248.816 325.718 247.288 327.552 246.228 cv
388.957 210.685 li
391.929 208.968 396.321 208.817 398.959 210.34 cv
456.895 243.79 li
458.352 244.63 459.187 245.929 459.187 247.354 cv
459.187 248.96 458.135 250.488 456.301 251.546 cv
394.896 287.09 li
393.297 288.014 391.286 288.485 389.358 288.485 cv
0 0 0 0 cmyk
f
389.803 272.61 mo
390.592 272.056 391.083 270.919 391.083 269.345 cv
391.083 127.9 li
391.083 126.416 390.646 124.815 389.934 123.409 cv
389.934 123.409 389.934 123.409 389.934 123.409 cv
400.857 117.102 li
401.964 116.463 li
401.964 116.463 li
431.033 99.68 li
432.14 99.0407 li
457.347 84.4869 li
458.067 85.9 458.515 87.5084 458.515 89.0015 cv
458.515 106.093 li
458.515 107.372 li
458.515 114.268 li
458.515 115.547 li
458.515 140.938 li
458.515 140.938 li
458.515 142.217 li
458.515 142.217 li
458.515 149.114 li
458.515 149.114 li
458.515 150.393 li
458.515 175.784 li
458.515 175.785 li
458.515 177.064 li
458.515 177.064 li
458.515 183.959 li
458.515 183.959 li
458.515 185.238 li
458.515 210.63 li
458.515 210.63 li
458.515 211.909 li
458.515 211.909 li
458.515 218.803 li
458.515 220.082 li
458.515 230.447 li
458.515 232.079 457.983 233.235 457.142 233.764 cv
457.144 233.77 li
457.024 233.839 li
456.992 233.858 li
448.338 238.849 li
444.902 240.831 li
440.606 243.309 li
440.606 243.309 li
439.498 243.948 li
434.899 246.6 li
389.803 272.61 li
level3{
gsave
clp
[121.145 0 0 121.145 366.994 156.071 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~dutCEe<CUHe<CUHeWgdJeWpmLeWpmMes@*PesI0Qf9mBTf:!HUfUEZXfUN`Yfpro[fprr\g7B,^g7K5`
gRfAbgRoGcgn>Yfh4bhhh4knjhP2%lhP;+mhPD1nhkhCqhkqLshl%Rti2@_!i2Rk#iMn"&ii=1(iiF:*
j/aC+j/jI,j/sR.jKBd2jKBd2jfg!5jfp'6k-639k-?9:kHcK=kHlQ>kHlT@kd;fCkd;fCkdDoEl*i)H
l*r2JlF8;KlFAALla\MOlaeVQm(4eSm(4hUm(=nVmCb+ZmCk1[mCk1[m_:C_m_CI`n%g[dn%g[dnA6mg
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[121.145 0 0 121.145 366.994 156.071 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~daQ[oe'ldpe'umseC<!teC<!teCE+"e^`4#e^i=&f%/F'f%8O*f@SX+f@\a.f\"j/f\+s2g"G'3g"P06
g=k97g=k<9gY:N=gt^]?gt^`Ah;-oCh;-oCh;-rEhVR,GhVR,GhVR/Ihr!>Khr!AMi8ESQiSibSiSieU
io8tWio8tWio8tXj5]1[j5]1\jQ,C_jQ,C`jlPUcjlPUdk2tggk2tggk2tghkND$kkND$kkND$lkih6o
kih6ol07Hsl07HslK[["lK[["lg*m&lg*m&lg*m&m-O**m-O**m-O**mHs<.mHs<.mdBN2mdBN2n*f`6
~>
<~P*;)nPEV2oPE_;rPa.N!Q'IW"Q'R`%QC!r)Q^F/-R$jA1R@9S5R[]e9S"-"=S=H+>S=Q4ASXuFESt;OF
St;RHT:_dLTV/!PTqS3TU8"BVU8"EXUSFW\Unji`V5:&dVP^8hVl-GjVl-JlWMukrWMuntWiE,#X/i;%
X/i;&XK8M*Xf\_.Y-+q1Y-+q2YHP.6Yct@9Yct@:Z*CR>ZEgdBZa7!EZa7!F['[3I['[3J[C*EN[^NWR
\$riU\$riU\@B&Y\@B&Y\[f8]]"5Ja]"5Ja]=Y\e]Y(ni]tM+m]tM+m^:q=q^V@Ou^qdb$^qdb$_83t(
~>
<~&J>]h&eYfi&eYfi&ebol',)#m',2,p'GM5q'GV>t'bqGu'c%Q#()@Z$()@Z$()Ic'(Ddl((Dmu+(`=2/
)&X;0)&X>2)B'M4)B'M4)B'P6)]K_8)]K_8)]Kb:*#ot>*??.@*??1B*Zc@D*ZcCF+!2RH+!2UJ+<VdL
+<VdL+<VdM+X&!Q+sJ3T+sJ3U,9nEX,9nEY,U=W\,U=W],pai`,paia-71&e-RU8h-RU8i-n$Jl-n$Jm
.4H\p.4H\p.4H\p.Olnt.k<,#.k<,#/1`>'/1`>'/M/P+/M/P+/M/P+/hSb//hSb/0/"t30/"t30JG17
~>
<~zzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE*!s8W-!s8W-!s8W-!s8W."9\i1"9\i1"9\i1"9\i2"U,&5"U,&5"U,&5"U,&6"
pP89"pP89"pP89"pP89#6tJ=#6tJ=#6tJ=#RC\A#RC\A#mgnE#mgnE#mgnE$47+I$47+I$O[=M$O[=M$
O[=M~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceCMYK
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
389.934 123.408 mo
389.176 121.91 388.107 120.632 386.922 119.948 cv
327.813 85.8219 li
327.226 85.4829 326.668 85.3224 326.161 85.3224 cv
325.829 85.3224 325.518 85.3917 325.238 85.5251 cv
392.552 46.6901 li
392.552 46.691 li
392.865 46.517 393.217 46.426 393.598 46.426 cv
394.103 46.426 394.659 46.5856 395.245 46.9233 cv
454.353 81.0494 li
455.531 81.73 456.593 82.9986 457.35 84.4849 cv
432.14 99.0405 li
431.032 99.6799 li
401.964 116.463 li
401.964 116.463 li
400.856 117.102 li
389.934 123.408 li
level3{
gsave
clp
[112.963 68.8262 -68.8262 112.963 328.887 70.1284 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[112.963 68.8262 -68.8262 112.963 328.887 70.1284 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
386.922 272.492 mo
327.813 238.366 li
325.515 237.039 323.651 233.479 323.651 230.414 cv
323.651 88.9683 li
323.651 85.9039 325.515 84.4947 327.813 85.8219 cv
386.922 119.948 li
389.219 121.275 391.083 124.835 391.083 127.9 cv
391.083 269.345 li
391.083 272.411 389.219 273.819 386.922 272.492 cv
.657221 .328313 0 0 cmyk
f
388.188 119.237 mo
329.081 85.1109 li
327.751 84.3433 326.568 84.4957 325.806 85.3521 cv
326.402 85.2574 327.086 85.4019 327.813 85.8218 cv
386.922 119.948 li
389.219 121.275 391.083 124.836 391.083 127.9 cv
391.083 269.345 li
391.083 270.636 390.75 271.628 390.195 272.252 cv
391.479 272.048 392.35 270.729 392.35 268.634 cv
392.35 127.189 li
392.35 124.125 390.487 120.564 388.188 119.237 cv
cp
0 0 0 0 cmyk
f
383.203 263.977 mo
331.532 234.145 li
329.522 232.985 327.893 229.872 327.893 227.193 cv
327.893 95.8296 li
327.893 93.1509 329.522 91.9195 331.532 93.0797 cv
383.203 122.912 li
385.213 124.072 386.842 127.184 386.842 129.863 cv
386.842 261.226 li
386.842 263.906 385.213 265.137 383.203 263.977 cv
level3{
gsave
clp
[57.4901 15.8221 13.0274 84.1749 325.615 169.789 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hr=\:hr4V9hVeG7hV\A6h;A85gtr)3gYVu2g>2f0g>2f0g"cW.g"cW.f\?H,fA$?+f%U0)f%U0)e_:'(
e_1!'eCjm&eCag%e(F^$e(=X#db"O"danI!dFS?udFJ9tdFJ9tdFA3sd+&*rd*r$qcdVppcdMjocI2an
c-lXmbgHIkbgHIkbL-@jb0^1hajC(gajC(gaj:"faj:"faj0qeaNjhdaNabcaNabca3FYba3FYb`m"J`
`Q\A_`Q\A_`6A8^_or)\_or)\_or)\_TVu[_TMoZ_TDiY_TDiY_T;cX_8uZW_8uZW^rZQV^W?HU^W?HU
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.4901 15.8221 13.0274 84.1749 325.615 169.789 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~hVR,GhVR,GhVI#Dh;-oCh;$f@gtUT<gY1B8g=b04g"G'3g"=s0f\"j/f[na,f@JO(f%&=$e^`4#e^W*u
eC<!teC;sre'ldpe'landaHRldaHOjdF$@hdF$=fd*U.dd*U.dd*U.dd*U+bcd0q`cd0n^cHa_\cHa\Z
c-=MWbfn;SbKJ)PbKJ)Ob0%lKaiVZGaN2HDaN2HDaN2HDaN2HDaN2HCa2c6@a2c6@a2c6?`l?$<`l?$;
`Pog8`5KU4`5KU4_o'C0_SX1,_SX1,_SX1,_83t(_83t(_83t(_83t(_83t(^qdb$^qdb$^V@Ou^:q=q
~>
<~io8tWio/kTiS`YPi8<GLhr!>Khqm5HhVR,GhVI#Dh;-oCh;$f@gt^]?gtUT<gY:K;gY1B8g=k97g=k97
g=k65g"G'3g"G$1f\"j/f\"g-f@SX+f@SU)f%/F'f%/C%e^`4#e^`1!eC<!teC;sre'ldpe'landaHRl
daHRldaHRkdF$@hdF$@hdF$@gd*U.dd*U.dd*U.ccd0q`cd0q_cHa_\cHa_[c-=MXc-=MXc-=MXc-=MW
bfn;Tbfn;Tbfn;Tbfn;TbKJ)PbKJ)PbKJ)PbKJ)Pb0%lLaiVZHaiVZHaN2HDaN2HDaN2HDaN2HDaN2HD
~>
0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
383.203 263.977 mo
331.532 234.145 li
329.522 232.985 327.893 229.872 327.893 227.193 cv
327.893 95.8296 li
327.893 93.1509 329.522 91.9195 331.532 93.0797 cv
383.203 122.912 li
385.213 124.072 386.842 127.184 386.842 129.863 cv
386.842 261.226 li
386.842 263.906 385.213 265.137 383.203 263.977 cv
level3{
gsave
clp
[57.4901 15.8221 13.0274 84.1749 325.615 169.789 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[57.4901 15.8221 13.0274 84.1749 325.615 169.789 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
383.203 263.977 mo
331.532 234.145 li
329.522 232.985 327.893 229.872 327.893 227.193 cv
327.893 95.8296 li
327.893 93.1509 329.522 91.9195 331.532 93.0797 cv
383.203 122.912 li
385.213 124.072 386.842 127.184 386.842 129.863 cv
386.842 261.226 li
386.842 263.906 385.213 265.137 383.203 263.977 cv
1 .866484 .240818 .0951247 cmyk
f
384.891 262.984 mo
333.22 233.152 li
331.211 231.992 329.582 228.878 329.582 226.2 cv
329.582 94.8365 li
329.582 93.9234 329.775 93.1832 330.104 92.6441 cv
328.804 92.6334 327.893 93.8267 327.893 95.8297 cv
327.893 227.193 li
327.893 229.872 329.522 232.985 331.532 234.145 cv
383.203 263.977 li
384.527 264.742 385.682 264.462 386.319 263.419 cv
385.881 263.416 385.398 263.276 384.891 262.984 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
383.203 203.666 mo
363.998 192.578 li
333.367 210.262 li
386.842 241.136 li
386.842 210.618 li
386.842 207.939 385.213 204.826 383.203 203.666 cv
1 .866484 .240818 .0951247 cmyk
f
383.203 176.748 mo
363.998 165.66 li
333.367 183.344 li
386.842 214.218 li
386.842 183.7 li
386.842 181.02 385.213 177.908 383.203 176.748 cv
f
383.203 149.83 mo
363.998 138.742 li
333.367 156.426 li
386.842 187.299 li
386.842 156.782 li
386.842 154.102 385.213 150.99 383.203 149.83 cv
f
383.203 122.912 mo
363.998 111.823 li
333.367 129.508 li
386.842 160.381 li
386.842 129.864 li
386.842 127.184 385.213 124.072 383.203 122.912 cv
f
383.203 122.912 mo
340.685 98.3639 li
333.367 102.589 li
386.842 133.462 li
386.842 129.864 li
386.842 127.184 385.213 124.072 383.203 122.912 cv
f
386.842 133.463 mo
333.367 102.589 li
333.367 119.603 li
386.842 150.476 li
386.842 133.463 li
.657221 .328313 0 0 cmyk
f
386.842 160.381 mo
333.367 129.507 li
333.367 146.521 li
386.842 177.395 li
386.842 160.381 li
f
386.842 187.299 mo
333.367 156.425 li
333.367 173.44 li
386.842 204.313 li
386.842 187.299 li
f
386.842 214.217 mo
333.367 183.344 li
333.367 200.358 li
386.842 231.231 li
386.842 214.217 li
f
386.842 241.136 mo
333.367 210.262 li
333.367 227.276 li
386.842 258.149 li
386.842 241.136 li
f
382.126 144.414 mo
341.847 121.16 li
340.711 120.503 339.789 118.742 339.789 117.225 cv
339.789 112.669 li
339.789 111.153 340.711 110.456 341.847 111.112 cv
382.126 134.367 li
383.262 135.023 384.184 136.785 384.184 138.3 cv
384.184 142.857 li
384.184 144.374 383.262 145.07 382.126 144.414 cv
1 .866484 .240818 .0951247 cmyk
f
382.353 144.528 mo
382.278 144.496 382.203 144.458 382.126 144.414 cv
341.847 121.16 li
340.711 120.503 339.789 118.742 339.789 117.225 cv
339.789 117.225 li
339.789 118.742 340.711 120.503 341.847 121.16 cv
382.126 144.414 li
382.203 144.458 382.278 144.496 382.353 144.528 cv
339.789 112.669 mo
339.789 111.544 340.296 110.87 341.022 110.865 cv
340.296 110.87 339.789 111.544 339.789 112.669 cv
341.034 110.865 mo
341.033 110.865 341.032 110.865 341.031 110.865 cv
341.031 110.865 li
341.032 110.865 341.033 110.865 341.034 110.865 cv
.82153 .606165 .106081 .00485237 cmyk
f
382.936 144.659 mo
382.754 144.659 382.558 144.617 382.353 144.528 cv
382.278 144.496 382.203 144.458 382.126 144.414 cv
341.847 121.16 li
340.711 120.503 339.789 118.742 339.789 117.225 cv
339.789 112.669 li
339.789 112.669 li
339.789 111.544 340.296 110.87 341.022 110.865 cv
341.025 110.865 341.028 110.865 341.031 110.865 cv
341.032 110.865 341.033 110.865 341.034 110.865 cv
341.283 110.866 341.558 110.945 341.847 111.112 cv
341.899 111.142 li
341.855 111.34 341.824 111.554 341.824 111.796 cv
341.824 116.353 li
341.824 117.869 342.746 119.63 343.883 120.287 cv
384.109 143.511 li
383.946 144.239 383.51 144.659 382.936 144.659 cv
1 .929107 .306767 .199344 cmyk
f
369.486 131.925 mo
345.249 117.932 li
344.848 117.701 344.524 117.082 344.524 116.547 cv
344.524 116.014 344.848 115.769 345.249 116.001 cv
369.486 129.994 li
369.886 130.225 370.211 130.844 370.211 131.378 cv
370.211 131.912 369.886 132.157 369.486 131.925 cv
cp
0 0 0 0 cmyk
f
382.126 171.166 mo
341.847 147.912 li
340.711 147.254 339.789 145.494 339.789 143.977 cv
339.789 139.42 li
339.789 137.905 340.711 137.208 341.847 137.864 cv
382.126 161.119 li
383.262 161.775 384.184 163.537 384.184 165.052 cv
384.184 169.609 li
384.184 171.126 383.262 171.822 382.126 171.166 cv
1 .866484 .240818 .0951247 cmyk
f
382.3 171.257 mo
382.297 171.255 382.295 171.254 382.292 171.253 cv
382.295 171.254 382.297 171.255 382.3 171.257 cv
382.287 171.251 mo
382.234 171.225 382.18 171.197 382.126 171.166 cv
341.847 147.912 li
340.711 147.254 339.789 145.494 339.789 143.977 cv
339.789 143.977 li
339.789 145.494 340.711 147.254 341.847 147.912 cv
382.126 171.166 li
382.18 171.197 382.234 171.225 382.287 171.251 cv
339.789 139.365 mo
339.799 138.7 339.99 138.199 340.298 137.907 cv
339.99 138.199 339.799 138.7 339.789 139.365 cv
340.3 137.906 mo
340.301 137.904 340.303 137.903 340.304 137.902 cv
340.303 137.903 340.301 137.904 340.3 137.906 cv
.82153 .606165 .106081 .00485237 cmyk
f
382.936 171.411 mo
382.739 171.411 382.525 171.361 382.3 171.257 cv
382.297 171.255 382.295 171.254 382.292 171.253 cv
382.29 171.252 382.289 171.251 382.287 171.251 cv
382.234 171.225 382.18 171.197 382.126 171.166 cv
341.847 147.912 li
340.711 147.254 339.789 145.494 339.789 143.977 cv
339.789 139.42 li
339.789 139.402 339.789 139.383 339.789 139.365 cv
339.799 138.7 339.99 138.199 340.298 137.907 cv
340.299 137.906 340.299 137.906 340.3 137.906 cv
340.301 137.904 340.303 137.903 340.304 137.902 cv
340.503 137.716 340.75 137.617 341.03 137.617 cv
341.281 137.617 341.557 137.697 341.847 137.865 cv
341.899 137.894 li
341.855 138.092 341.824 138.306 341.824 138.548 cv
341.824 143.105 li
341.824 144.622 342.746 146.382 343.883 147.039 cv
384.109 170.263 li
383.946 170.991 383.51 171.411 382.936 171.411 cv
1 .929107 .306767 .199344 cmyk
f
369.486 158.677 mo
345.249 144.684 li
344.848 144.453 344.524 143.834 344.524 143.3 cv
344.524 142.766 344.848 142.521 345.249 142.753 cv
369.486 156.746 li
369.886 156.977 370.211 157.596 370.211 158.129 cv
370.211 158.664 369.886 158.909 369.486 158.677 cv
cp
0 0 0 0 cmyk
f
382.126 198.167 mo
341.847 174.913 li
340.711 174.256 339.789 172.495 339.789 170.978 cv
339.789 166.422 li
339.789 164.906 340.711 164.208 341.847 164.866 cv
382.126 188.12 li
383.262 188.776 384.184 190.538 384.184 192.054 cv
384.184 196.61 li
384.184 198.126 383.262 198.824 382.126 198.167 cv
1 .866484 .240818 .0951247 cmyk
f
339.789 166.422 mo
339.789 165.295 340.298 164.62 341.027 164.618 cv
340.298 164.62 339.789 165.295 339.789 166.422 cv
341.899 164.896 mo
341.847 164.866 li
341.899 164.895 li
341.899 164.895 341.899 164.895 341.899 164.896 cv
341.847 164.866 mo
341.835 164.859 341.823 164.852 341.81 164.845 cv
341.823 164.852 341.835 164.859 341.847 164.866 cv
341.033 164.618 mo
341.032 164.618 341.031 164.618 341.03 164.618 cv
341.03 164.618 li
341.031 164.618 341.032 164.618 341.033 164.618 cv
.82153 .606165 .106081 .00485237 cmyk
f
382.936 198.412 mo
382.688 198.412 382.414 198.333 382.126 198.167 cv
382.126 198.167 li
341.847 174.913 li
340.711 174.256 339.789 172.495 339.789 170.978 cv
339.789 166.422 li
339.789 166.422 li
339.789 165.295 340.298 164.62 341.027 164.618 cv
341.028 164.618 341.029 164.618 341.03 164.618 cv
341.031 164.618 341.032 164.618 341.033 164.618 cv
341.272 164.619 341.535 164.692 341.81 164.845 cv
341.823 164.852 341.835 164.859 341.847 164.866 cv
341.847 164.866 li
341.899 164.896 li
341.855 165.095 341.824 165.307 341.824 165.549 cv
341.824 170.106 li
341.824 171.623 342.746 173.383 343.883 174.041 cv
384.109 197.264 li
383.946 197.992 383.51 198.412 382.936 198.412 cv
1 .929107 .306767 .199344 cmyk
f
369.486 185.679 mo
345.249 171.685 li
344.848 171.455 344.524 170.835 344.524 170.301 cv
344.524 169.768 344.848 169.523 345.249 169.753 cv
369.486 183.748 li
369.886 183.978 370.211 184.598 370.211 185.131 cv
370.211 185.665 369.886 185.91 369.486 185.679 cv
cp
.147219 .0154116 0 0 cmyk
f
382.126 225.418 mo
341.847 202.164 li
340.711 201.506 339.789 199.746 339.789 198.229 cv
339.789 193.672 li
339.789 192.157 340.711 191.46 341.847 192.116 cv
382.126 215.371 li
383.262 216.027 384.184 217.789 384.184 219.304 cv
384.184 223.861 li
384.184 225.377 383.262 226.074 382.126 225.418 cv
1 .866484 .240818 .0951247 cmyk
f
382.313 225.515 mo
382.311 225.514 382.309 225.513 382.307 225.512 cv
382.309 225.513 382.311 225.514 382.313 225.515 cv
382.301 225.509 mo
382.243 225.482 382.185 225.452 382.126 225.418 cv
341.847 202.164 li
340.711 201.506 339.789 199.746 339.789 198.229 cv
339.789 198.229 li
339.789 199.746 340.711 201.506 341.847 202.164 cv
382.126 225.418 li
382.185 225.452 382.243 225.482 382.301 225.509 cv
339.789 193.672 mo
339.789 192.548 340.296 191.874 341.022 191.869 cv
340.296 191.874 339.789 192.548 339.789 193.672 cv
341.034 191.869 mo
341.033 191.869 341.032 191.869 341.031 191.869 cv
341.031 191.869 li
341.032 191.869 341.033 191.869 341.034 191.869 cv
.82153 .606165 .106081 .00485237 cmyk
f
382.936 225.663 mo
382.742 225.663 382.533 225.615 382.313 225.515 cv
382.311 225.514 382.309 225.513 382.307 225.512 cv
382.305 225.511 382.303 225.51 382.301 225.509 cv
382.243 225.482 382.185 225.452 382.126 225.418 cv
341.847 202.164 li
340.711 201.506 339.789 199.746 339.789 198.229 cv
339.789 193.672 li
339.789 193.672 li
339.789 192.548 340.296 191.874 341.022 191.869 cv
341.025 191.869 341.028 191.869 341.031 191.869 cv
341.032 191.869 341.033 191.869 341.034 191.869 cv
341.283 191.87 341.558 191.949 341.847 192.116 cv
341.899 192.146 li
341.855 192.344 341.824 192.558 341.824 192.8 cv
341.824 197.357 li
341.824 198.873 342.746 200.634 343.883 201.291 cv
384.109 224.515 li
383.946 225.243 383.51 225.663 382.936 225.663 cv
1 .929107 .306767 .199344 cmyk
f
369.486 212.929 mo
345.249 198.936 li
344.848 198.705 344.524 198.086 344.524 197.551 cv
344.524 197.018 344.848 196.773 345.249 197.004 cv
369.486 210.998 li
369.886 211.229 370.211 211.848 370.211 212.381 cv
370.211 212.916 369.886 213.161 369.486 212.929 cv
cp
0 .912535 0 0 cmyk
f
382.126 252.128 mo
341.847 228.874 li
340.711 228.217 339.789 226.456 339.789 224.939 cv
339.789 220.383 li
339.789 218.867 340.711 218.171 341.847 218.827 cv
382.126 242.081 li
383.262 242.738 384.184 244.499 384.184 246.015 cv
384.184 250.571 li
384.184 252.087 383.262 252.785 382.126 252.128 cv
1 .866484 .240818 .0951247 cmyk
f
339.789 220.383 mo
339.789 219.259 340.296 218.585 341.022 218.58 cv
340.296 218.585 339.789 219.259 339.789 220.383 cv
341.899 218.857 mo
341.847 218.827 li
341.899 218.856 li
341.899 218.856 341.899 218.856 341.899 218.857 cv
341.847 218.827 mo
341.83 218.816 341.812 218.807 341.794 218.797 cv
341.812 218.807 341.83 218.816 341.847 218.827 cv
341.034 218.58 mo
341.033 218.58 341.031 218.58 341.03 218.58 cv
341.03 218.58 li
341.031 218.58 341.033 218.58 341.034 218.58 cv
.82153 .606165 .106081 .00485237 cmyk
f
382.936 252.373 mo
382.688 252.373 382.414 252.294 382.126 252.128 cv
382.126 252.128 li
341.847 228.874 li
340.711 228.217 339.789 226.456 339.789 224.939 cv
339.789 220.383 li
339.789 220.383 li
339.789 219.259 340.296 218.585 341.022 218.58 cv
341.024 218.58 341.027 218.58 341.03 218.58 cv
341.031 218.58 341.033 218.58 341.034 218.58 cv
341.268 218.581 341.525 218.651 341.794 218.797 cv
341.812 218.807 341.83 218.816 341.847 218.827 cv
341.847 218.827 li
341.899 218.857 li
341.855 219.056 341.824 219.268 341.824 219.511 cv
341.824 224.067 li
341.824 225.584 342.746 227.344 343.883 228.001 cv
384.109 251.225 li
383.946 251.952 383.51 252.373 382.936 252.373 cv
1 .929107 .306767 .199344 cmyk
f
369.486 239.64 mo
345.249 225.646 li
344.848 225.416 344.524 224.795 344.524 224.262 cv
344.524 223.729 344.848 223.484 345.249 223.714 cv
369.486 237.709 li
369.886 237.939 370.211 238.559 370.211 239.092 cv
370.211 239.626 369.886 239.871 369.486 239.64 cv
cp
.147219 .0154116 0 0 cmyk
f
337.578 122.035 mo
333.367 119.603 li
337.578 122.034 li
337.578 122.035 li
337.578 105.021 mo
333.367 102.589 li
337.578 105.021 li
337.578 105.02 li
1 .866484 .240818 .0951247 cmyk
f
337.578 105.021 mo
333.367 102.589 li
337.578 105.02 li
f
337.578 122.034 mo
333.367 119.603 li
333.367 102.589 li
337.578 105.021 li
337.578 122.035 li
.842374 .602045 .0982681 .0030518 cmyk
f
337.578 148.953 mo
333.367 146.521 li
337.578 148.952 li
337.578 148.953 li
1 .866484 .240818 .0951247 cmyk
f
337.578 148.952 mo
333.367 146.521 li
333.367 129.507 li
337.578 131.939 li
337.578 148.953 li
.842374 .602045 .0982681 .0030518 cmyk
f
337.578 175.871 mo
333.367 173.44 li
333.367 156.425 li
337.578 158.857 li
337.578 175.871 li
f
337.578 185.775 mo
333.367 183.344 li
337.578 185.775 li
337.578 185.775 li
1 .866484 .240818 .0951247 cmyk
f
337.578 202.789 mo
333.367 200.358 li
333.367 183.344 li
337.578 185.775 li
337.578 202.789 li
.842374 .602045 .0982681 .0030518 cmyk
f
337.578 229.708 mo
333.367 227.276 li
337.578 229.707 li
337.578 229.708 li
1 .866484 .240818 .0951247 cmyk
f
337.578 212.694 mo
333.367 210.262 li
337.578 212.693 li
337.578 212.694 li
f
337.578 229.707 mo
333.367 227.276 li
333.367 210.262 li
337.578 212.694 li
337.578 229.708 li
.842374 .602045 .0982681 .0030518 cmyk
f
374.261 133.605 mo
374.261 134.149 373.88 134.37 373.409 134.097 cv
372.937 133.826 372.556 133.165 372.556 132.621 cv
372.556 132.078 372.937 131.857 373.409 132.128 cv
373.88 132.401 374.261 133.062 374.261 133.605 cv
cp
.147219 .0154116 0 0 cmyk
f
377.876 135.692 mo
377.876 136.236 377.494 136.457 377.023 136.184 cv
376.552 135.913 376.171 135.252 376.171 134.708 cv
376.171 134.165 376.552 133.944 377.023 134.215 cv
377.494 134.488 377.876 135.149 377.876 135.692 cv
cp
0 .912535 0 0 cmyk
f
381.49 137.779 mo
381.49 138.323 381.108 138.544 380.637 138.271 cv
380.167 138 379.785 137.338 379.785 136.794 cv
379.785 136.252 380.167 136.031 380.637 136.302 cv
381.108 136.575 381.49 137.236 381.49 137.779 cv
cp
.147219 .0154116 0 0 cmyk
f
374.261 160.51 mo
374.261 161.053 373.88 161.274 373.409 161.003 cv
372.937 160.73 372.556 160.069 372.556 159.526 cv
372.556 158.982 372.937 158.761 373.409 159.034 cv
373.88 159.305 374.261 159.966 374.261 160.51 cv
cp
0 .912535 0 0 cmyk
f
377.876 162.597 mo
377.876 163.14 377.494 163.361 377.023 163.089 cv
376.552 162.817 376.171 162.156 376.171 161.613 cv
376.171 161.069 376.552 160.848 377.023 161.121 cv
377.494 161.392 377.876 162.053 377.876 162.597 cv
cp
.147219 .0154116 0 0 cmyk
f
381.49 164.684 mo
381.49 165.227 381.108 165.448 380.637 165.176 cv
380.167 164.904 379.785 164.243 379.785 163.699 cv
379.785 163.156 380.167 162.935 380.637 163.207 cv
381.108 163.479 381.49 164.14 381.49 164.684 cv
cp
0 0 0 0 cmyk
f
374.261 187.618 mo
374.261 188.162 373.88 188.381 373.409 188.11 cv
372.937 187.838 372.556 187.177 372.556 186.633 cv
372.556 186.089 372.937 185.87 373.409 186.141 cv
373.88 186.413 374.261 187.074 374.261 187.618 cv
cp
f
377.876 189.705 mo
377.876 190.249 377.494 190.468 377.023 190.197 cv
376.552 189.925 376.171 189.264 376.171 188.72 cv
376.171 188.176 376.552 187.957 377.023 188.228 cv
377.494 188.5 377.876 189.161 377.876 189.705 cv
cp
0 .912535 0 0 cmyk
f
381.49 191.792 mo
381.49 192.336 381.108 192.555 380.637 192.284 cv
380.167 192.012 379.785 191.351 379.785 190.807 cv
379.785 190.263 380.167 190.044 380.637 190.315 cv
381.108 190.586 381.49 191.248 381.49 191.792 cv
cp
0 0 0 0 cmyk
f
374.261 214.331 mo
374.261 214.875 373.88 215.095 373.409 214.823 cv
372.937 214.551 372.556 213.89 372.556 213.346 cv
372.556 212.802 372.937 212.583 373.409 212.854 cv
373.88 213.126 374.261 213.787 374.261 214.331 cv
cp
f
377.876 216.418 mo
377.876 216.961 377.494 217.182 377.023 216.91 cv
376.552 216.638 376.171 215.977 376.171 215.433 cv
376.171 214.889 376.552 214.669 377.023 214.941 cv
377.494 215.212 377.876 215.874 377.876 216.418 cv
cp
.147219 .0154116 0 0 cmyk
f
381.49 218.504 mo
381.49 219.048 381.108 219.268 380.637 218.997 cv
380.167 218.725 379.785 218.064 379.785 217.52 cv
379.785 216.976 380.167 216.756 380.637 217.028 cv
381.108 217.299 381.49 217.961 381.49 218.504 cv
cp
f
374.261 241.408 mo
374.261 241.952 373.88 242.172 373.409 241.9 cv
372.937 241.628 372.556 240.967 372.556 240.423 cv
372.556 239.88 372.937 239.66 373.409 239.931 cv
373.88 240.204 374.261 240.865 374.261 241.408 cv
cp
0 0 0 0 cmyk
f
377.876 243.495 mo
377.876 244.039 377.494 244.259 377.023 243.987 cv
376.552 243.715 376.171 243.054 376.171 242.51 cv
376.171 241.967 376.552 241.747 377.023 242.018 cv
377.494 242.291 377.876 242.952 377.876 243.495 cv
cp
0 .912535 0 0 cmyk
f
381.49 245.582 mo
381.49 246.126 381.108 246.346 380.637 246.074 cv
380.167 245.802 379.785 245.141 379.785 244.597 cv
379.785 244.053 380.167 243.834 380.637 244.105 cv
381.108 244.378 381.49 245.039 381.49 245.582 cv
cp
.147219 .0154116 0 0 cmyk
f
400.983 133.506 mo
400.983 251.645 li
449.574 223.591 li
449.574 105.452 li
400.983 133.506 li
cp
399.986 253.373 mo
399.986 132.93 li
400.235 132.787 li
450.571 103.725 li
450.571 224.168 li
450.322 224.31 li
399.986 253.373 li
cp
1 .866484 .240818 .0951247 cmyk
f
437.496 157.916 mo
414.926 170.947 li
413.409 171.822 412.18 170.893 412.18 168.872 cv
412.18 156.357 li
412.18 154.336 413.409 151.988 414.926 151.112 cv
437.496 138.082 li
439.011 137.206 440.241 138.135 440.241 140.157 cv
440.241 152.67 li
440.241 154.692 439.011 157.041 437.496 157.916 cv
cp
f
438.043 137.838 mo
438.172 138.189 438.247 138.608 438.247 139.093 cv
438.247 151.608 li
438.247 153.629 437.017 155.978 435.502 156.853 cv
412.931 169.884 li
412.744 169.992 412.56 170.072 412.384 170.127 cv
412.791 171.231 413.774 171.612 414.926 170.947 cv
437.496 157.916 li
439.011 157.041 440.241 154.692 440.241 152.67 cv
440.241 140.157 li
440.241 138.385 439.297 137.454 438.043 137.838 cv
cp
.657221 .328313 0 0 cmyk
f
433.373 150.379 mo
433.79 150.138 434.129 150.334 434.129 150.816 cv
434.129 153.667 li
434.129 154.148 433.79 154.734 433.373 154.974 cv
432.956 155.215 432.617 155.02 432.617 154.539 cv
432.617 151.688 li
432.617 151.207 432.956 150.621 433.373 150.379 cv
cp
0 0 0 0 cmyk
f
430.135 152.605 mo
430.552 152.364 430.89 152.559 430.89 153.042 cv
430.89 155.536 li
430.89 156.017 430.552 156.603 430.135 156.844 cv
429.718 157.085 429.38 156.89 429.38 156.408 cv
429.38 153.914 li
429.38 153.432 429.718 152.846 430.135 152.605 cv
cp
.147219 .0154116 0 0 cmyk
f
426.897 151.691 mo
427.315 151.451 427.653 151.646 427.653 152.128 cv
427.653 157.405 li
427.653 157.886 427.315 158.472 426.897 158.713 cv
426.48 158.955 426.142 158.759 426.142 158.277 cv
426.142 153 li
426.142 152.518 426.48 151.932 426.897 151.691 cv
cp
0 .912535 0 0 cmyk
f
423.66 150.52 mo
424.077 150.279 424.415 150.474 424.415 150.956 cv
424.415 159.274 li
424.415 159.756 424.077 160.341 423.66 160.583 cv
423.242 160.824 422.904 160.628 422.904 160.146 cv
422.904 151.829 li
422.904 151.346 423.242 150.76 423.66 150.52 cv
cp
.147219 .0154116 0 0 cmyk
f
420.422 153.261 mo
420.84 153.02 421.177 153.215 421.177 153.698 cv
421.177 161.143 li
421.177 161.626 420.84 162.211 420.422 162.452 cv
420.005 162.693 419.667 162.498 419.667 162.016 cv
419.667 154.57 li
419.667 154.088 420.005 153.503 420.422 153.261 cv
cp
f
417.184 158.533 mo
417.601 158.292 417.939 158.487 417.939 158.969 cv
417.939 163.012 li
417.939 163.495 417.601 164.081 417.184 164.321 cv
416.766 164.562 416.428 164.367 416.428 163.885 cv
416.428 159.841 li
416.428 159.359 416.766 158.774 417.184 158.533 cv
cp
0 0 0 0 cmyk
f
432.63 148.939 mo
432.63 149.414 432.963 149.605 433.373 149.369 cv
433.783 149.131 434.116 148.555 434.116 148.082 cv
434.116 147.608 433.783 147.416 433.373 147.653 cv
432.963 147.889 432.63 148.465 432.63 148.939 cv
cp
0 .912535 0 0 cmyk
f
432.63 146.26 mo
432.63 146.734 432.963 146.925 433.373 146.689 cv
433.783 146.452 434.116 145.876 434.116 145.402 cv
434.116 144.928 433.783 144.736 433.373 144.973 cv
432.963 145.211 432.63 145.786 432.63 146.26 cv
cp
0 0 0 0 cmyk
f
519.272 148.241 mo
515.837 148.241 li
515.837 81.607 li
519.272 81.607 li
519.272 148.241 li
cp
f
387.246 360.582 mo
352.734 340.656 li
350.616 339.433 350.882 337.296 353.327 335.884 cv
386.651 316.645 li
389.097 315.233 392.797 315.08 394.915 316.302 cv
429.427 336.228 li
431.546 337.451 431.28 339.587 428.834 340.999 cv
395.51 360.239 li
393.064 361.651 389.364 361.804 387.246 360.582 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
388.225 347.98 mo
389.749 348.858 392.692 348.698 394.529 347.637 cv
427.853 328.397 li
428.691 327.914 428.892 327.476 428.897 327.394 cv
428.885 327.371 428.773 327.21 428.448 327.021 cv
393.934 307.095 li
392.414 306.217 389.469 306.377 387.631 307.438 cv
354.307 326.677 li
353.469 327.161 353.269 327.598 353.264 327.68 cv
353.276 327.705 353.388 327.866 353.714 328.054 cv
388.226 347.98 li
388.225 347.98 li
cp
390.853 352.472 mo
389.166 352.472 387.539 352.11 386.266 351.375 cv
386.265 351.375 li
351.754 331.449 li
350.222 330.565 349.344 329.191 349.344 327.679 cv
349.344 325.987 350.438 324.384 352.346 323.283 cv
385.671 304.044 li
388.754 302.262 393.148 302.114 395.894 303.701 cv
430.408 323.627 li
431.939 324.51 432.817 325.884 432.817 327.395 cv
432.817 329.087 431.722 330.69 429.813 331.792 cv
396.49 351.032 li
394.836 351.987 392.804 352.472 390.853 352.472 cv
cp
0 0 0 0 cmyk
f
430.846 315.185 mo
430.846 315.185 li
430.846 303.278 li
404.144 303.262 li
394.915 297.934 li
392.797 296.711 389.097 296.865 386.651 298.277 cv
378.041 303.249 li
351.315 303.233 li
351.315 315.48 li
351.255 316.308 351.717 317.107 352.734 317.694 cv
387.246 337.62 li
389.364 338.842 393.064 338.689 395.51 337.277 cv
428.834 318.038 li
430.245 317.223 430.926 316.168 430.846 315.185 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
391.081 297.115 mo
389.531 297.153 387.923 297.543 386.651 298.277 cv
378.041 303.249 li
351.315 303.233 li
351.315 315.48 li
351.255 316.308 351.717 317.107 352.734 317.694 cv
387.246 337.62 li
388.263 338.208 389.647 338.474 391.081 338.439 cv
391.081 297.115 li
cp
level3{
gsave
clp
[43.6225 0 0 43.6225 353.501 299.768 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.6225 0 0 43.6225 353.501 299.768 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
354.34 303.235 mo
351.315 303.233 li
351.315 315.48 li
351.255 316.308 351.717 317.107 352.734 317.694 cv
354.34 318.621 li
354.34 303.235 li
cp
.147219 .0154116 0 0 cmyk
f
387.778 337.88 mo
389.604 338.663 392.247 338.619 394.384 337.804 cv
394.384 323.899 li
387.778 323.899 li
387.778 337.88 li
cp
.657221 .328313 0 0 cmyk
f
387.246 325.417 mo
352.734 305.492 li
350.616 304.269 350.882 302.132 353.327 300.72 cv
386.651 281.481 li
389.097 280.069 392.797 279.916 394.915 281.138 cv
429.427 301.064 li
431.546 302.287 431.28 304.422 428.834 305.835 cv
395.51 325.075 li
393.064 326.487 389.364 326.64 387.246 325.417 cv
cp
level3{
gsave
clp
[68.3309 40.738 -40.738 68.3309 361.735 285.782 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-3O;K-NjDL-NjDL-NjDL-j0MM-j0MM.0T\O.0T\O.0T\O
.KoeP.KoeP.g5nQ.g5nQ/-Z(S/Hu1T/d;:U/d;:U0*_IW0F%RX0a@[Y1'dj[1C*s\1C*s\2$j6_2@0?`
2[KHa3!oWc3=>fe3su#g4:D2i4UhAk57RYn5n3kp64X%r6k97t71]G!7hG_$8J2"'9+q:*9b[R-:DNs2
;&004;\oH7<>Y`:<uD#==W.;@>T3\D>oWnG?l]:K@NGRNA0:pRB-@<VC*E]ZCa9)_D^>JcE@1hgF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
F=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:lF=@:l
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.842316 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.3309 40.738 -40.738 68.3309 361.735 285.782 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,pai`,pai`,pai`,pai`,pai`,pai`-71&d-71&d-71&e-RU8h-RU;j-n$Jl-n$Jl.4H\p.4H\q.Olnt
.Olr!.kE5&/M/P+/M/P,/hSb00/#"50JP::0etL>1,:U?1GgpG2)R6L2E!KQ2`NcV3&ru[4$,Mc4?P_h
4[)%o5X7V$5sdn*6UX=177B[87n?0B8P2TJ9MA/T:/=Y^:f1(f;c?Xp<E<.%='/U.>$G6:>[:ZB?XR;N
@U`hWA7]@cBPD3rCMRa'DJsH4E,fo>F)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDDF)uDD
~>
<~!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8Z/"9\i1"9\i1"9\i1"9\i1"9\i1
"9\l3"U,&5"U,&5"U,&6"pP89"pP89"pYA<#6tJ=#6tJ=#RC\A#RC\A#RC_C#mq"H$47+I$O[=M$k*OR
%1NaU%1NdW%LrsY%M''\&.fBa&J5Tf&eYfj',)&o'bqGu'c%Q#(Ddl((`4)-)&X>2)B'P6)]Th;*$$%?
*ZcCF+<VdM+X&$R,9nHZ,UF``-7:2i-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!$#!<E3%!<E3%!<E3%!<E3%!<E6'!WiE)
!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)~>
0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
428.834 303.492 mo
395.51 322.731 li
393.064 324.143 389.364 324.296 387.246 323.074 cv
352.734 303.148 li
352.261 302.876 351.915 302.556 351.677 302.211 cv
350.949 303.381 351.279 304.652 352.734 305.492 cv
387.246 325.417 li
389.364 326.64 393.064 326.487 395.51 325.075 cv
428.834 305.835 li
430.734 304.738 431.311 303.205 430.484 302.002 cv
430.152 302.536 429.6 303.049 428.834 303.492 cv
cp
0 0 0 0 cmyk
f
418.152 318.328 mo
418.152 319.217 417.528 320.298 416.759 320.743 cv
415.988 321.187 415.364 320.827 415.364 319.938 cv
415.364 319.048 415.988 317.968 416.759 317.523 cv
417.528 317.079 418.152 317.439 418.152 318.328 cv
cp
.147219 .0154116 0 0 cmyk
f
422.637 315.739 mo
422.637 316.628 422.013 317.709 421.243 318.153 cv
420.473 318.597 419.849 318.237 419.849 317.348 cv
419.849 316.46 420.473 315.378 421.243 314.934 cv
422.013 314.49 422.637 314.85 422.637 315.739 cv
cp
f
427.122 313.149 mo
427.122 314.039 426.498 315.12 425.728 315.564 cv
424.958 316.008 424.334 315.648 424.334 314.759 cv
424.334 313.87 424.958 312.79 425.728 312.344 cv
426.498 311.9 427.122 312.26 427.122 313.149 cv
cp
f
389.287 313.064 mo
373.136 303.74 li
372.145 303.168 372.27 302.168 373.415 301.506 cv
389.009 292.503 li
390.153 291.842 391.885 291.771 392.876 292.343 cv
409.025 301.668 li
410.016 302.24 409.892 303.239 408.748 303.9 cv
393.154 312.903 li
392.01 313.564 390.278 313.635 389.287 313.064 cv
cp
.657221 .328313 0 0 cmyk
f
390.833 305.256 mo
388.598 303.966 li
388.462 303.887 388.478 303.749 388.636 303.658 cv
390.795 302.412 li
390.953 302.321 391.192 302.31 391.329 302.39 cv
393.564 303.68 li
393.701 303.759 393.683 303.897 393.525 303.989 cv
391.368 305.234 li
391.21 305.326 390.969 305.336 390.833 305.256 cv
cp
.147219 .0154116 0 0 cmyk
f
373.136 303.74 mo
373.182 303.766 li
373.415 303.606 li
389.009 294.603 li
390.153 293.942 391.885 293.871 392.876 294.443 cv
408.979 303.741 li
409.893 303.086 409.941 302.196 409.025 301.668 cv
392.876 292.343 li
391.885 291.771 390.153 291.842 389.009 292.503 cv
373.415 301.506 li
372.27 302.168 372.145 303.168 373.136 303.74 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
513.719 272.664 mo
479.208 252.738 li
477.09 251.515 477.355 249.379 479.802 247.967 cv
513.126 228.727 li
515.571 227.315 519.271 227.162 521.389 228.384 cv
555.901 248.31 li
558.019 249.533 557.754 251.669 555.307 253.082 cv
521.984 272.321 li
519.538 273.733 515.838 273.886 513.719 272.664 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
514.699 260.062 mo
516.222 260.939 519.166 260.779 521.005 259.719 cv
554.327 240.48 li
555.165 239.996 555.366 239.559 555.371 239.477 cv
555.359 239.453 555.247 239.292 554.922 239.103 cv
520.409 219.177 li
518.888 218.3 515.943 218.46 514.106 219.52 cv
480.782 238.76 li
479.944 239.244 479.743 239.681 479.738 239.763 cv
479.75 239.787 479.862 239.948 480.187 240.136 cv
514.7 260.062 li
514.699 260.062 li
cp
517.327 264.554 mo
515.639 264.554 514.012 264.192 512.74 263.457 cv
512.739 263.457 li
478.227 243.531 li
476.696 242.647 475.818 241.273 475.818 239.762 cv
475.818 238.07 476.913 236.467 478.822 235.366 cv
512.145 216.126 li
515.23 214.344 519.625 214.197 522.369 215.783 cv
556.882 235.709 li
558.413 236.592 559.291 237.966 559.291 239.478 cv
559.291 241.17 558.196 242.773 556.287 243.875 cv
522.965 263.114 li
521.31 264.069 519.278 264.554 517.327 264.554 cv
cp
0 0 0 0 cmyk
f
557.32 227.268 mo
557.32 227.268 li
557.32 215.36 li
530.619 215.345 li
521.389 210.016 li
519.271 208.794 515.571 208.947 513.126 210.359 cv
504.514 215.331 li
477.789 215.316 li
477.789 227.562 li
477.728 228.39 478.19 229.189 479.208 229.776 cv
513.719 249.702 li
515.838 250.924 519.538 250.771 521.984 249.359 cv
555.307 230.12 li
556.719 229.305 557.399 228.251 557.32 227.268 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
517.555 209.197 mo
516.005 209.235 514.396 209.626 513.126 210.359 cv
504.514 215.331 li
477.789 215.316 li
477.789 227.562 li
477.728 228.39 478.19 229.189 479.208 229.776 cv
513.719 249.702 li
514.738 250.29 516.122 250.556 517.555 250.521 cv
517.555 209.197 li
cp
level3{
gsave
clp
[43.6225 0 0 43.6225 479.975 211.851 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.6225 0 0 43.6225 479.975 211.851 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
480.813 215.317 mo
477.789 215.316 li
477.789 227.562 li
477.728 228.39 478.19 229.189 479.208 229.776 cv
480.813 230.704 li
480.813 215.317 li
cp
.147219 .0154116 0 0 cmyk
f
514.252 249.962 mo
516.079 250.745 518.721 250.702 520.857 249.887 cv
520.857 235.982 li
514.252 235.982 li
514.252 249.962 li
cp
.657221 .328313 0 0 cmyk
f
513.719 237.5 mo
479.208 217.574 li
477.09 216.351 477.355 214.214 479.802 212.802 cv
513.126 193.563 li
515.571 192.151 519.271 191.998 521.389 193.22 cv
555.901 213.146 li
558.019 214.369 557.754 216.505 555.307 217.918 cv
521.984 237.157 li
519.538 238.569 515.838 238.722 513.719 237.5 cv
cp
level3{
gsave
clp
[68.3309 40.738 -40.738 68.3309 488.209 197.864 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.3309 40.738 -40.738 68.3309 488.209 197.864 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
555.307 215.574 mo
521.984 234.813 li
519.538 236.225 515.838 236.378 513.719 235.156 cv
479.208 215.23 li
478.736 214.958 478.388 214.638 478.151 214.293 cv
477.424 215.463 477.754 216.734 479.208 217.574 cv
513.719 237.5 li
515.838 238.722 519.538 238.569 521.984 237.157 cv
555.307 217.918 li
557.209 216.82 557.786 215.287 556.958 214.084 cv
556.626 214.618 556.074 215.131 555.307 215.574 cv
cp
0 0 0 0 cmyk
f
544.626 230.411 mo
544.626 231.299 544.002 232.38 543.232 232.825 cv
542.463 233.269 541.839 232.909 541.839 232.02 cv
541.839 231.131 542.463 230.05 543.232 229.606 cv
544.002 229.162 544.626 229.522 544.626 230.411 cv
cp
.147219 .0154116 0 0 cmyk
f
549.111 227.821 mo
549.111 228.711 548.487 229.791 547.718 230.236 cv
546.947 230.68 546.323 230.32 546.323 229.43 cv
546.323 228.542 546.947 227.461 547.718 227.016 cv
548.487 226.572 549.111 226.932 549.111 227.821 cv
cp
f
553.596 225.232 mo
553.596 226.121 552.972 227.202 552.202 227.646 cv
551.432 228.09 550.808 227.73 550.808 226.841 cv
550.808 225.953 551.432 224.872 552.202 224.427 cv
552.972 223.983 553.596 224.342 553.596 225.232 cv
cp
f
515.76 225.146 mo
499.611 215.822 li
498.62 215.25 498.744 214.25 499.888 213.589 cv
515.482 204.586 li
516.627 203.925 518.358 203.853 519.349 204.425 cv
535.5 213.75 li
536.491 214.322 536.366 215.322 535.221 215.982 cv
519.628 224.986 li
518.483 225.646 516.752 225.718 515.76 225.146 cv
cp
.657221 .328313 0 0 cmyk
f
517.306 217.338 mo
515.072 216.048 li
514.935 215.969 514.953 215.832 515.111 215.74 cv
517.268 214.495 li
517.427 214.403 517.666 214.393 517.803 214.472 cv
520.038 215.762 li
520.175 215.841 520.158 215.98 520 216.071 cv
517.842 217.317 li
517.683 217.408 517.444 217.418 517.306 217.338 cv
cp
.147219 .0154116 0 0 cmyk
f
499.611 215.822 mo
499.656 215.848 li
499.888 215.689 li
515.482 206.685 li
516.627 206.025 518.358 205.953 519.349 206.525 cv
535.454 215.823 li
536.367 215.169 536.415 214.279 535.5 213.75 cv
519.349 204.425 li
518.358 203.853 516.627 203.925 515.482 204.586 cv
499.888 213.589 li
498.744 214.25 498.62 215.25 499.611 215.822 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
260.778 272.664 mo
226.265 252.738 li
224.147 251.515 224.413 249.379 226.859 247.967 cv
260.183 228.727 li
262.629 227.315 266.329 227.162 268.447 228.384 cv
302.959 248.31 li
305.077 249.533 304.811 251.669 302.366 253.082 cv
269.042 272.321 li
266.595 273.733 262.896 273.886 260.778 272.664 cv
cp
.470191 .0827344 .00714122 0 cmyk
f
261.758 260.062 mo
263.279 260.939 266.222 260.779 268.062 259.719 cv
301.385 240.48 li
302.223 239.997 302.424 239.559 302.428 239.477 cv
302.417 239.453 302.304 239.292 301.979 239.103 cv
267.467 219.177 li
265.946 218.3 263.001 218.46 261.164 219.52 cv
227.84 238.76 li
227.002 239.244 226.801 239.681 226.796 239.763 cv
226.807 239.787 226.92 239.948 227.245 240.136 cv
261.759 260.062 li
261.758 260.062 li
cp
264.385 264.554 mo
262.698 264.554 261.071 264.192 259.799 263.457 cv
259.798 263.457 li
225.285 243.531 li
223.754 242.647 222.876 241.273 222.876 239.762 cv
222.876 238.07 223.97 236.467 225.88 235.366 cv
259.203 216.126 li
262.288 214.344 266.682 214.197 269.427 215.783 cv
303.939 235.709 li
305.47 236.592 306.348 237.966 306.349 239.478 cv
306.349 241.17 305.255 242.773 303.346 243.875 cv
270.022 263.114 li
268.368 264.069 266.337 264.554 264.385 264.554 cv
cp
0 0 0 0 cmyk
f
304.378 227.268 mo
304.378 227.268 li
304.378 215.36 li
277.677 215.345 li
268.447 210.016 li
266.329 208.794 262.629 208.947 260.183 210.359 cv
251.572 215.331 li
224.846 215.316 li
224.846 227.562 li
224.787 228.39 225.248 229.189 226.265 229.776 cv
260.778 249.702 li
262.896 250.924 266.595 250.771 269.042 249.359 cv
302.366 230.12 li
303.776 229.305 304.457 228.251 304.378 227.268 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
264.613 209.197 mo
263.063 209.235 261.454 209.626 260.183 210.359 cv
251.572 215.331 li
224.846 215.316 li
224.846 227.562 li
224.787 228.39 225.248 229.189 226.265 229.776 cv
260.778 249.702 li
261.796 250.29 263.179 250.556 264.613 250.521 cv
264.613 209.197 li
cp
level3{
gsave
clp
[43.6225 0 0 43.6225 227.033 211.851 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[43.6225 0 0 43.6225 227.033 211.851 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
227.872 215.317 mo
224.846 215.316 li
224.846 227.562 li
224.787 228.39 225.248 229.189 226.265 229.776 cv
227.872 230.704 li
227.872 215.317 li
cp
.147219 .0154116 0 0 cmyk
f
261.309 249.962 mo
263.136 250.745 265.779 250.702 267.915 249.887 cv
267.915 235.982 li
261.309 235.982 li
261.309 249.962 li
cp
.657221 .328313 0 0 cmyk
f
260.778 237.5 mo
226.265 217.574 li
224.147 216.351 224.413 214.214 226.859 212.802 cv
260.183 193.563 li
262.629 192.151 266.329 191.998 268.447 193.22 cv
302.959 213.146 li
305.077 214.369 304.811 216.505 302.366 217.918 cv
269.042 237.157 li
266.595 238.569 262.896 238.722 260.778 237.5 cv
cp
level3{
gsave
clp
[68.3309 40.738 -40.738 68.3309 235.267 197.864 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[68.3309 40.738 -40.738 68.3309 235.267 197.864 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
302.366 215.574 mo
269.042 234.813 li
266.595 236.225 262.896 236.378 260.778 235.156 cv
226.265 215.23 li
225.794 214.958 225.446 214.638 225.209 214.293 cv
224.481 215.463 224.811 216.734 226.265 217.574 cv
260.778 237.5 li
262.896 238.722 266.595 238.569 269.042 237.157 cv
302.366 217.918 li
304.266 216.82 304.844 215.287 304.015 214.084 cv
303.684 214.618 303.132 215.131 302.366 215.574 cv
cp
0 0 0 0 cmyk
f
291.684 230.411 mo
291.684 231.299 291.06 232.38 290.29 232.825 cv
289.52 233.269 288.896 232.909 288.896 232.02 cv
288.896 231.131 289.52 230.05 290.29 229.606 cv
291.06 229.162 291.684 229.522 291.684 230.411 cv
cp
.147219 .0154116 0 0 cmyk
f
296.169 227.821 mo
296.169 228.711 295.545 229.791 294.775 230.236 cv
294.006 230.68 293.381 230.32 293.381 229.43 cv
293.381 228.542 294.006 227.461 294.775 227.016 cv
295.545 226.572 296.169 226.932 296.169 227.821 cv
cp
f
300.654 225.232 mo
300.654 226.121 300.03 227.202 299.26 227.646 cv
298.49 228.09 297.866 227.73 297.866 226.841 cv
297.866 225.953 298.49 224.872 299.26 224.427 cv
300.03 223.983 300.654 224.342 300.654 225.232 cv
cp
f
262.818 225.146 mo
246.669 215.822 li
245.677 215.25 245.802 214.25 246.946 213.589 cv
262.54 204.586 li
263.684 203.925 265.416 203.853 266.407 204.425 cv
282.557 213.75 li
283.549 214.322 283.425 215.322 282.28 215.982 cv
266.685 224.986 li
265.541 225.646 263.809 225.718 262.818 225.146 cv
cp
.657221 .328313 0 0 cmyk
f
264.365 217.338 mo
262.131 216.048 li
261.993 215.969 262.01 215.832 262.169 215.74 cv
264.326 214.495 li
264.484 214.403 264.724 214.393 264.861 214.472 cv
267.095 215.762 li
267.233 215.841 267.216 215.98 267.057 216.071 cv
264.899 217.317 li
264.741 217.408 264.502 217.418 264.365 217.338 cv
cp
.147219 .0154116 0 0 cmyk
f
246.669 215.822 mo
246.715 215.848 li
246.946 215.689 li
262.54 206.685 li
263.684 206.025 265.416 205.953 266.407 206.525 cv
282.511 215.823 li
283.426 215.169 283.473 214.279 282.557 213.75 cv
266.407 204.425 li
265.416 203.853 263.684 203.925 262.54 204.586 cv
246.946 213.589 li
245.802 214.25 245.677 215.25 246.669 215.822 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (banner_on_blue_bg_13.eps)
%%CreationDate: 1/17/2019 4:25 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KpOCo<oCqkJ]jCFtO@sYPM0b"W/-/A5lGQH.1^=,kM(puS]?bp*qIaEKBI*f&%R.ZUYN`+<QJ%]#Phj$%4m\0>c$&h8m/?C%
%a`)@6[-h^9aY\+;Zu0[In%W/Crj;X42&OM=G&?'Nghte(4<6'ehq@oh]XZ[2N)!R4iHDufBFP02?DlBsgb2\,WHUugl\Ft&^%>s<
%e*6g:$9Rq#0jGB.fm?T.du&JMPPVNEPVr<cgnTeb%H&]a!8mD:\%7REW7fmZlW_W9'DQu@^USX_@Abt&6I"Jl<27UZ5G,!a\R3e-
%Y3!9M%W<?=f6rS6B^d%TnMT..h9t$?09G4PCHGm.bCEY%?L9DKX0YkH*u_lnH400SCcST240?tX^HQK.\kip9!i.^KYuGQ\e46&Q
%CIfo""`K1*8m'$&dd'j0AjBEX-&jO3>4TTql(7f>Uid^Xj)!cEn@_[S9,>.cp3%2>@B^0#<jHQ:g#*\1@lM2Aeu4`g/H+Gi8\KU9
%3"'0QKtFINdnY>D@Pm34:>):VY3)!$]JSY1E@K6>]?KiJ1(5(3d5B0$gP,qB1JOe6lM.3PCLo<9/geWi?gZG%pIe:dok(8NW@mBF
%GM<'%eE(Aj#F`ZIIQQi%qX;#_+h!KHo@_d1lnquf7TTHXW)H2Q;u<&UH&g^,s0+A6l.#$XE+n^,4F*8pUQZMeIp2f%.+$juIG3uS
%p>/_:%GTI<#L/E/2P$$!RWcf^D))%$"V3sH$rJVmJjkL4BhiTa]Qi7N+1AfUf:etk*CK!gk"3>DN+\)bPW\Y-bp[q]_\Whi>A3nQ
%f]n@Zlc*8mAR(CqQ!`tKHgDf5:A2<m2YN^#Ps"i^8qejq:UNBfj02]@H;@cF.u"!3Bf^&!B:AV^3;Dk;pfseSDdgjaI)]Mf'7Vl6
%p1kAijm4bC_/,-aT,\*B3=]YBS1##(qEF'3IE^`h+'n=3R*G@[)ns4&bZ:]N[Rp]VX]4eV8d4fS&cN\;N^K.'&S?hCFqLc3X"p^f
%]-mIj0,;6k-<uQaQjqf(c^50r-!JK@_a`T@k.sOG1UUM1#J1i-L!TN#)hlU?'^I;N1c>]5WU9Hb^W(HU?!3f*)IPI>)EqZ&.)PGk
%-rK)/:U@cG?%pVk;V$0F!*4MK4*H+R]GN,\L&GF<Ca2,R;/@@XbLpf]i:%1f_`!C7AmN;,`\ug4I_l:E3l#B7H2J#A0cRP5T@mU-
%EabN^C4Q$mZp9lmPU)!D<KZr;An.AZqM)DL21R1&WlFJNaqhn7ZA:`hK+/MOM@HB)=j,LEfLC8.ClHrMNN?L>`V>C;Y^pc(TQ2cN
%=SK(I0M3/B/;QdB*EA\n$mQ*68]98ehIlLkIF%?*3fbaD#"Gt\<?JQ(qm59b!UP%(a",I_.\gf<p8imK&J=sr;N>BS]*9l(ZT"Ig
%U9ij)^aNL4JX@)7nsGlab`>7uoQ<87==;LeFEuXfU:R)Aim+W5G,_W[oS9W?<U0M.0\B1k/,QY(p,RS5IrICR)Z#A!fq7T9cg`O_
%o/ua"oAn^jrYG_(VtcPUKd$=5^Tp)6]NSlR`NSX3<b%c^=8&Q65L/G3%.TaF0Dd:aYubb:@9"j?LqIdki:?JE[cEeHGQ.59']:dQ
%9RFb%c["ciH2!RB\-p#uV$?AIn%LgbGO_%"Qc=I)lUhWA"^euA"*a9Z?_)a0pZ8-31G?N0j"<AZ)>0LJA*M$^)Bi`uNnFL7gZ!A<
%h%r.lB=K2o4Ph#XhRc-uh@oN"M9_W5pLP9;M=_A,j`/J@PDH"@bTB8Rbp>epEa+lJgb\AiBXonmI7>+gTE=4D28?/rcHD%mQ=J_G
%j_S7apV8=@^u)*VT_1T-D=f3!+KPFN7m:hf\V^r8(QS\TTTP9W)4Wrc)/R'c["!gT8.;$B4j&,0Fe$Zn.IZFl2Jh0D4QGn./l/\O
%Dt<[9d=<uk7Uuak%/9r9/,@l#Z-W2-DmGe\h@pDe0c`MH/9/5;!#Q*6F]Zs,JlsN5;hH8F4+MO8B=#$VX$+XJPeOEc2suX)U9fio
%BKK6a@09B$rDT\',+lpG2'P_qV+)/[4$MF<HpWIc&b5+1NfhYt46tXK>_$)i7"CQM*$[2tJ^5m1-j06LR!&-ph.18pjbsE5I8iXn
%W%CPk^!>n_FT<fJ3rUr.]l.,=BL-'lU'Y;E$jA$aOmE8H/uFKqbEL-nHb_0T//u3*Z:_T\P*Sh[Bk*^H;&UKDahC:&PnCjM2_qoD
%+8;-/@&rf1\3RFV:Gn&QURsF$cNk'E,N$u1/k@m[kLkqpO8,/:4eG.QEq9"l!pYb]bD@?q8[V+96)oF?&bQ9h1u?2Sga7@^I*uqh
%E"dGNNc:sbYWEik'I3uq&Y:#lKC(Hui+*NVhCt)D-1@#q3b@)T##r+^[<SOC`+OB2^s#XZZQ-hqI,sfQ?nA0l@=s]s3,EKQj%f?W
%=BjJ&cQ73A'="Dkrq#bZQh!:?Yqd@e+\enElk'?+8:A`*TL`YEm!BC/?XbiX,5ZaKGaa9O&P&@45!S02idGjaMGhEl/%T2u>p5,3
%A3L.V:n&YoOW9^#TR5egBu.Ss2i%^2_)6U9^#:,e`_YTZ"EZsQ,fVl;nXjpJGi^;I$ostjO!$1F@q65BhH+A76WG'I3*n0sX*rP<
%D@L#'Hgb+3LBQ;?8S4'YH?ltV8=6'n9H(htQF6?-?aITX`ZC9=fiNYrOA-L[<ZeF!K(Hm\LJ.e&\#T4c\c^'J@S@ITj&D,^l_^r-
%jJtoEGp/lE?V6`NlCTI[n/4nj8j)n00q)a6=^_PuKd=]E(<lTj/0/obABm'i-hDnob@`:'>YOpO0+'F"*J,]qe-%SCn);_0+VCQ1
%:?d'MBOScfcQ$l<!jnEl^rtuE>>m0uF=C2jqVFhC,N8bgm_fl\&d4Y]&:pLb--=*ET$SIXb,,U1#YAjmfn+k8T2[Zq1l1hH).=[p
%k(fWH\s*cXL"3EI*YjT>q+p9h0Ejk@#lH#hGJOsr*>m.;THHh7#Wf',-j!?P'/`t8.ZGi:cDXeF_O%PKmUl$p8`Z(Z5KfQ5>tdBl
%m52&T'rtfK?4UfcJ.k7VYb!NM`TY4`&o?cFi.1`R'Ega_#jf@IQjX8U"NoX&K!ZDR,:f!$[Rh-#5n8KH@$1!XYhPP@iGHo(?$Rl-
%Cqdg.o5Vg:@t001@q!-fF6KWL8KAAn)(kuPo)1i=N0m=s#jMN3"0;iYVTZ4t2&F"3YR*`)njr&.N7/%7J<[9C/'iIaVLqJ,!a%im
%oBjY\^ecC0-O60;e2ArD@9OpG+[uG_O/.'p'uLK^$^5g5"V%Ot&8a,smRc@>e<_ihbRb]a2_qEb![jrI",8IGFY"U>-X:OCK-'=\
%,U"p`_(6^T#Z/,lU6L7IEGQ:Zi5,1\QCu<nKXi%i'q*@+!CG6)Ts[gCQe6kdMpS1dAd((@<$6'%mBfa/Vhud:'lcme^rch@Hb.Oc
%V]t/UZ*CNY`5'EIPU[kdrl:HO@=s)*Oh<e7X,4Hm@dl",)C9'GqL$Wb3n:2Do3gEYcDm89N7)nt$?3u&AbmYj1k?/uUdHPLJPcF!
%Ua.\iYr9jg]\pYOa(W[IS%SX2`dQ8[L'Ni;7N@Bs"'</K=bVCA8L%Z<kIN&PO;eb39Tk$3N;1>aRWoq+@]]-5)uF]?%6iNtY['eh
%#r9EZ"HB7lQiZaD+;pM&YU&muA8==I4'L'e7<`s_BniHENr+dYe!@oDpI$+Ad&`+CPP%28#"N?jRY1#3<Nf<STBHYs]+F_XY3)P=
%S%k>P<V):Z!5HLu7"pW?ecTa!mb:c2<A>@KW)eU/:f(h3Tf^F/D7(!6aoi'dUd`S=4A]9VfFR3&TYVY`SB6"ApP:2uWc,MPJ.0l;
%&9?61,VP5;II&d_[WE-&>aQ%jbr7g1N8)>0)/G"`SmbfOM1c2LJ-ucEj/!`0prNbB^gkRoc^qeE_q^#lDs[-^\1ghp2OC,rbi>:d
%"bKa\\m_>FF"`k3e6m8f>"ApYMKo<7Yu,0El@]a<8Fr-#DS^XOH&ifS8>E(2^Ta)6\!d.DS]Fbn1bi*K;M`.tJ7$er!!cC<*<mY)
%\0IHL<0j2]#!YS>U;]es+H/Y=#2*bnma+f!3*TM/Q!ILN*#-_o0.4*FL/(Pm_nX,>;(I[c+EehO$4\";5m[r:&MN)0=#=T6&+V:W
%j42?p^3QJGR[up7S4-V_(LmEJaNl_WBjC-B$lu$S.SE<?:S`qE*3BGQ0VL[sCbru>Wj7P(O*p*O$Eg-)MPED')(=WsU^"i]"j=nb
%DoO8[eV"59Boq?H+M1DBWOsI=O/[Djpe2/^=bD[UT7-'=P)V<un]um[/4X?T-YR$G@gXJOB<XUlZ>jdg!Fkp780EGU[]>@<ZV#_k
%"!gSnGVa>$k'sk9'V/ZKa>NCL*s;r<3"CM#48(_!AVpVu;t-E/JmU)Q5d9VsZV!coOI??Z<Q#eE^dgQ%*I35'0R_!pAqp]a4o[%l
%?>;QN7J`5`EK*;h%*rN:9Z?pljSDjOfOD_B%u;V3Qpn5g*%djQqFmsJ7OS*On*&t%ftc&+&u>ggB]7Rr"h$fYZ/^9K80ZV>K<Z=d
%Z3bKU@$cSaHGW+)`0j;Sne?tFQ1mW8P:260<$4R!1?fq-I%UD<O:@,N9":!7dO//?4[Ba$</fhf@0;7fNc#)^:+X?Hie$b&]Tc\C
%nY1Nr;;C]oME?.>H0E@3.]/:1YFD;S8G#/0f6oP$U=Z*<TgCXe_8JAi]][cUdfK*!L>N5F8ZB3FVPQQ'WVCg`8QrStMi%%dHh(1@
%`:RuR-a\-V'[f[$+5*;1#mZU&"=H,$"+JQL(HaP%$Rr$uIU`oYrPZjNF54)C_N@!D?"?Z%p%u!@k\MHBj)/k"iF3q,18U@;"@gNY
%Q;n;a'CuhMnI9N3$]alXN:16cRZR`IMg18WA7=7/=\+_A.>AX!f&A&17g&=Cqmjd[S.:_0N>\)'QAXaNO$b314U>1XQ_ReW@gGk=
%**JMfS2(`aA,9ti,rCKDdjQZF&9F[MfeYc<(bPh'HQLimOqj&&0^@I/Qb"h`OdSDQ-oo$sig5m+KkQ/B9+I2?RUnAh`Nrl*3[#Ih
%:[m#h7p4kjiU)lQfc@Esgla;0#5"X+<mo<2iUd<@dT7HYJeh5dVjOt6Xug/4S!:P*-)/])Pq>m"@o%;L`IE0gcYtm#$R@m^,[lD`
%38QF,,hRfo#Ql"Q$O3(JR<KGfR.PW%FE+>X/dblXIq?Wn5X[X>/TR@8j<[hHQm\+5EpK[t\+*<j;FQ[fY]F\<R4tL&k+dl[[MW<@
%7U*aJ@V7A$d5.N[V.>Ff1FX=cNd!CR&\!D9Oi*^8s#kRq<>>I$ZHqYKCHq4`<b<<V+?nho_Hk-p6`ks+GkatL,]BGWSsY5s"'8Yf
%8VC=_]1<E5,V1;Y)]QU8&sjt7!LrI=30f8O9(!XNP9:bcA&[UPUj_ZGh'C7kBA@R@EXZJ-d6:.>Jm(;<('7ja*H%;Z+m@/<Qfb_J
%SOU;fH99ZiT)guc4m'^9`[qp^egldXfDs!Y*]U5iicUFS.K,k8hm8j5it]f[aEa8b`@+7bJu;]^j:ob,n!FilT^#]7@B8<gG/E&[
%M-.=5K%Vh)=+"?7Sj.R<8P!-Y-4P>V,ub_UQmsG!(8?VQGNX1m=ACo#q4,Gfs"!gJN\`1sb0'1`iIU3`WU/&*S5huNX(pOZ9(W&e
%]>thj0`Bh'RL%XORPJEhe@==D/sXa&\@Jr(1QfqXZ/q/p[TguQmRsd/s""8=VMBHSI2U%Q=mj!dj1b<3=)-YGrpHgCE#4$"Iqd\N
%AR29d]AUk6C>^`Dm]/-_s2*lTaa*G%@:2=s@mr#2WY+,^R_,`+f=F]3GFuXPoM4n7"Pe-lmE*-!mr`r3r7C]GrO1/nN_],q>P9+d
%Z1k7'(UUfan,Mjk]jea%HeY)'r:m)F)kCkh%sl"j[MC]HqlS;)G.1I\5F1Nb>G\_\VQP>%D3I+fkDSTgn1`c$hcoShi&_la?'bnK
%CUT\6H@0Hu\_]N`2<2tDa/re1ka1_^ME'5DhmXNA?GHGgX_-hjrX\chpGUOukj3lp_XD<NY6D\q#6%q<5?KQ<6'!\+n?WS]gS1E=
%[_,t=b!hkI?]5=s9-;,gT'NGZ"6bQNJ1md3Ykhb@>V3+JX^a^Lh?\@K7*f'`<`Z@"=0'e3`VZuNo2K,0;t&<7b+P@+rdV`&d(-;>
%:'j/dC]l:T17C6lJ&%V[,-BhE>]jrW#H'7JmD$Xf`68Y4:Ut@C+!-]a:93+hr-Ihq0"[3k"^c,/+$8Ba</KE[f:;d%AA?`1%o2,P
%BIE\JC1,!`mML>[BX5d^.!SC+USLQlS^i\%Z1/(4'[JK`eR1DAN>DQ>f!'emrF*=cC$kgS(q+II@&;`EZk*',e"_)]'_Y%LUXF%`
%f9o!U)[aCfU,*Ou@<%k^`^L[HaXIuifNR(4/e+%K?`Ga02CC3g>Q+!U/u,F,[a[!@#3UdXC%7QdBhcqrZ3pP3Rj,&)0C<aViu3:L
%)Q]f8@*sqTI'#]!Q#;7--ph?]o\!eu6(u17,l!NKfG\Z_`rrR'@0UKmPg42m)6:lWBrT[""/_J//>qX`q7@-Pm6uAOL/c$@5%o/0
%cmLoMp9;M$R\&jU91XKf'hku:$>8MVfem?Ij+;L7)VBCeY>tM5^Ae"JVHF8<._pM]Y;b3dcgO5,>`G@?#JA$0HdfNIY05.dZh\f!
%1bR:qFmsoBHs#C43gRlB9"G4,Qu@6rX^m[5k3p'5rr';2^].n*1QkB[q:SCd?V(9_(o1&#WFAicJ^5mt..IK8P]TG#-2b(tfd8,m
%\FpA$$'WDn%k302JQ/IF1M`9\8V^j'`Kk(6EZdZoiK?ncKN.dG2lgOji=T4TXkC:&5_@ZTkNOt7CO<Q=NZHae86*967lIpBT_Ui<
%N_O.l\W6+]:'diYe:.GBM4DZ;>TG;.rVkOrl<DNUQ#)j8s$FIeM90\+`-[VOjW/^:d5r.N4aPF\I1;E>I-)lN'LE/6$D`cT.p<Zc
%9hCH_ko)[+?.7J`7Kt-%StV26cA"X#%Wgmnl5i)Nh1nK#cQT+l4Xtam*]6+/CPJ]V#+gOEj&&?4#V_?pc"RlkcGe<e]Pm!2[j!-(
%,Gk%NX"KU5)=gpcB7)SuZb`9e4%`<nIg=J8;Vu6=]iAi;1,G)U8@jtWd&P)`-/toD;jEO@$Rl7DHqGG*QP.NL$I)/tg?/.eE:+r@
%W=TdV`C>r(ZkX2hK7<nI*tm<[$0S@K490U2E[@MK%!f$BWrDu:h);(8Yl)9E>Y%Ut#J`8"'0)D?o>?XeRU:c+KbP$Zqk!9Q%e'i6
%GnTU3h:K<\X*I\U(l]>XJ`hBOkB`.2h-)++$7D\nR@lr4OZXr#1-%,C4BXe74>EE9EtM#tB/\MF&Z$Blp;_mr3k6/*ngQkWX"GZQ
%'(AVL:(.th7M14R`5mikBB(S`>)]hbN%l8Y2S(TV^]2<oQUY'KD04@Dg@PLo<\mZc/;8op,a'5s.++7#Q-#01QHA..jG>O3MKGFH
%Q=.(%A]5`1/<u)0V5Vn;dR6b<S.;2[:'jGle@/KCqHhf%e=`'Y)\?%A/*jW^RPqh+F?l9YSOEm[eACfI>sl(AHip0_R<Ys<XTAFJ
%YT,cFFRL$(#mXQGh1?&!?#&EQU`)<*'p&Qk3j%aI.<q+nPjs:;P'[.L>`<k9X"c.>W:/`.TJ:()BV^b5'FC3.!!]79)U(J-Q3!Wu
%Qgg"Ea9RHX_Ng3DCG<YGNWt0%4?uUNi?sSo7m$rK"<\*#0>gs._Hm890Z7FVaV[(F#cehrgJA/!"Z!63F!!+Xnl8#)J-8#q!tc-^
%NAsPK5DC-i6Yc.#=,o%i9WE%Gaq/9KJQ>c%RmagI.+le]b=P)RfFjFgn-a\\'<XWC_iPA%*eo2))QIauKZOJ;`/p2'OVFH<5Zo]_
%/.8\J$-t=-dfh@6-k2>sh2)(\kYC&!kR!JjM3LDd!^Wir15RoQB[feNeM/nM)[4EL7+;hU&p?jC)!A,9>s8X4Urhd:4jc(E[MWGt
%#IhtRn"NHSOJ(b:kOehm"Ft&5+QR<E"Os-_%)J?G_<c@G!I93K&.aJFN2e"4,17f[Qr>?j-QA-]i[L85OH!!S-+$Yud1cTr,.6ID
%1^Tf-K[gX?GpM>\a5J+lKdmBd&@+^G^h=#RiTs%*!M"n>6pqUq3?kV6BTaN3L,-^i"#L((JLH9diE7:(81Kp"U>.:>S:R#jLg#nC
%C`@.m<O@^m950OB)V,\O$;l;Q3S%Ec2m+1X'Cco,Ar+hGX"i,D&00PqFTXkZPnLkPW-?1*LX$RnW<+j_$n3lAN&"o(WT$c>KiV,S
%FpdN*Lm4*Z>,#h1B=5Hn:";;qRORo,n&RNlO<@%pKXCsVP#tCc1P+'ZG)OaQN:8gh"!m([=AZhi.J/uqQK-%bU='`ZSUkYL^uH]7
%*_1gm+k.A(46r.?n!stE)K$Eg6n\F!pl%jL*"k*kN!.C0eB]i^oPL1)SifV/Z1j>^I"f'8c54=ZOjTZ*RYo`[0_pf44>;"fq+/K9
%AF@Om4jNg>4%GUWfUYI4Nj6*U(gBB:bnLiGnp(Re@`YiI.'k8&HCD5+0tX#MG!/6o+X,GU`Y,%@n+Y]FfqMKm"2#R,M]T@j):6&T
%FK:I^!q'9H)63iZZp60g,SI.3F*6A>cq%tM+[@RJ:"l?)8?8;s<\?mJ%"4g<c6ljdFpGuML[V9si2Rd;0cM.NHH\Dt/9>?m>AgL0
%W#b(?/9s@gPaM/QP6QU`AJ2AiZ,82QLn@a_9LE!X.J4;"5THqhTMD3p\7GGlcpiE27i]rE/?XbA^qXZ\ItU)8dc0J3M<T(,_<1kU
%!r6@4nn>Hkg`.RJ6=^_g7NjMp!S)iE+E!WKA/\o-HpGY*&EX'<6m.hr5]7gnSaUkiK+:^%l=^CRdV9oLV79H`D$`Sa\</@$[q$@]
%/7rk[TLq)Q0U!D2W-MoM6XuQZ`\`m<Bc8q-<J;T5>[Z3U@qZ@V<5Wd)@&_4k%;6UK>t`dT#C/&fQn\HZG]d74!o1mPi<j,<$4Hn,
%ZC"H3`QU]`%kId'C7o6S,b&0W)>M3*J:d9M-/L='5aGrM96#k'0D:pTMk)a_O:G-OHA#$lK]s*b(H`2Z.@AcXBo3(!r)?YcK*eD%
%HPb(^V&3ZB'<..`^?QDue!GtX9==$T.EjBU@M88=bbd(`^]pFH&P_0jS%uf=VG(DCAS)7)jXDMlBjM*EVA2HRYRoqs^s+;<2kpZ0
%`>BD[8o-8C(u-*_VN669)_RO%9TTZ$)'%!Pj)LiG9nick7EL7A%@o$32Kr)nGcMIYf#b#POP(i]AHpsWkS1>EiJ<A#%D]D<jr]@P
%6NM63OpfV\\"?1KTLNl#Tn(BnHO'Ud,X>2m$V+M<"?sBbR)"Ih6hQWLI'c)2*pf*+Y7]TZ*$Y2D9+2(D"FtI,;8]Mt@YK-18Sli6
%qAqCg!^0f3'9L6\cm(Br)V75sdc-Vua0[d$l>+0V\@*.Z>t9j@1a,k`<0cSle\K+0"9'_l>&Y,Z-[62>fOSrAUrg_FCE#2nR2g&,
%gm/SP%g"'i2aCB1#mt?rR@`&`^^bo:An:HHduqo!7fl)td)tE])iYeS`2@n0klmBOQs-GhI2WG4W#BqKd6_LZiA2RS:EK09H-df,
%RN(<>\&h.#T(.@/i`-Yh0Bf)JpP6((JR3;fr88=P!U'H#k5?(0mf;R:HbKe49><Dn1`'8ZcV\]tEADgQ%6ebCY^q6kGW@%^>_<?Y
%&S<q8X_Q"K"QD[(-md,0W\I)4P*dE7UFF4TMlJTVOa[>[bU1fd\;$\-)MTbbN0$^][D[0nq,B]`$*[TN(_IEU:,?pd0GfU8%Q&3o
%OLqU:SR_c3`gC8[jpj+fKk\sA<ZsRpBFI_(91Vb7YS_pkV*i_pfZW7+M`ENrnu?^HVU&M7TR0CS@><3a)*9P^`JH&5C(OlT(pQYG
%Q/P_2X0Jm-&M(o'd^-_#5#RXtOhFMW4r/YWd<h\(V9lmI0$mHC*6j[4"Q:bV$f&'2*JD;_-6-j=YpLK+dZl/LBYo<9]?a_Bl8I">
%E1@fGdnDesX-+*K__ga3's:GMMQ8SW=j#*<(4KmK;aV[PQk>JG3mDW(Mo12fM<P2DB23Jum:03X_tXtpncMI%b\<)TF,+Q4N:'B6
%4et8-Ifc>N8-X,d"i\,oh*Jq'FV3b_5RsqL9LbZY\-V^-*;K`L!Tq!8K@5caef<.>d.o=/_R'L$2Ee3QkaH/Jln&Jq:bU17"kRN*
%^2^AN.)GJt+=36&VdCi_ELMG;B?e4b)kJ>@'f[Q```n?=0A1<4rK^T(d:+WmZtPtp':jf56Q/?X@O)$7A%i3Ra:s=uQ,EkoBU1JH
%iRFfX\Bl`\RPG05=;9'A8Kf*(6CNbq=@`fS?/ks'H4!=2M.ECaF1A1t2@k(dNWWn]&S5t&B\FWPgnEL<.c$atl1u*S:3(,Bj,;8P
%(gE$.&]'XN)=eV+(1kV_)('[>i(6>^,i`JL;):o$N)0I\eZ6ljmj)Q)]Ll^n_7'CpTh-,XhRCV8liSr]BrkGY1NilOnh&odVO6=#
%Le$4FZ6RSk]S3TuA'V?[``VTmR=foi^e^5IF]_b+.g'Yh#=+-!!YY&g,g#KeZZ-_UB5jZeUjS-oHr[>5gWtgqf88gW,uj^5/hoSA
%'bQKN$E-S=muau$6.VOHTFf_<>Xt<BdbH/@Mp`R7Y_LdI(`egf*m%uOa^UFL9`!2G8n<#EoZW78U;k=i(O2uM?mR)iK?n$f'Vm$"
%3%>WSi=U.:"]GK"AOr[tiQN^77L>!?W'Lh,?1f`q!k"_`'N:V<;hpT7AB1Qb;oGYEj6$*T]39GL148#.i]A!_jH-FS*]JLLbkOIR
%/6>n]C0)ij!nhK3#pJ:K@T>6&Gp":?dRd:;V+C)cf$7cB,9C(4i]8WJo5G?%-fE-oPmJU&$pd[FfNBhg>TTdpU9Q4RJ#pcUCCtnF
%,-Pk3-QNe?9p%A`C^X<dc_U9&cp&\mqPU?E`]>O"68;M3C8.sc.^W'MO2eHWRZ,6uHDsX/fIlt.I-/<IJVG)C'U:FoH^=Z2C9LS.
%=0g\\6R%[SXK2-?\/m.X=eX$]Y_Y7m@fCuJU?p>i+]SsiM#mr2_*oMYR#XsO9>aD",XLZ;i\?MW6$\8uXg/11X^p+H*RM<ph#'cL
%SCl<R/GA][:p1/S.g#C$5eX63Ma4s":p1/S.g#C$5eZ7ee2-5,W!DE!#*?\%;A_Y+"%Zi#.1@=lCB/A;/G@l+fM`tN>Sa"6_C+^r
%ZoDsq3*'SbODlA:6&#CPm/[;8XQOX5=5fP5(]H2:R-KhC'UPVXE_0:3e-_P<7@I6CPcR`H4GJgJ-j1u&`8g[tBGN!E=faaS+\YS"
%qHSBGMOpOh$J_`kjNXG;3:7i/J(d"O.EhZ-1L$-p.Lo9Rr378*=KGC;1J;<R%ZAP*Cu5^7l!I$&p]G'YH!h`DS$PhHofnY@2)]/B
%E4-+;N"4j)MkjGt\V`)@824XonKW>^HNMa1Ll3,dZj7Y<>e"f%P;0O!1S.`3LsqFq?"PRe8GM+apqXa-L"XTk(]b)"H:K7KX3tZ-
%^k='D<F#="+ajb%`.f^LOok3Mi'"e,+f90(R!#\BR5pCt$TZ[m*67]%'M(Xb-o!jh2aTtRCbZ$&+AIs>^(\28i(LZ"U[u*u1EG%d
%+>AU@&KR]BN9-+qq:!_gX;BE9A._^erPQ-gGCH6J&rjY2cog=P/[Ofrg,pDKEJ]SeMK=fK0p8dt3g5Kd^C'/tn^\`?]hl;M*.WgI
%fO;9AL:2Yhm7/E:,`bP:e"Sf6(Y<AeW]MpiIdTc%)i4H[OK6j%9W<89.=]!0$Buf&Rk[?2I>plFP6/a$0&\'S!cjt-3lrVdKouC-
%hFlXC4?6$>A`=.FSf)Uo"Q+n.:lG,rj-UMW:cMD5'_91pk_R!m5sM?Q+5E,4G-3MO-gp(#WT5SOit7b5k=isd7-pf3:jgM"O5L/$
%'Z_+dcKV\1P3:bRj8?8\M4btM>;p@Ug<BV0U>m1c=Du3'l^11F^BW@EJlaRX(X:Va27@ms_eTIZ>r%cO!30g;OI-I>#\MI\NWsM,
%YSKOUJ-5\KS1[._<]+b!,8l^K(b)/NYTjEX!ja.+h\ug+;O;U<YKmo5M1[*_*MN-:I.:p`Hn\khQs)Hto#eq"NY3thi.(q5j1=Y3
%7t#pgFPP;L"3Ern@KN*=,%aNA?Rf`/'55ZDIWN`PJ$DbdbWe6&H>:PJ=WUq9("1M]^AFP*F0/7Uja<s*nF\9ZDjK+ECf6_g9iCp[
%!*>i3Wmp(X4s&7lUO%-I?6,C0Ek),RfTka4@9sl:F]n-TdlC'SiDSIL;u?^=1qqREEb@2p53PPkcRdqh/9=sJZD=534UQaF9&]9q
%a.uK3?'uQ<BXgPtEp_#&'W0<'bX`^$ilXe&gh'G4cDFR4Keso[R@uaTghJJ.k%$L8d'$&>.-/bo*a-^(ZBQ:ZH@[#h._/G:0a5Z%
%-&MljnZm8!<7E9rgY4K?SJ=-,jP:!X_qYaE)VBjmM5sr?_prGs_"p[1*ZNjK0o)G'/5Knb4!naKI#VdPPS?k\@QNc_jI=)GFdG/o
%*OZ;;F8r_U?+)G$A'J*-=N,/"`GQc=QSE,&V:b11f^5G5m.R[m]7!e&?DI\bV8Q"rZuVg-.pFc4=]8dp6Y5Eg8&d#'d*e^"?K546
%*3$$Z.I1KK(o\A6fR3DiDlMs]oZF_5&sJj*P\F)gj<1o_GLJ:e;kf3[*b?lVB2q!/e3+^*@Z5#F#"R@5+l8-n(lL&MVHc-]@5?cq
%^pB$ZeYqIeiknL/&LV(FZQb3:e1cq=cA34,(`dFgU4[S+<?bn)eTg"?CiEjioJumKHNH'C<3O8"b=V/hT^J2?m[<"lEHI%nhFNLe
%9ucdNEjLqQ=Pc%"'kBg8goI')hc401,:.(`*N_uN@Ta;SYr80kNLR)=-#8dIdo\.R7cX'.Le(cDHI(&[\B-/SfV]qkl.h'22paGq
%Z+"mG6u*c`RiQ2n/Kmr"7Vlqs-Q,dg<[s"#$o,+OMDcu:2An`KNh/s6c73h?\FKB>eEiuUg%9IRR8L5QN#D6@YhV&97;2:K7ZC&%
%j0n&jM8ig0ZC(6<j\R#*b<-0<0JeiFT<W^u@&qni8u\tDEb*gRQ!4,3giZbuK!0ABLKla7@#1PG#ih;*.(gP05tg0kG\p??=I\CB
%kY[,=:3+ErAT?H>Ta&&G;bb(:Plt]T<E,[)nl84Ggoa=G7S7.nF]HiB:k>$$"\&P.,ZbDrDr_s:98<l",4h?3HR'n]8WrrrJ]sJ3
%).fus-Lkre>EZ$Xe[3!@do$okrZl3-#$IQkU8RH#h`#g^7@s,2B#`qXQ8B*cdQAu%Q$"o+&$oe]>-<2#V>.eRYES9Xnk&/c$5Y=u
%ZXi`^<@sWE3[p&NM/a8%4X3T25<jOOp>D)s'rn<g'YhjS,eR'q5l,asGZbZGn@%AF#*[LYW.^ZV"or!Ei/<#<"@VbW1>71VOoMIN
%rHBrN2.t5d(75Rq(?Zi@V0=E_:aJ'l15H**1EDnH`$SgMF=W_jgbbq#E><EPAP0uY2p]T[@4LSUiq&T/D)E*$eg5+PQ;XSTj\jFd
%MGN<moi@tAXa1PP]X[MUOt.X,k(As.!;!]\?\X%"Ycl"1#?l>h[Nh<M!Wn:>6cDGiWsENa;dimF^m<)P6M*6RMd&eacmu5HW?tYU
%a4?CrZ2U2n,Z:;[hKEl7VLoV+]0RL*D(>YS+lDf>P0l1R)K.FW+L0r]d__iJ$U0>?`\Lq6Eu/'6BAlH#>i;+UE20ILqm=,,kA.j\
%q:3nIWmOgK3!!W7Fi):IY3QnELuu@,Z8K(IEcGu0EGfE/DWf/Yfhe3n=e+5LSD.2:gUX'AG'[3B0Qh"LB6T6-raY,8>0`WMTp)a,
%XtH!`OAAN):I^k3l9=2YWl(Ni&f=Qtq<lO.^8Ec5$5k?_m47&0)-LZ_k@S9AEAb[r8!PN=?Zh_r<FW&$kBIb3^[OTG=O`8P&'%3[
%o\%V/Lu<Lt&5YNo&`?V3TfohC38;kTChfgrRl-#h)Go6(;.Meh9Ng=(c/8*=Jf6Rua+j%4In%CQFdg@S^;OZU4Np&JL>+/4GoS?#
%4P#$Uq.7Q>b%fIO_ZTSEJb4d$lBqb=XUZ';%O2q`o*;;6i?IPJL?$7=#8W@4F83`[Y)FRb;.[n=e7kBlUe`Fq[lK7?.U[FEDMa_C
%'kh(^f/Rg""-:KY"c4'g&P!.!=a@%Biq[39#";Y5QMCiYGjaro=N:GI:%lJcn"HT3k*<Wdk.Ld_QBcT!-1X4PcP[Z[B&ra+Jefb@
%k3[&/`X[f"?l`h1+@7tU_V&>dDfoV=TrN][8:o4Y)$89C2#unb)NeLXXDl,C.>MW5%Se.RC*p'OM872PI:\km6Eg;P%ZY>NNE0]i
%.4&"T#"=K-8CCmjOnqrA`Y9gO-S2+GP[c(S0lS&sHP5G@]bgEFQC]J/54jNV=4/>\EDJFeTZR(9;0E[PFqir1<31oFjD"r`.9,FQ
%Rf:PEAPZG+4KTOhe`?<BPunR$p.$)pL`Z'\WfVHI-,mbr7Y@t:PNGs8H2LD#M1h9n0bVJf/1G0tAY18M0bO]GT)a^k[&Q[C6B-7,
%#\n$_9?dY0&-bO7654c!nV%*fG$;u]?`J(o89-_A`n,GS*2]s:"jGIE!/o&!'*)8;ZnO-:qC+aB?`Qc?4*)V7JeD@O-Y5_S,SH>$
%.7,8/b-C\VrWAkb*<ubpC%?gOM;t6gLmiT''_&Tb?C<M7Q^R!$!NrU#AMQA'5k-He<*Va'bb9X0_IP\Z_\hqMQuS22q$Q&X<B.d]
%4LXUu[P]-[d0\dY67A3[KRUipG)P-;@t'hQ.:mL,ae(@io#K>MMM^E8.?`O;cU_/]B<_/\>:dp2/'daDcgoKj!QP#dq"!oHEJ>:4
%eBp'Ql@>a,C_E/5UM0"6&>$^d[#q)pf;.dpPUVD%56fT_:/VJ<eMCY!W(iac'JMW\29k4!"*L)T9U`8]#^7e-$P9>nWXs3uimELB
%ac4bPn=[aSPa_5(6&@_20InRfrim$,nGo1lGY^B1a%M0GVA;Fh27t;HPM59r=;li>LTDl3Tq8IpFW@d6_q+XgIj1-%j3(rOG17[j
%qc11P1CnDfJ`E1uW-M:LX3O7VQ\R+0QG*+&OC[XJM".X(Hsn<l2H0=##iftppc^"T+!D0[X7/IfX1WXY;N07U6)Ks=`oIb2IPm[g
%L1]KF%)h(0FS-jpGM(ITitCVCQSM^>iQcG=l$Kof&&'c@LN`+i&]==9O@QUm)\O\8[L<*-Z5+dRlo?`=ZH#^6qKJdW`4tA>I&?2`
%PjhNZ&f.cP]&G(,HW;iBrM;ik@Q9,<nIC-Rnj+lGdN0:0+a-Bhpp?2D(pchtS4d\7b,gZ2VO1R/,C-4AZTI`[<Fn6="W-C%1bLj@
%7F@7&&l>;qX'D&\%->3['co@I>@07eeqiMrEB#]]ZpNFd3AA<\GI=s!FQDShG[PPDcb:%6^Icj`bYJHi:@chmqrbs^F%MuDNAd$"
%qVr8s**,>XOXN<UW?c&0XI,)!<V;_Rl0f%j7.LsSD=si%?!1.-/?;Kl[=Oqt2^qF:;^`m;-LgmTjl06ML6*VL_4Jg.T!UTJj9%RT
%`QoSspQ0>'$#b1-h[UJgGheLP.+3Q9)975uPI$>79tselfQ/7?W6=%Dip9`":+jfE[VV"mQA[mSMENBYr=sZU'RNZHD%DM8h="bi
%GK3gEGa\0[\G"RcdaCA!::su+.<Zo)fWg@:Etfc<Z!YN1?7M.$<VehG:m*!$Ce6q8eHG_K;6Mpen!]f)3g9)GZmVc;&SkF<)7__8
%b<?]R.%0uQf2K]&1&hm:5hTu&IaY_JS+kra"N'r<EGgRW,90c;K_[30Va8;GQ8G[;39c9^JKdV;d<KJ?7[Hd6JBMKr^_Cp8qW*,(
%iinZ9%cti]Oq$-K?9Ktg?9b*c'M,A7#j"?%4Q2TREIGA0$kqq0NQ99,r0S$-4!W`t/A@U-btVanRYKig1)P=0ClPX:fYf4SK=hLp
%lJ^<@R3uS-hLj,'JbddgETc#k0"sC@-?^:#[_13CNk<Wjf`L9[hI3?B&%+A-[5\\>:/Z/)J&Q]3`HeE$H)S]-W!bg#Fh,dFrD2e*
%0]s0)cBrZ//PFEZ18X[t-:.uJ$\>4PXEZm:[$<'r`\9q,U*,RJM583"\`86+>RC[npI<MPA\WnCrrb\9;^T6-!af+^'%p,.^,40'
%lj8Mq7;3S4n`5_,.8/W`9AlM^EFh)>(g\hNQdMt)XK\+KG9pHKBEL0E#(3s(?:MPIrBVF'<(f3(j#C-!p9gaOf9:)Zk+YZ_b_r6"
%d3rjl3@WV/Ro&OX!UPAJ9k*(@ZF@g>^WM4/9dPm%:gtmqB0o!]g*<YiPf,q7)1^`$;oPuY,K"SK9?Q<.(]cd_Rm/[\!Bi!CN!eed
%`Mu%>;PVlkETEo,b=Q2@Q&AsSmaZmFBXV9'_b\ALjhiIPI.4.g5'oT^fb9_/.0ohD'[B6a-sA\-RE<WCDE9'ZXc+p_9eP$l0%s#P
%h3A!Cr.o0#)6Ym!-5Z9R7TS'`3jp"Jn6)FB9#>\ua5W[F3R\Y+BP4,DgB:4**[#NVJFQ?e`g>KaM.JV0T;3>tDRbHmCkuUKJhc9C
%MfdlGW!6N-K8IJuikPpZoR[6RkV>CiKL:P\#Ta*l!['`E*".:Y5/ipoZZ'8\<_CEl"*jqu(8NFF'kQka1@[j(AI&;qVL&019p`o-
%3om-EQ1_H)kZ]XDG*\7X72j"0JFQOW0OSL&k-0[=1kdrKSR/43O_IGj=Sc9$-?]K/b)/tP28u7?b%[aDLp$@Nk0g6H(YmB+goNkF
%P!LFdUEOG34kHr2b[g$t,I&40a.=/JEjc@$i1l=gL!#&4f`hV1R#'qYe[Vq)`qQ7N@(K;q]X&rdLB$qP(8_tnq8DL%"/EmHDG9!;
%`*QhC4KBo=2rZG*9u4ne9ip%DRG9MjUa-:CiU]__YHHsVB'uUd8lKhkF6YGXoq?G@>$3nUEaHEtF:j:5L`h+Q1,bD_l"om>MM8=[
%UFMFX"d4SM*(=?mq9d&'0ONj`rCF3Z=5sBC!QPQu^X)F4>Kc.Wf)=7<Db(O[Pd'[.G5fFZ<nV+fc*HshPF\Z`M&=Z4]$s[g/5'WF
%o=EQmLRFh=KF%;h<Ydl:ojk=PD6\Di(p8p2X(0PA`n&/h\lcB[:<<0Io_EfBGALQdZ78n+29EOl!4^DTNF!g1,oa@mn0KTb<&+eg
%_D*fH/W"2tBp+K6p6VV^WCoi1mm*LV`JdZrqA1+6Gdp&^cBtssWYWXNh(`bpUm-_ra3]:4:6;S@9[Yf<Xd8!]JrVWe+$,acQ(bP'
%B9jL)b='8m&[=_l/.SZ$ZQ:r`F:EB_9PXCIj97C*nsNTW=4MAkNmkNMW^fGO1h)_TokXboIZrUt`P]O$-r',51!RlrbI_1ql9d@L
%W9G5Q\BZugL-n@J`!=h]WVDH<M;<tue:pPG9e9bkj^tSZmb(-#.DGFXm*',nLZWp*QE>2V<Y0!8Z>(VhS3#Mdd?@$HZ%T]W@;+YY
%VeK^rR4pY+jjT7>8N^^;ntkauFI?7COi,(1;`q$sMDR)WUgoBuA)fUSQH.prpj-1DppG^`k)`NtaBTp3k%bd2)9d@tPWO%P<=4"N
%38.bBKAd4VQRDNT%L=^iKFH5;JOmQ[.Q-7/JNTISkN>dak<bR6$u8[dPlpG[^/%/0-aBO:5erAD"6rmP^_d,7G1S!_i5?%:CeH*t
%4!r[?.F+uqcQ?Mf:Tj?[8TF_SS1VKl];@TT"5`(Dpr`;;4mk?g?ftAE_PY\MUMIQJSVXV(CRmk4D8_'B=i_'\b8Cho2<DY[(E+JQ
%rp.+IDR75u<D0T3*M-jXT"JoRO:Jjm*0Rp;_75\YSK=SrgjqiZ_'+!\a:-N4^),Lc_\`d2FVNq'%:VlFrQOa63fmgF[q7,Z;k[PD
%Tq;=7g#9Q%j25.oQV%MPRYk,fa83=q+(onPmniOp:0@?PQ_<2oYhn8eP=rU/6[OHj2#.RH6r<@5PdT*@U4[@0&e^]<f$8@0_IUo]
%@suDk<@N+)06Y#^G.h7N^t`DNqdS1S@b:KdfD?<=ofd'opn_I!A%URok+%!qRBbNF\7ImA_&"U+4LnW<53J&BE`.ai"1BcBj@,b7
%$BH"gOj[8QPoNIU?[H]_"c"N_aDg0F^JV0;3'jY!,(C'uC'%l'<SFXN#%.Y']U@EUU-^CV6N9Ye\,(3VXU&Z\31@)Yc\S@CQkG6j
%A<h*B7aFJU@%[e@/-`Y5/WO(hU<%:-_n::J/<eqr2LP_/RT-7=&7dQC3VJM)("DkSa]"?QPJ`TT>&:)h\"flHBR=d1ST)7M=$&Fn
%Q/1N]'Zq-Z'^m?1gdf4Z%O4a8+n>GJ4J78ECW6/\b/K2'?t-ZNI/GA!@ZMnA.8SO'4F6_04LD!:<<.T4"9],Cb^2h`a"<cm9$*W*
%M1ksiMg<VD0KLVc=Fj\X^b&UF(+X>[8h=$$(+X?^'tD3iggUHTnu]_#kI^rL+('YITs?!9:KNLl[T"Fgnd'KeJ`:/cp"AEl:gGjF
%=4!>\bkR>)9Q@Ee=AU')"&&\e9SUckX?^>".MG?JrmZ*hWI<OSA<rGN;E,_*\FOGi4F&I9Up3iUDaHsWBf!;NRP8(eM=C'S5C+b!
%@.)*'X-i\ph$0!(YU\_S<O&=!XEZ\O8P\tI^je-'5H.\nM@*e`&:^PmR']2;YE>PZ;@s4ATbt#A;X/!GZ!JmlW<5:9%OprrXI4Ag
%h9iC$a\M_tHQPig&chuI@">:'@:b?!$UgqE0FG)Q_@;6&@"QCB_i4ANR'buEYO)0E/cs=EC$n.!Z?HgC_e"ai2KN3U"m)TI%f[_+
%MKr)CD$juU8=Ms"r1^Rof6I>10@sf-S%Vn:mWQA$*O`S8^]4#mP^_(=p>aHq-W.K3CdC#9POD0=iR>i604+=?/UCc@2hp^+\).-t
%`_RPM[Jue>]("a+I5pT&pIE-Pi)](pA.8>5H9+j^W821]>@#B[PjWC2L[gH#2#QOD76dsJp4'Ff_lu)b2PD."mshf=pNGI)h8A:g
%J(6V*I`VUJk$>GZ*)+H/Xe2i1:o?_L]*i@bYdO5Ee?gm+D143Fl\k#C_p\8Nfr]*MF#4Lc/ZN[Ap">?"-V#-T=mdV1,##BNs'&_A
%J8=4Z`)3R`GVmXl&s71ES+Cj93BYI3)P6D8^)AXDM_o$i7!EbD\hU;de]PcAe]`pihr1NK5J((semR"L6`qWn_AGgHZY)40^HQ="
%rRT:lX4t_5&QAKAe[TL8B@n7`-;?=nJHO'(g[=-s_aNo]'&ohl*Sd+>4Ef9!G0.UNV:PLM>0hpoXkd.I;JJ>-n!BD+[(DNH@fdWY
%Y!pai:2eX#ZiIk5*jlr4>*Q'RMegYW$7_&!S[SCf@BZ;u.<3oBc^.8mjKpjZ&+`M^$`XB0.^LXEYM)#cD%rGp12D&6U"L0L?(orB
%[lOHtbq96b-oAP)CN_^SFG425I#?`G^CF29o;^C`'WTtE0tfo].oa,I[9I@qcIPUrQ<0W(RnI?AGo&pLs!<BL5U@/0<E*3\p>37:
%ZN3;E0)O(O9TBTIg.],TN%VlliHaSR_d#VMhf#'/l?Or%ok(NnD#]b*C;a6k-P)ZJK6DGoj%SD,doLm!*T[kA9&>8Q_\nt9*AVWt
%=4DoVj-Ip(3&NcfgR>[mX1?<6lLqf7k#J023Z3)*H";:Ho>66[Ui.)R8[mY]/&>]thS\X`r(rj<?@&)2jG8bQC?ON^e'9b"NI%Mm
%'#)N9Uc@\WC]ZVoeilQ3jY6qCI#D`3^%6IHT,c,?[g'`r5Gu>Pj]kcKqQ5t<6j]@$DOl0JXg;CMVVZ0^jC2t!W9q3BN(_E1l`YIP
%l]]N'Uh3u8nfMsKO6W&sp##436isE&[*@3mH#"]BA\WIf*t8GAH8hALWo`@DB/Yu+^$.0tJM$c+^IX:?65n>bVS:ZW8UTe>q:Y$M
%17*t.jKK:<kF)+c$_6rON1S(Rg6lW,^-L4)7iTZ7D(q<'*%!\t'5asS#!jlT9KX9_?$b1+n$e'B-`peu`3Q[(1']K-cO.coF@;X=
%CsOjC(HJ?G>Q)GTG30u3\?$I"&%V0Q(I$o*qiGkME@ZFX!gjZcjMH[WplGk*1.b=7+rf6*:2.9pIUi!gf5m<]$bp]?2_P$JP;lb)
%2_P$J9Ag%*r5K,3r0P3;SATs/C`aXU#-CM$$dtf>LW7?:=;ZG/_;Rl^"4.?u!4q5W36CNFC=b\P:8dj\m)F0e*@bT%DtH*$9]tXJ
%(8_l/j`l'k/WkD%H/Go#,X/mpO\j3VU;B5t=NHfN6C*PI?NN$O?'ra"fM'<SaMqZ'e`q%&P\Y-OP\VB72Z@Ic3j%@1^X_-'p$:Fj
%^:hC4<nP_*qcOF!>hIAg#:qkq]E,,EI*-.d;t;P7c?_M)<<'`,aXGcl5r.VTbr!s/)'WDJgV<"@795'UN>ESBXX)TcQdr);.-2)2
%<%a$t@;sq8!8?gIf]n(mK`U8%;nV4)0Z8uYZ8`"?IfjKd3s@M+9FZq6.1@k`iMA6@'S_tSL>diU=d\0%>@GVP;A`^I_b4E_.1@k`
%iT3:BGZc"K\iasr94L6@i<mn'>ECJlZJ77h,aR<(Ep7bK\8[YZ,!"+eDci-7PC[<&YThD*&'M[q7@nKI2QU#X5d]X>MO/2Kp.N#%
%7Ai<(Y.#e4gC)uM`.DRRKk%BW;^!+sUh23lJBZ>`$e`&R0e.?d\m2j,SRGc]*Lr!-S/+Pjs097tCklq;jKNK\E3CM@JKHJ%D1[Ff
%**EJm`BB8u^*/Y$$%JMpf<C?S=P#4BBs@COZ0^Yig6_+ffNcZMc@ZjX`p.GfEI"X&`O6R=7+<ESk/qUhOb4#uo>mlm!ejUF2WOlH
%blshq9<ot>GAo6L%<4;u>Kr[X%4f?-=Q;"Eo6NR%4j2*Y%Q_:0P=;#!hs]&6`u?>u<U[<OBFk-RYEa1fRt("2b$t/^7<^`olW7[>
%j_W8C9VVk"D^B&DH+<MS\.eG]f<Pe59,E)$WR8Q?W8?n>?+F4QmF'#a'RT[.h<OUHO)ch9>hSf5`KksG/9?_$rT5GjQ;&8WQZ03o
%R6q7]g1%#bSBl4Qn7cT;93m;>FpbmgRX""Y+G3=uhbK2'[F3gsS7+XUs5J2`"XmO`:fLhs\Q>S/5s@l](+[H6$iY`C:gr]Sn'Db!
%aHpD!>d8m.3>T^O/'+&Y/meBSEeSI;0&]p6+C>W;=KEWP%cLNk+>79cnrD+I<]7+T"o3O3V"lCs+p[gX/'4,pA1iTcY0M8sBJ!8J
%+thJui-B]sh9j@1`j#GDY5R/+b_p5cm\mlblEn-JNkea706::>iKDs!%pDiFolC7qca-k0Q%)YJlh5LVm9sLf.l"<a#kRGl41U/%
%OaBrb46Y:)6?HQ,g3G5`m(/T:PJo1QPg#Y1bK\0%P/^GO48I.f0jC'`0$_<NQX4bsJZB#SU=<5+ae.(V\/bD:X:gkmjZG2o2/KhV
%`9#k:j0A[<MdI(*a>pWuHXs3bL.sGSF!0tKh^.=BX@s"9cKfso4mXA*rsE["ELu,l!FNqdYijH\TM$)/LTUcU37N+(+#@$h+G+X*
%,tP'BVp@hT9@"@&k2]W=\8&?`jT5$cP!DQR*tMQRW8532A'QPbKoJt?hor==heBdMCO]%=?IWXe,qbO@.iNOLDc`*]PhhL'.`cFK
%aR%#`P*oW1ZW3a*E1t)kUuL<qi8&jq4#k<&!lGZ!r0\?@/A9ToCcH:r@HXIDHn_R)/<VVZ+'G@++`BZE;eS/RV:Qp0nmXp:0;o)o
%iCU(qG`qLc6^''M2A.($PQSX,p<E%EF$AK`#l'tFaBXg\H803qo!h5J5i;TFT^U<(XNSo_F3VaXId\PCOJcoQj",'X]'SOPb22,]
%d;PS!l?OS@lcj$gf`!DI/;phec5=rF*ONGh[]tK,B[qmg4J#2'n"Q8:7olV,-LUkjRPB0UP5,pE8pc_k;M,'m%9[b7K@T@3o1Z8U
%@rsKkeFT&:&t'QdXA6C^Wor#$[8HBL?M<r'mRl&!26,O/]DbS9Z3*KVXS6dF?^>bQbl+=rO^fb]lUci<PZ$>Z%6Q8_$rZQ&:NF^D
%M_i;QqEh=-[R"CU<5%XQKT#JoXH&L<0V-Ld'J_-VGi1VH>\7)[bqGr(YX@"o)ineo=U)oWVm5:"de7^_)nG;BkeF>%D35M"bb:EC
%S@d]>QbuF7g#lV#/h#je1$9n03Li^E`o`_b0h7[LbIKQGK>.B4'[+l-rHbe5b%(Gf)&EI20AGWpc1Vk+cAD`%QbEC_;6SG1bi(K2
%38`LOT2T^C**lB[^4PqkS8VCe+)j?s?pR_ob40;f&RBUA.:2!=f@nC]96:@r\=!4K%.3oXB&j7o=^Xcm^..2:RUgt2PNZ&=7NAi,
%*>g(Y/pDC9DDuX-50!2r-s.n+T3;ENORI_F<EjFInuLh)_lcp`g9Bq5:0j%SCZBis0Ag#AiD$24V_m;WGo60]peSU;Y$&J-dG/:r
%ZMTfh"?Zjb36jPid1s])YDC$r$8MJ'm\Bg*d4,+)5eULMf8O9":Y<3]Ol&@-8;sh0CDWmL(I=1u-:jIE&mW"r,q]nl/<V*Wp4a4!
%JXf=OM?>jlHlQ2G5gIPn)!>IOWu!.(rca(V.Or8IZ1MAJD2FQq7#I0f0<c3\4A`:We=!)'/i958'no,;AXu8g`knE_&ZW+#o">=Z
%-pfdD"Mbi:JmE!]lsc!\>91+Zfgb**%9KSd.#"g)k\A;BX3Gok`s'G+f[j1h\g(9$Q@8:[=Y)b)fUC>sI$/!9C15Ll\?8b41mSa]
%H^DOBOf&YB7:U%ShGp':Kghc@BIqoZ'Gc\FU/>#LQI2EmgD8dt)`i=aS$A6rES-:=Xul*ceeSpk\b`apbHT6GG.B.E\XN-IY]Sr&
%FB7g3XPp+mIu+r<C1XM,)/CNo`Z!,`Im@]h]4triADrHbd)EO&@i/pBM^J#b];7IY'IPCFqHflaSR:9t!>5`fD`O7_k^1M)SH">X
%QQoJ=d.\<Xn)YC^6JYj0FmicM67rtd6K'F/^-^d/'Y_bmnC_VFI8oe,eZsGp14HqO]BA@71L5#IDuDH0042$0oCYGnPC6<RZ.*4$
%cJ#f[;9Kc(d`u=q3P%WTG9.rto8X:sKga73nkm6C(/7j6o3+PTr$>fYH0bS9oD3\'SBJ-kj:^s`r>]#4lHJ]#lo0&a'7>Lp?HG&5
%b<@Y$":VB%05s,d@U,2?Y3!L7KdZB)jp>;HM7"gbB>r\p3>V;snt(]Gi5;ei&Cp@K@kS!(fZuia.jI(G1hPu8AT)Y"QmtW!DR\0L
%Bm!U=I.ilr9,?'l+GUp*m-Pb,AAQ]kg)cc-lAa@dX#k]35@$jCUQn4sNP3jUDeG+[^!-Z@7)l'8,"p85F-rY%L97)tTsu)Y+00sk
%F,\>C+R0<*5l5TUkU\ZBbB*IA.W5$HMoM'SL#k!fXUGT\e!S=-?pKb*G0o]KjGDWdCl94T*()aQjcMpD`O2Ds,&fTT-1tlV4`(.`
%8$9j7(Y,N*bZ\kP\G7Xi`9d1Do.Q(#-@oj\_jG'M6'c:`c04l4H-!2:(nHV_6m!ZY8BJNCAp)h`<^"J-I#WHMnZnKo5:RuFU)Kli
%+M%I%@4k*eo.?skp!2IfIr[@N!5l%tcNu1*c:'VTT\jM_?]M[=d-c#H"iY[$XBF&bm?:dRrpE5*i"BkI\pc)O1VEpK9]IlsU?$%4
%WgGG?3"dOh0J*+>cuYS6="Y2`EOeD5MG;0L=Hk,:SEH;CX!2jj4;K4JZs8_qP[$Var37Z:!Y7+?;_1P4`Y>[+74cTr+`/iC/;jEK
%LdfG)7$aFH(U5C3MPuG8Pbm>WQSfO)(QC"0$bK*;.!Z`;.^OSq?CFlQWQ@#`B:)t_*6Zkr3%J'`="t>g\)YKn%)dkN@Z`OX<4a's
%IXe6>2Ku(4rnNDm]PA6.=rnX@WpK\*JVP[,UckjZA6-(s]=4AOgR3Z@r>MHSERahrB66/FTO;jFUFR0%0Y6SdQEKW*\kU<9kW9`u
%g3_B9DF5j?-tn%"Iii-aZ22Z4^V)\)h`UVeG%Us(YA&c+jAjI]I]F1V7t[SbbBgXH#V>Xk^Bo%Qoj`jW>,c^,m6`c4Gh1\WYB(5G
%7ua:&TC:ScQ$J(V&]s<C5gq(0%pL`eLA2^6<Xc%)CDo>i)9gPbs6BLJ\"Gt@)?/*!%:D(Vn+QbKdO1OtCI,G]/a8;U"6JGb%%8n4
%m??!o94lUEYOP2/K.q_Tj#9%!mc-P,ko%/2!T3hbm4,e#IK$73R_Qb$DctYP9dk;!%Q-ZFMZn!!KacQhB3(tt)6VqC-*;!q[cbH,
%k3AQ#iu:_E%=DY&VG1t[n]&C0pS&U7qW@,Kr0ohV'sa.-6M="^Z0bbrh#Pcm?2oD<,!:?%Ku1OHT&WqEL&GUtSrR*Wq6k1noL@;X
%lt"$+%3=>.Y%O1&6I#,oAD)`AR^V^bQZ^oa/K/M4G9-S?/*X,l\b`b>/EH['MlXHs>h^]UE?,_L=SMn<nD8^</.LIjn:4Tlq0JWI
%@ti'cmhqRP4mZ@<K/E%aStdI.];BM7plfRs)<!NcU"bT'Dih%a#%q\a5.U?>,63'=-t5(SfrfO&_dSH\DL3I0j''04kgUMXpSg$Q
%#2eC`cudHSH!R\%%A!0jA[(%!TJp/I]o&DhD!5"?[Js`HP4t^.J(njOp%mAY<tj7q,[DBm?0)!m_-j)Y/h>c:oJ,er<$&o\_W+F:
%4F[Y#;AQCfL8L@uC#L8qN%fH-gFP(nj>rSG1Er@fEM7:m)Q$M\ndo\?$6SQ!'DGkeJElBDJRN=P11ap2cp!dU[);[D-jJrG`PBP^
%0s22A%19qOR3#=[;(N93mqJj.JB)'6Z7Z=siYYK_gcX=L4[qYI?1SJq]p7SBQKC9#A%6M]:_XZ^4u=fl(1oP;An*nZ6h`],K?>g4
%7Il4j'O?rt]07!?@'cM_Z5DC!JgAX@gQp,.Ib?Mc"L5?uorp!dcjd"6P:?aU#hfW^fmkJB`p'@[`Sr:cq;DZYn7$*e'k>/D;8iqo
%mOX`A#18TH=MDg+AcZJkjRb$pUhZn`R(6%\l_Y#1J5g2[Rg(d1(M6iA8OQ*7=k%4X&uI)%F0REW$I`HV!0I@*).!%b%=rE,HseNl
%S.;olA<R6CU3X&!)NgB2$M@u(^FI[)BUc"0[mIqH<2UC<BtfZ(:"+WL8]V"r(V\9ViBf25J4>@/4XaX$M*tk4B_udLI7nYF@[KG(
%mdO[ma'jY\/<<YlNl=nO$_k'I9Anp#=>5g^<7Q)UWh("bM0T00%n.C+>Zm,I/2/DXo8'/dFKl;AMqFCDH;bJEB37_(U0Iq\25*u>
%/JMqg'#>fA;Dr[BYtQ&\>B:I^8[j),qN]GF0@W=_2fYeoR'8^)p0FbMk<gCNVc#PAfTRZ,,SU1j_[\g4mIk#_i&eAbGmqOB[cX&Y
%'i+5/TQ`EoCgMt@+c4Y"(bsbM1#QN)?/U3'TPOfUNLPlR0PXDS/g%!dQ/Z%$N3G_siF%S,Ht:8S*.3Y@N$@Ar_4kVofJ,lRHrGY@
%USbOJ&2'G*-6l;=0Q=6f+N^oO,Sc;p05dG#qTq]4Q=^-k@@WE\#7Frs/Qnc"$F/SW1ro?i)%Maa@gR<.7a?UJn;'ffX:Rf<3#ct1
%NM05eE)hs2"c*UhY]p[?QqK4bb[t-.$U]Mg8:9*F+pE&GH7AhEG.AgqFG"c>'7>C9pb3G6!97Cj253Pr.3QVrN49Nb-Y8-H=W6=$
%Rd7OY*We!-_SkWDaTXuu&aOukemdTTOkfVK==dqlZFcok#)kNaQiRWL@^8iiH*tSDEd@WU";f&2,Gm`gA9geF!pL9f"^F=PaYcp:
%ZQ`Pu_K[kSKXHSZ1""X,$]&JDDa*_sC$kgD\l.`S`3<.pgh!?6H[\jKY&97[OJ"MdTY@frdkXMKRC_F)N&CgO[KY9i)6]5L9_;p9
%`8X`Cn1.=;eo!R.FXsFWS^#1OU-0?b6U`"so2n<A1d((Bqf1ekPPnemMu%q'b9?QGUc\(C<I9];Y-Y(XLX:J$p[3kk:kQcK#o=A)
%U%l)PI\,mUK$;YGoPYI#Vn5WC.UCr$lB]&r[s"N.f__`++)K/Cc9Z(?@A`cuen1$A\FNq5hkjm^B?-9)?Kfh.ehGE6=B$M&qq\)^
%Cp)Ti+CD%u3,ZtL/>/GfXRd]p?gifMIb3n4q8U!Ohp8Ql*NP<8F;I.9B4hSGs2rY'0^j#n3OZ7K)@Us?9>LNZPXOsNl=bH4)%)<L
%5Ge>uo4DY/Q8/D_I4j,N*ZY*k"SBA/S:&[t2_GU[?e9^-0AGtt](`X5mn@Hjbg7Z9`]m,5\(;Y,m/!A7c"bhRKo<#F9@>BIpV!lo
%C[TDijZ?/+WhLI\^A&JtL5Vo2CGnK@3a\Cl&t^klq"=^n$@BI#mFq"<!H#J_*=Q<LgH#!%UrnX'Zo#RM3$o#6%==jfF#f<c#e["4
%a%:&KDZ]!g6Y61&Y0>EC\!uHQ3@-V4V26W?G$;!pdc,VME)Vt8#?uZAok8S2)OB72#K'TWrI;1^](EEgk]K@8m54I=S[dlpCN),r
%P-rVC9LEFnn<OLol\fK3r4QCq5A2T'?=\*P.qZ0QrE#g'Jh:7]8Wscp^X6aElG/'fF^+gmG/#nJ%82RjY'YOAZ7^N%miIMSLTT!J
%mrWY$k$jbiR8S'resjo@mhhSgPYPlKeN<.aqR_sfi0]",nL?DBS\@-/oO[X$?&lr_fI@'"@8D&gbaL+.DOFk3pP8XZHG<Tti&1Q]
%UU2,([]BOQJKU3*E>K>e*fTu)^F'sbZeWHICM_"MBB0pM)dP$/9@HO^Bjd<r<GBh(9#egg9"&0ChAr-;qmbr5[%lG.%H7kgH%36\
%'7."pjBj";TW0S!4cSXu9;hG]T[Q2rp?>U)=/&),j8NDfdVeB#_c!Vi*nL)?Sb>l&3o)MR;cZp1Ff!snX$505Ld]VWP>6&2hKdj:
%*H_SV4d/"f/HQHJ8L/fBm@C7AAdN6eq1YI/ec'dHlOQiW$O/:2#L?WSA2Mggm>Oe9Ts]O$LSHbLh<VgZrDU'RM^E\S)V_Cni3_%M
%*VQ,@i9_[dX8Qthb*//1QcNtlA'OfSns;;13qdXZ7I.-X-_nO^ks.!CQohh4H"eu!pPu'u?dl-_<`V0<3=`Kl;5YYMk<7<(H4GDK
%TVeg]LHl!+\ig3:G$:H7oc`)sg=GP-<<r/;2TUu*?h>90%^O;HDDfHeN[*CAP;GVC4"8U?/TR'ke[r_B#s,R[(ulaMZ*sh*PjMr.
%CQ:]f<8TMnm8KC@BI*Bq9_Up<'2bVG:ZKA>I:Ao9J'jQ]-(#3cg3mr*D,/&<lj:7^eS+/u7^(]c2)BuaFRN4JR/GbRXQTi;,N.?g
%X-t>sJHOE1G=jN-n0'0$>Ea&Ykq\Z6p&l1!+ZmQaR$:?QQFr\a!\&3QS'b4rmWE[RXK29)gPbsCeF(bPpBL#Y`(?S.[[QU2M/qVj
%>bHsLK*Y%`7>Zq5)BbHf9O+Dnbk!ki&1Ru`NXCq_Kp1`TM'U4JNQLpAmhp,"'8_q7Ia'mj:4i(Nko,@o].jCbmnA#(h)O(BGiPls
%d3_mi\Z_TBnEg.tDWL0SB&uf-n6&[i5d>[@Sp'QmDnisB*hLlD,pXpEc3cH/l/Ba(Got^Ln)0k_<'gUC-K[OlpQ#Phq=T^3,`<`R
%=tm4;)%Y4G5'GWZ:<WU@qIc'()&p7AN7!_Y2jFPWANn=D.a3d.dgf87lR!tSPX[,HG!a4*BqmU;7rpLM#E$9BEq1(#3<pN=rJdJK
%G<5'0K+,^O5qR`[i2GLKoi5<Q:/d7T2+6ETKj.@!f[5fnf;Ea0jFZ5/P%/N9VJb_(/rr_q;Uc$GaE.K9N;II^f2E#<kRO;9pBRG\
%k(FL"#]NZrc-C&'TGR4(*&G41f_;[T^kt:3&Q"KCLFS#%@RY#8Eg5A\PT<gaPI+4%K@=#EQ0o,W@2%L"D#([Pmi@`hBeb%hJr?_p
%$[NWW*X^r0C@`<+2AgV[c.51/e/=E7BaJ%8>qTaPq%WNV-1>O]8#+PX?]3CqbYjiJ1X;C[or!50D]6S^-@T<nbHpiHDe+kCj@pJY
%ZcNAk[8-deWFKlDG'RPbW_I\,OYNh1/WjUF8Tf?[=T4!'>QZHDU2uM"L1H(=a:ORb8>LQgAIq2K#0CBn/>Lk5_6t[%/(PjmCrYeo
%aOO:MI"TACp%SP/ZYl5QQR-Y`h9_tMk>pPu6qIQF-"T[q/?[YEZk'dKN?c($0^fE1/Sis"BQnK.X:H.KS(<Zr^T=Zm8Qhk[Z/;N>
%Ni-IV2p8lu.RWkS2U!^QJ1FHA77Z&F$70h-7Z!5o!.`TsYQ')NWIa>Z=;DULB>Xns7bc@XVirS`mB7u*M&"S)8ngBYQ@I.mkFchK
%C&Bcn?I6<TqWZ5PL@%`&PF5b2d?N'MCppog.@JK\.3mm=1WYu)%PYP:G(DpT_tJ%mEJ+E^VQsW+6i\?/;#O!@XR&:$!!@Pa/Ac$O
%mn^p/PiiajH+SFMRl2lj<258La`g5/dXJkoaC":QC0g_]rZF)Z'=/^<\rCD`MIkd>lQC$d9+^/U=dZ$(-iZkO8TE&4n4;Q5$&'kQ
%E:$qVVd0)Fg+QHPoc^9Q?e0Ba]\`X.X7V`5$*N7#<;rC6Afq`gYLpLW>o**%^"_r9aHcfsDAE`d%4Q#XgQ5HZZmc/&B1XgsNgj:N
%=EA)B'=.HrQ;jE8E&A'$[[+)3X]OfD_s.(!F,Da'glj!1,455G<j'8Yq\3RKpNR#[WNDUd>T_Irrh.f:D.Krlj]QMO$Wo[VW9eWl
%V]UqLeuJ]Fh[(6-lM$XY^Yn:g60f)ANZ!R,6]4[%g[5$K3npe96#4U`G<e^\\0Irl7iAejWW1Lp#uJ;EA/(hoI>qGu%&Omc89HMu
%]?YRW64Vm7*AY3!g,G_+9!?oDWgV''4N7#_bbfWAc=7<!GE4h<+]-HT:1Z/+>M\<P/f$teS9238/AS1Vm^T#<mCpEn't"M*U8Gb%
%AS]JqX&.OtXk1=*4aqh>o:6+.*o>\NJ%Y[&]^^;2h!@6c3P'^m^%*_cEd-n_V-P_bXuYsBesrf82r?cDo[8&5s2C=o0/rd'L)\[%
%Qell@ZE@rrT_bF0GZVMc\aceLHh5)0e%t2)\T&-tZaoVc8mgY*2@L+g^3R!Z^hW79g(,8_Wo`fr_m+R%B`8;sFK<g^qsL@0_s3;d
%U%N-uDK+$N0`\d%*o2,&>TH75le7-`8*B">\4uW]Ha]PLg,7JHE8SG+r$C!tPi#9NX.&MVf?FQ@dFZY?KC[-TlJ:d$B^JC_!,b1&
%'n+td4fTQNrSWF$c-FB,#N=(7Eo_\t'0Ypb7^\r)ppp4Yn]_TG+K4q*o'PpN&)Q.;=l!h1>m],r+4l+8orDA!M3%>l#]A]&=M*%\
%2=*8;Pp:'_j$@Y?]Q#<HFnbd(c-":T;5H.]rTO3dX%++g7f=1][I;TT?6$4Sle9%`gM^HrI_YjK=YoDLIsc=NJ*5!'Gd2>M-T9o6
%k/O_P'5liH]`5P\F;m/7mQ>m-ER-fDo!%MmpBCk7cu3abGE2.XZH,N.g#,$cS9qU(IPA1lrH@:/*<oYrq/C3LDCb(`gF''3J%iG,
%=kS+?ogA,LDr[,jeZI0CeOOMRp[-7YpW_%YNW#nbWSC#"ld2FtcL%Yl/>&IDcC6G0eYDX/QF"jCoR6=bVLQ;UZ?i_Ri'qhMcDNk_
%`k`b2;(7_5DPQV!Z";=<4--*@r7uu9[HB)jj_jHI/'[k<fE)EZW82akW-6dk5!FA8$i9A^_++%:X)Bh`ZGo_tld-EVJR%.i=bX&!
%(%enhD_Y>:U@7G!@<IXB]@n/c[[^.=O%-?XrGe`]E:<VK>.oCV>3P=fHfK$Os7e3k>m\!@#<V=FRm4[E5D7dEet9R$X@#34btk`1
%rQb;eqA?l*W]r]6<SB[-HQ*2;f+4Y!_/14hnBlI3IG=,-2tV9BSidNi^UX5)WnqJSB>#PdRS<f.J`1>=c(2oDlT\O9*][PTF(9Fh
%8$Ml,3#Z^?WcOGs&;0MXImk'Z"#K.`"kQr.4uKMc)W)W!Y%l@N9p=f!_=n13'kl\%h)f&ks-=_0AETtF.gCWgcf:e:M#%E^UNY1o
%(JfXrB0+GbK0,tMhkRT3kN+sUYkuPPFm[oc<g.'T32<s3.pBQ)HE2)I]KNFRGu9T2HA-Y6B9/G):9BA+\d>_/j9@I/lE/4f;/P6/
%1u>nTgeYqFoJgYOmCZ4/rl:5VqV?QaCKUMpf(07(-J3b"]E?C?O^AQ)r-=f4?coD0Hh+(]!0a<mBZ:_OjZ*&E\"d0^SW0R_IkpFS
%HL`(XUW#r[Fu9c(>1Id`BDqLMi]UlOl2/)7fBU'<VmjPc_raPCl+ZTi]13sH5oJ#;a9#+PGC-NPkf1423I#miF;$;(H6[P"]K"oP
%o2bPBk#2NMgH/jqZ1e1W;o-l?%aVoXRaL9V_iMn-^K:03UCY2Ql]"1chi6R]mcTW)UU0rM\6CL#n2>9@hD=ObGeA4RNZL=1f+_9c
%l0[lLg+=FO'\9C%qkMm!_k/#[aclQ9$$pIP*^U$74(B/@mrp[u"p_rY)cuE'+*BaP45ZZ1pof/9IIk;(8f=p^Ih2J8`Jm^o1ti=\
%7_;_!.qM2A#2bqep)EaEYTZpmlMHd)Y?ej%]$K\Dp&1Y`DtV-Ha^`#(rH=u"qt$Kl+&=iSj-q(&;8-2p^Ks!L"Q-nEbh'$tkT/H5
%/lJl(?`T!alVHI'kr*sc?aXOec)UL8QG:\:oH+fmC'O0L(rB4";gZ7PnIbeG/)6ieYViNOCF>V:D5`&fk0MrS]<2YGWh?l\M[*'h
%4lE0=I=;T#c&hrdI/O&N]R(&_T7cnse0NTK]=[u!e<'5?D#MTs]Xnfndt_4X6cr[5oM-*N]u6q'5Hl\<cSmqee#72"YLT3XpC]'r
%4&EPRql`MHEPQle-+%<WDSBSHm2lh<FB<XTWR[n=,l.lU+,#J4i)BI%)`:9_EHI[<qo0QKl,jBR-.37g=0,0PF;S)jbo$+Zqn^@:
%h'T!c.Yu\]o_t>hM9Dmp<!F*j85ReL02pS^Q%ed<JrX%[0'>0PD_k/Q@oQ)!Y7u-%qMB+-Y,(T9Y4V0Ck=D>:Bgt;B(9J2A`L4rI
%%.tSt1HG:=^$n(^'HCHlG62;`XhgmR`&k:5`nCq;W=f<F2<GSHB<B:M.S5]D]r2=u2OlmiY7Nkppar!4`",r\YFQl6_<VVo+hiq&
%6.c>qh-@]q:%[Bi,#9m,7aO^fO!d1&#*biVKc`i<"9b`$g))bD0QZM4/6D*7Gi1Ru5X+cc#uPUG]C2A9iAT*Gc.4L\-3o8TdJTXF
%o).uGo_mmDpS07Jb=>`Os1Ti\andlF=4Q?U%p.X/<ncI)$q9@.IF*V<LX&ToHFM`B+G/?%9XO\5FD"M&G6!`lCkYVQ;%GlkTCm,P
%:FU&2UcXC]:g669oe*1uT,o7SKQ_M0rQVaSg?cKI9!U<s)gC>kM^Yegn%Gbc?0bf+T)Z@M:&J2piq2+j72"7#YjVKfI<OeRS^:2!
%)b+sr$IB(Q&$)he[24\.^5\l#>??i`%A5`KrX?6EDLK@PA>5'&T.0,N*aRUs_!6ZcT0;DP%2ks)$c49]FtSl+-A2o=3@DnG`c9Nu
%J,6!FmlpOI.aYN^W2>4$]&WR?VY=tAma9S91Bn)TgJXGh'^Qb2>H+b<MNSWB%r,Io;AC`Y<s@WEiLMl0'u\O*pYFHPoBO/]_9Taf
%p1Ics[@\2bC=Dt<o5sAc3[SoaP1o;Y+!r@nGLqm9I*JbunU<fV`ic<_Y2=QL#j%'AZPPb(nF7DjUH:]\HL>#4&r49Oo]Q+rW7!g(
%P6cZN-EYnM.&aRfOs>^9H2a+j#kdJ<L[4J08?4YK$D\*pPHa'eIZCh)fIh1DRBaKG'b@-G!8bDA8pep.WX%j^[uFTn\"7&pHi1$t
%p:8cH)W*f]e=RZ:2f<QoYM/s;8Oq7$4jfl6'2-S']T"tkG2:E&kC<L$jReM./!:&'UUK_SfQkpC!L3;^Df!/"ij4J^pY*=,&(a9?
%.t"pTj+.(NC#80?qbQmsCDD=m`JleQrM+SfrKeTI;aDAVj,NN+SlN-"^TtiG*MYj&#Hpq@VkGsT2>usTJXjA[bJ6M1Igc16kNh\o
%?*k+@/@P_!<nP+Ad[iW#@fuS?HtQshrfK:7>Jk<`mQTU\Hj6KC6cQ%aX-KG5=71\j]!n#>=8@,dr:8,jiW@j><cT1oKu_3N/+F-J
%()k`SPrGn`:+OgEm44fI!d>+2<4-L36*5/)o*121s.f$QdC4b^bp[hC"jHtfRl.0:)bt@)oBMC_6IPGn]mT]'^r"@K:-$Ud"'st$
%dl:2=S&Qi^B$KD7lV]4XR)XS&l5aD0A&JGJRB0EnB(D/GlReJ2D]YP`eC:*iSp/UOU<u?!DYM"kjlgahVRuHj]2We#Eg-3R5JQ(;
%[smu@"B`M!Q-Gq^)_Ee+2b/G.IsT0e'L3)=0K0LAX<*V0fW7^f53i`dXj9ca&/X7[X*4MGID7?"0!@+AfC#3-&&23rCb_N1\Jaa7
%?LLk:Dk$'^pKnrM@hBJT+#=/ZGl%,Di-oNl-D&e83=>\2S_J-ugkJC4L"G-dB%s8.pYS9q%0^G8HsmNp9]l*7oB3fHb4jrC!eB7B
%Y&6,b]RfNpOT[X3i)R9k3BW2MK:UED+5Y;_l)3874m`fP5.0jo3o"E#p31HQ9Yq_]0V?&7)qT8-]rO*K7XNn+&C'V>ESUdao4f:P
%5DEV=s$1YX;^eq`LE6-6*<l!fiT*+'g[)-@UYsDal9Vq/^NH!Vl[@U$ng_6DkOoHPQ/5KF^l(8bT>,,ARj\3kpt!g/[5AL82a5$!
%IUFIN\9W2bW:fPi.%mF7$=ikl$;Ae.\':P=Nk>5kF#'rMeut=/o[kFp5.Z4T4F]OPbEhbkhM*bNV6b66`o\*bjn@kM?YYS@2sfi$
%XXcL4p@TNTk2=pN+-`$HRrMW3[/[YunG.=D#*fHin"pBoSLqnd%e&79g3eD>0#Wl9<KSLZmEUp!m]CherUfDV'#*qapY'&hp+8&V
%"`H:_>Z]9,+%RK!>4pQV]*n5c.6kBBjNClVIIaP4[&<HB(u^aLS,Ug%TEB8GqD*<-]D5BZjh,'s!8"rp*OoH7.\$/sr+s8fg^g:8
%$?h'YfXrs*j.E#nbP;ioTAKPb4bt!YKjGf`FA-!nAeraW5(6(bb2Y(-dZT:C>l=cid5p')HIk?8Dm&i)p$UXAM6S+jTH66[hL+hV
%oMtDKhX^u[rL<N!/FS](^)buITR7.nF2AE8H8V]*?Ou+0I4qU<^GNsR(u3s6Xm\H-ag5tTdplikO`e[gQ/2tXT[2.A!&X%Dd+sbC
%ih6D`rHu(pA.Q/'8b]$_(B39d"Tm`OTQ]M,6V]9<]Yi4pl!F.%oDQ)U0JRL\O8SBXT=uca7[@jsDk&e,?SaOb]Ao.lljQ+fWs:ST
%G#0Wpq\pWu\$XQZ[XFB+2\&He/`8e$Da]l;^Pr6]'`bt@?`S\V]VZ0Q@rkU4]_^_ccqW(0[>&bg6(gAeG(Pf#8[fY@G=JA(m,bj?
%^g!G6")376P+5#9@=EX=`c,#>j/W9\q3)tpcB$k`cQ8NEmG$t*YLS9]DE0<`DY)e#Fmh%6THG0@5NC$Ocm?[Lk''%7h.rPWYO&r8
%0J)%h!((J5Ja:'69MW_P$lZso,Jm`k7c7N7%a<o!C@J\/Z<H!IfR#T,)ouKjq6*)mBQ%XF&"?mOVJ1[pT?&o#nE/lR=CA'IqQoc`
%o^W3H6`'YGb(5k()uJ+JFfGkHJ4K(0>$sQYGS.&@J)\MK'lQfmf&iCe$0o8/nE.>`CXbSV.d`"P4fHj$EpS6"s3:D*A"!?T+H+'^
%F__A9dClb_D*@[f8$MsSdjkDkiCd/TqS<KRKb)eFVSV)hT7WX4dt=UQd6l0'fEtWTn?Zl4YTJ=7*o2<_O/`!9EZ>G$HPl,;?N2,[
%p'W31famP#TOrLs7'1_j!0Z%5nKQ[+?9O)F<*]#shU$+i>/,H?bFb@-c2S3m&BO:b0m&\'%CjcOj60_9'e194rUjP<e-K%34?@>.
%KQ_3<SI.2sSmHjBa9*"+]TJHi\U_c4Mt9e9gHtYVokLNin^d^*&*?A-kXYdIe6P;:Afpm#<0DYb`$s0o!iEF!9&Z%'`]$Ab/^e%6
%B:u,R(9"X+/154>0C4p=Saa[\mEOoso?FN9Ci(c`>[V@=rU*]L$9E;RT%g[3NNF_jf$?ee@K&5eX:0bos+n6$m^/%#DuXQno>+r&
%/r\%],H<RqoFuh%2B!4jjVLK]%1uCBg"="<lJ):dqYn`!!P&0^S5.)j1,L[^=9<ZcFm\r[WY'$^\50:h_rnpmd9`_u:W^prZoY_a
%hZ%b3LN$^kaNXZ[gm`HNEYR]RpKl&CTfk/S46JoL(o`3SVE'/X/BkAY[os^^<bl1gful>3DuVT4N3(0:8M#.X$XiSuRoNTO7)n^a
%j>T8_6]@fWYG\RPm8`oLrTJ0+Da2%SS4&6ZkM6prJ*.%YI67`55<ejMgG8g#Wu%o;rV[7862gTrc0t].pV-7*phs[(I-8g5J51NE
%RJ?2(m=,(P#dsUEg7Hj^"Y;`6riVLco_gB>?2<o<Ie+Z<I(Xt!+)cW"_nUJEmDn+As*&;*^K0Z,"I7+X'MjW\'=u(WIp(\-pV6J+
%bdapOrltCgq+pa?&+>#B]t7lNOIuOF\,Pggmse0RH2%/^DuM*^l[Ok)r9<s7o8e@kPHTP`k52WaNhb*Po?YO'qR_7PjZej;A*3\r
%5Pm%Z:;-oZgV8\gl(A"8NW47pCVTcG0-B*Ojl)?k]N92#^AcEMI=a!^pmUld_n,`m]5N,h)aF*&eEW*EIJMT(s/d0QpOD`(SZt]!
%qnjMgql=Z78DTdqbeFubq!YujqE#e4Jt20'o<E2OOc&2lSq#dq>Q=+%IbETVq<RL^HMD]/jS+]riB$i/38k2?"+TIZ^()[\XfoM<
%i]H8b5Q0MY`\.2b[o`$6).qK)IfW=$^OPk,?i0`8#$LcVEI*oehu!3JB0Uk:?[m:o`o4u*-U7C^lRH_"q;toK]>$`uo^:]"8&'K4
%B<V>HGpE:Hj&53T^].^%`ZDJT^@Sc$5CW=h6cXH3e'H$0DI;'Cn?[W?MfFckd6OT-j@A*T&#_i;Nb.jj:Cf,.#Q<qq?bc-Qf3Wt"
%qQIYOQ^^,$oq20:O1tYFS+!+Br:BtkC#^*"J+%<*oTN(kEr5P`NbZ@RbKkqBq;\rup4L,+l\@]<5C*/'=h`eif;FQM)thshId*bh
%KXk7B5.9Dh0s[\rrL\V6#Ng@Dre%\ohqn1foZqpJgRl1Tr```ZpWpQ[htup!J&WK`:4q;N[_3V!RD"6&>Md!hHiJEij9,5s<?M7(
%Si/tA-ub73NUjd'48Z/QAZ8K*p6SRN1]6IMq`"NJXVZK[8c-U_s6L]mf>"oqn_a9>?iC_OlC\pm6i'/roo$<Is7Ml=*^0AQmJ-O-
%s(j7`hgFanI#e5Nr)`pK\%_n&DtTfK^[\q@4b*Lbp\sdQ^[Y,"hfgG\E+LB1M$8,>k2DF4pcAEGV]WVIGaGD"T4N+n*nq9j;B\ns
%WL0-U<[\t:,<bY\m>jI-$lSN;5.R@4U]6<q[iP,S8<uJgo;uA.V1^cSRsi>tQ/<X`C0Wk[^i/-/jMgS;s71g*T:4])P&gI?SR-W8
%AVe(9QbE:<LJL-hr57^pJA(p%:LAMI_2D+'GTYf;]ZfY$^6EU5qBqn1K!+9QZEXIEM82NGCpM(OR\!2;9J`LRF3fm4-O'Ja50hOo
%JekitZ]K^PJ\?="XW)RE^;%t4<YMB'_nQR:L>UL,_]<f>?#*'%f/<N'f(%SkQ2d@LA:2ufGjI,\4!jJ@:;+P0I")+0IDa0O4Gqd$
%fTJ+\a[i!.7rlYVN$8d%Orp/fSXa5[99u67?GjC/P-+I<LH.Hg]Oc\+67):9RmaSP&l3JTbM_,6PP7ePL-)>Pa02.bh3^K(oAf15
%Z"*PlOXKf0FfNBL2=FD7X-4Z)V2oYo(ZQ<MJ,JG%l6^$Aij@\=Lbshc/[?FX'5H-_SPu'>k>o9e(gX"]^\c5=eVT#nUi7/D>bQ?X
%,$SU)RkOg2prS<+s1F4#M\pbQ:%5f[6LVSbN>7/nrUd3.J,&ZLQgat'LG/])$[:XeBChVRVa#V"S!S'>FKFZ$-HZ&oT?S"ra)Z'\
%f`Y.:C5hc_Mr.ILWt/Q$?dD%[p#B*q^O#hF-a0+J^A7'/5GmG^Vb/f#m%?"5,j=e=U(VcKFm7p^InFu_E/stjeOL]rZ=4Z_nG3fI
%nB$UgGo%)eAnK'%(I)8(l.L(Qa3WWB_okj5HM-g+mm+28(RQK3ef<-\IJE>RR;SX(^hQqe_4J03=%fBrkJn!RTYmEcpG'9k@Qs%N
%HH):&Ona<BT37f@C(.,Z@1)a5U[LPnq<qCWr5TUSA7,W1BCu\9E;"[scS'A5gh,IRnFjn`@q1R$0"^%e=aI?6rhpEt_C^G!XhU?l
%\"T,'lgMUbY:m2U7#&DSprTT2?[V_>idY:77\7?@8i0IVQK%L!?8pu4l7d\Rj`:,?PB6chit!gerTt-8,^oIR%lJq,b>"$\!h\@0
%lfXj`h<2!#B?J2AY'enud/S.V,!FG`1a/-hZF*O"V6p(C[99+bn>SSYBHHWfU:'7=8V.]Ujk"#s_[I7l:?(9VXXRag5/3?>ToA[E
%q4-.o(F$_tKBKsa.#(*Y_=@O<,1*^n5G)#Mk$htP:4E5jd!kHF=qg+X*[RFC%+GWmi/:B<^AH[2T&0MB`J5O`N])f&o^b;[`)ZU#
%Tg6N'qF`p3>uTg,Au:S1d/LRW2p:0BYJ35DbpU8Oq8(<OhZ)F,`=3NT]U;bmc0p%SCiDoQs7DRWMERktDmOk!s6-5-HjP3TGO(dT
%;!'+f_hD9D"]o_1lKk.3CVB5mTmNIr?R$$[?2KTlm0548]?,Re]FT3*UZ=b*$SC]as,EM'O3p$I]",EhiTG-oH1Tb7WSt$M6h93H
%?]C@9f5d2(rEmB@CO!&U0E)p%pA47NipnaDC%%Cu(45[+hpq)2c#%[tY(uQ2Va(-Dn[9,/Ye\r-jrkPFIE8TF8*pS0rPaPq]f%55
%dha,+js,4S'AsBCrn#>Cr9]F"^O5FV+27OFK9'>fE`K7R\*2=?Q\W<Kg3]]#a4K5JpqOi%rk[Pnk1B@24rHEq,lDG]`@p$3*@MLV
%r]ol++5&9lIC9"dlJ"BR55=WR5KpU4b:inS[Udgm&+tE_f>A[f^gI"V[[$_f?hDD3/0#tfn[EHNfRJCL70^FEH^=BB7AjIDp@*u)
%Ed7QGI.HU1J%ik*aBEAU7bYE!p%t?lVX!,1Dh%[.<,in(1DJFpeIN/epnoc/H1CN^Ma+CSo!:RZ'4<s_(6QWF18E/1DXhR&[j@?P
%"ukU,!?B6fMP1I22n2U"jV7['^lKMk^K\"\]uNBW9;N9V3aD8,O6G^<bPOi[q3s>5^$VtuRcf$i%ZU$bNZmm"$J^p5GAj-LHFTc=
%qgNiH^%\!\QP"iD]3ar8M,CkIBK06GGHQ,(%Ysj7%S+grDq[A-I^gm;Y$18ZLYG;fiBHfOG-b\j"!9/bl,gOJpS$I*"<X#[?&16*
%18s4u9nctVA)K;2U&O.Khr:]sOiM+]HcANM4<<glKcK0_hYu*?D]'"orhd8A?LY<[$?mNi7;jSuj3UTV2aD:Bge(h^kGJQ'7g%@>
%K/HX,?-+DX3_UtJJeMf3F#kM*;S:19[aS-`WtomeI`6h1&'=7*/e:P(4Cm]uH,$^s?N"tZ"o"`mZX90Y^>cXKGE:VKQrlkn]<iVP
%K3%F858C%1iK?6MV/o#Q#t\39V%KMY1_hRSP5l(EX'j'BH:@9`Z7IHOXCBN<btj*q0M*nf/%-DRFOTZ^o:rc><U-+[RCV`?2r<:p
%@):bon(\$D[G=UT"h]3Uo'p]^_Ui2PnT8GU2Uo_>[QUp#lMU!aadV3t9*+B_m>!9)`nt[5$[E"sM7puro')PW]^*[n,dpq"[PD'%
%^\.?<IeW&A=UYB>1''jQb2Ni5C@//7H!r&#Y^g],PbWW6U2lpO<uqtB;`$8@K^CR35L)%<=4?AID)B1'mii-*7f.GdbIMA3:VIUm
%IJg1XEgMQY0kE0I*^F6+btM*rd7^]JO5e[s8s%"O:[mE*P52A2iE6lhADZftBU%sP#Z_`$!^FHZ..2<*hMb"hFc:@dZKt[/,94bI
%<`pDgaocf:j%+"V6]u1AW@6OH$6GGNI!G!hhl\>=XN%<]]XNME?5csL]KJ':IY'86S\OIbkcHZ['A.8Rikc'SMIB\0;0=6SIadLT
%WZhsR6K9kR#j@_!5YtW/*(hg/8BFRjQ=6e'23^pU%UscCK"W2d%,IO#Z^2fA8N5Niq=8M!Y0(e/d2_RGoq:Zr6tI*fiI!=48*itf
%mTt0"`fj'X*D_GkY`Hu6VoVn;fKK*-(e=8UMJ!k,W"L^U(\UAcJ5[%s:Bg8po'Kb/52BEsYC8O>18=R'^t<E6]4YKCm\$O^=\OT4
%#bFI#j0UWjZ;5$$re/7s4h3mmN`Ai[SOD9*j*\53I^=oFgW599rK4?d+*PuE52/Tf+^FGimbc7A%Y=rD>#I(R"e%GnXHap+_=i](
%ZQ04qJ9al<aUTZgjpAI4kEA&.e*(L_'ZSd`[>QCoLn1S1c5!s<o&[t7?oQ]ua1<-]@34ggK)t#\T(=eMK3s9)_XY"AZ\mmHi=Up+
%KbPR'0R`,>X?AS7q&)ST[X(!AEd)#)Ll"(/k4T6SV.02Wm=F`H[Mfp<8@$5?rd\9FC4+G+6Yi*50V=>Y&(:"6d(:3'Eo7Hff:p8d
%Wn6G"Xs<W_CL]efkd#L*e"P;O)9-C[XC>Z8Bb('cZaW;e`[[r^jVo69j.Z:oGHk(pBqe&3YH(i62(;e:=IsQC?_""*="^D_+3W?F
%?s`eRBJkkF$RK?JW'0%acb<EsMome9hcXCSC6W:Jk/HY+8mCIFD.A:IX&8#VIWRbbG<OV-N;[?Kp6ShBf\bs;(HUgKdFT:H&qSWH
%d2;1+b04*J4^phrf^!CQ0QskG@XR=rh/q\Y0ZJE[cidr*3&$f"6$nT&VipJ>r4Km;dS*+:-D]isg8940VmPh$d`n!%C8"Gc%8VaK
%E!CQ,+RKo*Xm3HDp9e5ZZ5fn(2]2#K5'T*A@m(5aSV6"E\Bro*>pP&%ch@<G]'ICC=k"6P*Ep;DSj_8bC*7kWFSG-;AJ%\'j`m\+
%nQsMR,gPPSG"-d$LmRcSh]A<"=.U/Egs)ml%^#(X^/m;&]'&M/cfg)PZ_=\TlEX7q6,!>X?LBg*+CLjPeP-KlUS+;efGSQZM]N"i
%+ZP*5O0IG"CPLd8P"&6&7Ur!LeS[32>iPWU:=XFWi+p";bbI403?HpR0*K*$nCU^V9G:Mbn1?gb'-GpVB;cVI*fgk77Zh#Eqt;1+
%:X480L^\.nFD-qo<"Q5Ql@o5*Ia07OHh?`:DgBEj<:mD)bn/f2]"3J]1CS!5?8X@d%-\p<>sY_L>Y(0dAk3Qs64quFA5NfV/@B58
%d\fGWUD[BOYdU0s)$\Y#:QO@me/3Up0c`CF4R%RhV?UPUXru%2)#pMQVHR(8*>G(W79_<7dFc(BJr1u-45F`%O(F]uC2c2aRoNTJ
%NBj<GU+(#G>16,@'hJu'SpYBiGkFb-BM=DeY+Xk#6kr_<6nu8Npie4?mZhF[_C+r8VaDu].e9pWldft,4o3m0k^!XqDet<,MNo#X
%(Q(B0'M2Rr;:Od"_R4aPfr!uL]_^m>C2/88HKp4?Z?u;Q9i:R#SA*f=FDc(%\Rq]bW$^*daVn"#O=c?_Y+RNbkd,`Hl,VJM./daT
%(md]m@GE?:(IlU9g!<h9<aXoJl)J`[@X+T`mhDqLPKu]b.Rsqe2R3\JKq>k36Zu8>2A3ZoCo&&R15HQ`mkD@aNr>sn?E!Q719Tp!
%;4$<<$et>bDcNlRTkOZKKR!JLo[fYmZ?u5O;:/O%WMO6;<('b)MNd6b:0(8P9<=ZleUF96m9Y%G*kIt^GWIY_"jgD@aAGUdgF&I<
%?^hP85HP,\6Q]DX$533fX7'RZKQ>T7[YiW'NG$G.FS"dq6S#5%m8_TJFg?Af[HW4Eb8uGY?%OdO=s5k:Od7sU-so6fj="d)?AAdG
%+h1&s%aQsQE3db"=aG+s*`+siX/A=cE#3!rr>3Z_>g-7iSJKB9g"-uBfZ[j#%T>Z&lY&S7+E&;]_VIm%R(:SM+mm7J^/s@BK&D3&
%2$lh`$j[-JCn@nRjD7)S='\umXfYhM>(a?ad=;MKFE=V?h4q._L`-g#*Z>U*#W_*qBKu]Md.a]mGVgPa?TK7[8B>%L?+Z\u%>]>W
%!c=^3"^\.(HP9u^jD4WY'f(e\PPrkX0dsUkQk-m4.b'.f%qouY*J4uahPt"RDOet,<,YgNcnkg+U3:$1SFkF8J[0Xn[J:Bp'K!6c
%&ZS=ebtM#8AP4lT$b_"eCRndU[MqOgc[Ru4!JSB^]OS.=DJbTnZS)cCk4B&je+Fef;I<k2Aj3Nc?u?/nG"OpO'3T^:\NcjXm5f8C
%-bKiLbtj*qTM\,)cZcDTKupWIp9cp.oP>daOf'L_qEus.C\<+RD!`9l2A'Q:/d>f01t=(?pT[XqpK#B'dFT/N62@9ac;)n>q8TQ5
%%`&>;OuWJp[Bif?2Qo33%Ct8qWo%W&28?gK\hcu;cb6b)Jf\O@fKl"#W9]L)[PSk%oINuJ0,/W;)4J/9Wb(K:eZW7Sc8J$\2[>&`
%Zq@.+:Rg==\8KQSh4lW?L5p>8=r7L@a_!fsK)2.%G&XIeW`d.V%3(R]Ve5=&H*S??oB%&hLK:)CA]naLBrHC%AG>G+_Z<5qoIYpW
%!CI#cG#nNU2q+KNP!m=`8j1i@YoFLnXe)rdaP!/`h7WSuD2!jSZ`M01K"AEoG0dn2-f=u=itG>\@a^3L.B_)qNPerLah@D.L4eZm
%:L.Wq?oUQA/UBss%p<4a2B4tMkc:<cX^GuKd<c6Q_;.25`l[Z%f7jB$EZ6B%CF1h`Tpc9AZ4uK7J;r<&*/##ITt[;\cjB*2K`Du#
%&:3(nA*M(fDubBI[X(!A)Oe7$fFSr2n[b402VC7ig2L_GifTghk!;rmWoT@UDj5@N%\gQ18=3Y\<i=Pd9S74hqfHL\1qa:1F)QNo
%SpbGrP_5]#ej3BO="rc&EiMC8)+QZ%l!ti[iHo-UB^`=.9fLAK6*</IRV*OA/T7hPDXEM@PHV*@W!?Y3`^$Ippr_0FCT;-+nopeC
%,EJh)8'kD1n50ADp#KpN`,p(I#u)pH/;e"@T9Rj3D6eNV[G;rhW`iR\G!f;S?qY+/MJ?R2"rt)*qaM+N^%#n]G]-pYFD*O\cm6oC
%dp+PBOPQZra$.;Fc6m*DW2_,MXt/=VVc`=-IC9Yi2t&`Y#H/pO99)39U_br1mb,o'#^WB0E3p2G?fD4Glfr.-G]iN_`F,`JmG<(r
%,flII%]uh0GG0BOm#^%uY761fO,=ts$8ik>4e.e7$C#4M(YUng$KCcLl&],_C=eZUTb,[Me!mJ@VK\_rDJbNlUTY+1fVPBd\S_h0
%9IL*8k?Nk%<7S`6*?GM[iq8gU?!ClUf9*E8i;Gt?Z`QLko7f)Mel2;ib3ms7jo`giBjE&7bX!eJe\>eg%U'K6a^hAfFnhM2[<pre
%:2%nbj6=ntoXn]`dO0HbDi<tRIBD^U'jZ3#PHL6/$l6]O:U<Y0.XU0AdaNJk*q!?[f(W?,YC8O>18j_t)R3-fG7VDgp?LUY7V+57
%iGcp'9ZisY_luh<moem!AM5Hg.iOlFl&=Eij/hX5EjM@jVNF$IpH$5nTA2U*>2)\"[H,CuD6Kola'6hbf7R"^ndC]jZot4.OtT<b
%2r!qGf9<PLQ`LtmFD*O-pa_V>X&/4*rAb3,8hFW1^oUKu3;mstDUkoGaglcl=g\Y:Ai\##<[dHuRb^u!k"=DlqHC;m.\<Z:P(`)+
%3K--CGp[<HX,QEUaP@4W'L$f_e(P/jH51:4Vcm=RQ+L[9.t"1s7lCmm\?TKZ&*AT"Kc4;phi&Q#gS8`^b-T)hML"mDTp7d20=6P;
%<k3SN[E=iYnSgs_YJoP\N:YKhnT;Ll]0PIVf8ScqD\'op5L'UCMT6srZnb/FKatB<.<gie4L)6A[3p,]`cP](_<]%W!=-0X?#_r2
%*2[t@MtO#hG;&*%*BBbP]pi(f*Ep9kp6KK=3[".-_X?+'*9I,AGj3Qb.d*=T/9b_S*SO@A/'Y]_9#'1$c_kq<k06\W<^n(tc\JW/
%Y^>s6WL`?P)WRgQj!p%.:4gYJ#B>-6EpeV<mZ$DY3EqXG['haLq!*7Z.KI(N?_>V0m1sb$\$-4AX)er,[8lT>agBb/^@V6IkB6Et
%+C<cP+;Ulup;FJf$$OY/4Ko30:_J:*9.PTNA3h4%M61gNUlB4ee")0H^%$JZpL`:PFD(h%2d3*;nRT/V$?jb0QFU=+)hNEf\h^p8
%KQ.&;\&bjR^AWc@gF^k0$W"'nLq*#9VmR6LHYLgnj1YBI4o8Ek2UNqYnVQGEIYT%f#*QJn(TN,u[W7ESDMlL%ZsCD8I[gRZ/*=fH
%LIPc<eS[AcVd7%RlFU\YNl\X*M'g3b3q[6f>mS1#3o)sr/6kh)ml1SSZZE:XnlC5.*dt_AJiZ.*Z)`iT98&-UX)R7O_iS-*C/e6<
%^So`6BDT%%a*BoFFr2X^$3huId)C:qp3UuWlo@s.a*N2Yl,MN^X^F3hpOb^/PB-9fDqt9M4W[0EN-ZuP[h_3I!URnHaoU/p6(L$@
%OtS^Y&,a\f+tuRgMK^3QSI_DZ8Q$/5h#?FW)oqKRaAO)"M?A0PBWr3jVX:2c)>EX9Ym6Zp>)9*J#d&k=p't4Cg"lHI.L5%M$c3tO
%Ta-@BZ+#H;j71r:]K:gtn#kU&8l1$<i!c)`?l@+QGf%I'O3J@1![L6$NMPOV.g3+$W_-hB`=:]-F6>5L0Z5[-Alu.F]*o4EjqAe/
%/OARE,?qe'Fc:m"qe/it%m4ed(Bq72kgJB;`-N-8R"sls)C#kXA-Lt*3oEVp"WQbiJh_u>C#EsnlEJP",KCXR!Oc,9O1=9EV.dV-
%?96B)hG"1!2r8fXnaWr`G@#^o_A#A/odHeEmkA_#r1[cL4(p%*0$@pLTX9cR):2K(+?TidA13,L#8Y*lLk]'DbAi?d7r7Rc(^4`C
%Z$K:c)YXe.*Ma8H[//0`_8`e+0i;uo]=Zo_r)=bp.h2DTk3]Cs`dd(:da?dh`Wc+GrQ8OMJ4d*Bn?6qej&d-0iJ3*kbDY%<#"0o+
%7n7<)1DW1!Vf>lMbX5gb9"f:g$jM/aFhhh81busR0/mPJ=3=5X57Jb%(2Rg&5.&R)2OFY;*cSVDO+a8?/"8,/LJp>nIf&K1LBINf
%q4;QgTd%JO_nY2ND$`O`R5])fCqicU&+KeA]*9%jpGu@9$E2hao,u"O[2s@N^9'aP;l!/5Z[H4K!=GBI3WqrV0n7e@VkE/cAol`k
%EZAe'Kt$12%1M11DkA%e?nUL91uC;M?XOZ9^ATQ'h!q)J0#e:=\M+^)Nb;%1a<b(9*B%9_Y7&&hk!ZY;mWjUsdap?gjFcf9*`h*1
%;`]6K`uee.CMgnBr`D^!/hlQOpeuTMJ1NUn^)Ii#O4;m*dnr0^nhhKJ)`PCtr^mFhk8UP]ZV-isFJOKGJpj4RU]e"uCLHAp=M"YS
%H=[9j$YV1.G4!),.g+dX*'MhRr0dX6:shS86:]*V<!EQL60"TG*p\\p@WPH=#tLpafl!*G%T2V.=PfW1Yi-3Rf8^?nTu(8&BOF3)
%q4$3LJ#-'UHA''`"m7RWb8.[?7h=N[muS<9/gBM:#LtkC5&Z(K]/7qkH43W)ZP2+U-tdsund\AJ^kUuK<m6+@m^]mFj1Rg-j%o?1
%$'VjZ]qF;=b4@?72fr92?C$Wha'86r]?gG5a4!^kJ9m]_`B(RH6=(HYH8sWi=;0>B4WP@)(mYG.Y$HTd:%c.OeqAA2BsA-O[m>G&
%jcLV4p&+[[+[Cd<3A/n8U%ZlBZ%A,Vf#9,rrkGmD,?1U6l*shcs"`dCbBiZ>hkI/oFKJSf>-2:BL9A.kf(%4\b.:air%"C?lZb/T
%"77>,>=Dj;d3X'AXQ*Zj[rnrFF?9&`h=pn5'uWK<D8C;`Js+(V51HK*M74YD3b,L:_EL?d/">Y_+[]o3D#S=DrUA@?*O)QCrg8K1
%Yacn)s)nk#X?8mNQl0:?Y[P2[q@JFBbC#!)fjAmba65c#nM.tDBbb4?Z*Xd;$?0KT-Q.2`a!Q"82K=!J)Ro):o<\JK7XhG"$@,d0
%OUk"3N2MenM@ee72+(Ush"7h#p/fuDh%"GeC6snb_qbLV_h`b4L5tE6=@HVaEIqmE8fKhEo/IC.pj33Ga%ner'YG9UFp$mCjqu`1
%379cun$+m;$QXgBO7T#pRq"]N=s:R.-S1N@Zu4fgG6hjlC^?uX$9D('*;.G0Gr,jkf[uQ(%fOT]N%lF$[e8,n#Ph9mnhA;G%V0a1
%lM-V6;\(a^A"Xl3?T_`cT]kX&R.lVZLDe+IC'MH+&>D,)qWSh/a9B_5f=GAJgAj/.,85_5*d4%I?j[<H&He'rKB?i)G-"%rd',+$
%n&UO3J`.%5I07Z3Wb'$s'U0LQ*08U^!`t`5l(M3\m/!r!8g54S64k\\%4ZYkI`7&,$0;O`HY41Cd9]dpH6S_[mI9Q6Zg;8Uk=U=\
%!Xf;Y"FckG#ubS[8MG6?mmt0H9pEJBOAfI??o=(`[_Td[)"Q!:&JS*'Xj>2c.m8bthrJA+,`%*XlrSgnc1r*I[e7^KQA90K?fpl>
%L[kBfN!XiFkW]*.q14OO)BXT!#^RWU]#,@a\8>V]6^r5jU'RSc@-'`*R2Bq#Ni`B9\N!V%XPj.4)E's9CPE'PG"*t:cVbbli6Vi]
%B(JBF!n\9qDnlR#NLh%maLpn<X43mIW=re!N3sB,"2i]$HFj],P6C<9!3(qH;cdLl7ptU/$T4kE`*OjEK(4o>"qVPSa:0%XIbp1)
%RBR1L(OHX@c\?J9JY(BL_d*C/!WNcjnJK5RWRaI!Tr'/;k>2Q&L`A,*jUc+KU!5X,$P\6\$NuK&EIS9%AY!(C]\2Op:g",!\p8?=
%A(P8,k8Js2iDf:06,6q.A$3mkL++(i'oN+Qjr/%0J-BUP,<8VgSaKn<jqGeZp4f]q$hu7/0n.e/=fUJTFF\/P.*2[LNK)nS?7u!S
%@\`&eE>T4eAutsl1B+FBiM/je#R:rj=+SgHU21]&5D"IpM]6TB)&PIJU6HNXgVY:KfeV+saDqthk_Z2(en@l9eZD0sdOL,mi9:$c
%ooL[-[heh`IGjJsM6,@)!_X8(\QT<_:q2hK5.$jD$4:PR'GC2?:V+9\J9tN`#4#[L-JiVU*[Z0.T17%G+7h[b#C[q!hh%[e`f%Fr
%@D/?7l,Z-*`dt[kn4O"eH=.3a1#.(g!M4N$OE0jHI;CJXL>\cinPY.t_;/%I`QHhkA$(#>?NmTOki5J'J]0q7J$8Rj"c,oV`dBB`
%E"Vai3H?.CKgA!\Q3TIPI0!u.jkWq`1MsAEU#7@Aq$)RhjZ8@THmG4d)4R67nQ3;7+Hct?H01>W-tC>)NfMLT)&/crMDSe(*K4*P
%?l;5NYfB!u"6WEhfHlJ[$k017eABm&/*(I-d#+P(<1>4.*J5[mV!M=4HNAlrljqH$^gheRHEgG;YHcB/,et:59`U\U#=j<.>&,XC
%oi>[GZs3&I^rem\=Sfh%d!?nf/NmK4Oe>Gu%&'u*[[)WPR_!pr&>"+OOmUZ6!gG(EkNV&Ji\D_h$mVs$R6*(P0[1T0<l;T[V1JmU
%eJlR(2Bk.GXmclr75JSH,ZhfKT!kbo5l,5#j*1**10llbmbfi1m&LQGPJC:Wp+V6!?dG\;B>!`m3k4^VB^%D65<c4=0YKQ([g.SA
%AjX%U(NA;#%tZ;Bj!EKFEk1MX)K$Y3kense?XP5Y'>qOoTb2h\2Y=0#pgJDe%q6,d"@78$<k(Zf:8b]4TG#Z!Tl(FZ"@facWt0Wt
%10IWOgg"6CJM=!0KcMFo/oM)]4hPkD>c(7W2>cj!"13HR#?KA1+GaFS+eu$V\,6S".Reg*cPfnTIcgL\!B1F,RiW($cs_Y+q&pNj
%:WANa.$)]lMX!a$\*/X;%b\rYIFib7+#p1qZn`]IL8@-+Za!om'+^>F$;CjPk35W'^juHD(pPb+F!9j/7u(fg6,Yio-qrQ7HQe'K
%?\'JbaPJ3[N=HqoOQ<<n&A3XO&@t7[:f.^>MoIBBZ$U3>.Q^BJjElD2$1(u&'-)j(qf%.lAg([F83uQ;Sk;FL"r=!$'A<lq%ja_l
%?Q<tb+*BQAW]I:0+(oYUj^-!=_`SAH95oD+etPidUhZgcg6'G_9a-hU!Z3p73,@1\KK7jF\Nkfl/==.m@IjM48-u0$Jc$>&5gQp?
%LnR=F>I>Q&=6PAO^qc(j&<pCq2hMtrD0$8u3n`Vo@'*);FF!KF>qeAn7r=7p/fMqFpe=VY@Bsp'pl[:t)lPEjXc^YY1H?.%r[HoO
%dZ!pLKQ+W[95B9?VALB40SWT!d!91m\A*r/SpC8^5K>MpQXme=-6L0&5r&apGEU3,<gL0hSl$bW&OZeH@6Xh6R5":gioPE+/h3J'
%=RM$M-4jp-30SHR'*n]kYA"`uh+n"eSr#q)k#8p_"OZ7a;-"T/?)u"%fta37*40dB?&cgj/n%l4EoAg-VaKP,,si,u*jf<</MG&P
%SCG@DL.'`GH'l'@q[g7t(CPj/#E!jn4hkFMP\Mme%do$mqJ"$%O1Nh]+q3!EHjdHVn$t<NOjqhbGpX7bL!9WSMd=1n(;_ior[^!r
%$)V'/1@IMl;42J=nNFT?->.7mHt-kaUiP6o/B6-uh%F4b3jMFKUhbSM%s)8=U%A1(2'FDFFjPf'.Y,"[c(bkc0iX;j9bq`4$Yo18
%L%CSDVG^],3gWe91_X+o!qm^(#q_D+dQj3@J\h.\Z;/`!ETHm`RFM_9?g8;&F\sAt\SIfeBF(]PTO_sd7>uuMkn^X+&*f\=CO]Bs
%/C]WU;?8[JFkj>lk1'Kk`IDUtj*B?!1XU3/T^`"aFb/-YWXI7dTpl&?E>\8)3hM--o2Q"UJTiM8%mmMM)Bsukccsg5OF]j[APHY)
%qgp,qc?.C7-]3a,&%j`DFSBGqS*YZ'1:JC-%qB`,`Y)c`2>g;je$)1?jhN[<IGe$)n#@RjUGN-)m;)#9$5D(],V2T(XLq2.`@I2U
%)aDc`36t)h"!9I1*;Q=^EIq:$'e2^!XfKd-jaErl_o4\D,CQe9ar'Aq2/-j+-&-Atr8F2H[7Z><Z</!.jVjSKa.EiI5ro.(/7P%8
%G(mZ:2hg2@)6T5=0^os,`_a_s0\!f)\[fL\lek&F;iK&<=GhNZo&.Ec:GMop\KbQ=8X5[IZ>%A^M,MY7mVV'l@1'B*ls"R[]?pAZ
%cfOa(I5mmmo;8aC;<fgP)mG,-:IO=Sh0bU]LoN6!F8k:J/4@=-#QoKDES4a*M!tbPjelUrp<!VFW?MG&Qbs5In`]\/@g9+CZf;WH
%_0:TP5Mbc4DF\k'5[pMs<>O-'^fC[@!hg\0>BmMJEpWHE2[P$`XuOK)UDh3%`*jsC:RSTBM:)1AC2qRl(0&:EMNdS`M_QAA(>T%Z
%YWa(V>,<"LH",f%PJbQ_H#X<Y`@I\IlcH<nlo%-<Di1FSi+*<Q,*78)=@co;n0)MM8D0C)gg"6f7f_e?DG[ut,EXR=E1l8n_Rs9$
%PpTrd(9sT!c962h^6:CX'+6NEkCDt';XJe,_?>fP7gre>lS<F^0?sk==snYK'9r84^d+*_;llYsLPVJ.R(gUC&5:aR"Nst:mgN]/
%0^Xd+bK*J()<.IaQOA$Uq..Q%1@g8X^[9*pAf9WCj:a9JQ]]ldAnL+f*obAa",F[IFl\;^V^"H1hm-rN1\LaOQ^9?gabbWW4*3*2
%K#/$@C;NQ!'D7o2q`Z-kphHHP=J#&eI58LirkZZ.K,PUrcV?ueAmt;Ak9ln9G%acUe.5YAOftdlnG8GCG:6b7i3_f*$s"W^"s@B\
%/j0qL7nbaZeWR!!e6rPImK#5")<o7njf'Vch-2U>M8^?uPsqYEaK6Buq2!F0QIp7SFSenJ"/[%+?*p%$P5YRse;/fX72"``Zuom]
%4&Gl%_K&Lh%MN"GUMH]GfB'*Y`A8=`/V09"/713SUB=Pi`lPhMB/l):oAKZOM#p'UG+a]'RGmH<$V_AgTR@/IHj6D9d>3To+[S&5
%)E9WY.p_KhZbc=N6*l1/-"r$83`L.CnmiO0Qoe//E8K:;D+n6Rog.cE-t'9>)Z+cV!_,hC?(1JbI).2AD]>j^\V_mP<PMlW\*T33
%rPl*FD=@VL\0/OZo";.q?[VDK7P*#jH)R@Ic<+k`aubX(,@"48G2-3t4,$rcLh0Ss)tQQ3mU@!k[4=(E/?&ueR0\^eksQlJoAF5#
%TV:R<N'2;NT7LOm"j?+.\sM"5djpQ<DB<3X*V515+(u7.:;T?ZV2bpKqrF;-'u9oG?chF;G[9BgC(_2oeN*r!>pk3/CC#imK].Vj
%1`&0QGBU])*6Vj\".oZMp2L:9GA.q*ELLA0<,'QX7Nl#^q4TU4&(+Y6,mdS0C,mn<Qujt)5S&rY=-mnGVfk6V\&6ADq>.+HW)pHt
%#oBfN:#@UY%q'c(!Ltp-A=KJB)12fuF[:&d"&YXOPekCjfJG9*$AoBAU!U(JEHf_^a!*(DjP-NBWX'uW*791f:l_i;nJ4+LH4.;a
%<4%?@'go-f>`VR-+EqMBKS:+l@!Y]N'h'C;7iM`<XEtoq#D@thDpSKIepJJj=JeI'U7X?A?A6V*CR=M0U79lJ3SqF4aej7ufocj5
%VEt]N);LAYZl^11ON$f(fN<m%QaN)t2:D]Q87HL"^N.?!/Lp?2K;a0B;'*umMnH:a]VOZ*)rK,8<&,9+H*O`(%6SK!XHg`]kaOk[
%0\"iN5>-#`GUcdROSJC^<Rt^o'6%uToJ#c1HP6gkjqq3t@cR7.EuYjt1aN\6oDQHFP0dR/:ZQ(@,;?Xr@:;kB_.a=f"M<CBc1+!`
%C+3O1T2mU,F]f`OJY\0''VfF@;t2%8])Huk+pFIC\IUg_^o69PBi$1`$4rUt"W75=7`<p&?4FQ;qgi0T'+cKT%*_<YY@*WP'7lY;
%7OXZN\d8@EM@e^i(!f+(^*LQ`oOQs;898crAPs4V6;-=U$Ji7KM7!lQ@P=3&"//RSN>TGtN)'uj+OON'(^ABp3Q%,paRjWb/S>VS
%oTAKA^sqJ=SVQ*\LlG-)69U.aPLP%D./]ZI/H:6g)T.lTX0*?TTbKr5nqgtZkZS.5E0K,nqBYnKi(;nJp!+,';(P\FT\hnn%&;CL
%n<1e4#m2D5KFNlO8dXgDNs2i(!L"YZ3!-[Tre!/'MI$IG&8QT47V^cS-6g=4/?Hj6obBrT$>**C4q^9]6MgVCq"#kL5BN9K+h%.S
%Cs>*6O:/SP6%fru^^kFP`U>Olg91nB\5J>[#sCo"G38#h03nf3(f)r&@,l<\ZA;@IKj8Lt.?X!AEFfU0=+1%elW$5gYg6t]1_[4\
%Fun%OS)J;Y\Q+J+00_$6EgK:VV-SF1]tMk=Y_SioNbjQuXhq#.*(X@QJ0K3sG.QH/Rn"m;gam%W58L\#!JsR^49HPCO+kRC;_]I>
%(cd$pC+VH(cH;.hKY@0$aROoCVp8alr)=*/W%Wu*4r*Gm0ttcu!u'4sr"M;3!*.q+n&*mo7;:?u-M.Z9\fhiB1ne57JsF]5?8oa>
%Ok7!*Jh;U>iFS7;lAc\M1ADNSK:g4s?Nr_lSGtSD8U*sNlnQngY@A[IjBMn=SF,X`F8Yf64`9SO<KEW'Q`iMCM5(S27ZBZ:;^2@Q
%a0"MD0WK7543Soi)tf43I3?Pk]T,;R5a=GMLd_e_'Nugk`asPc\[fLQ07d;(]ENnk.W-*9[tn?3VPCTrfr$1%Q-)7Y6%6HP"#7/F
%8LV.F4j?RV[o^UWhUS%6l:[)#P!kHh1F3:a#keGDT7@:t7_7gI<`Nb!$209QbrR1o?-1F@SOQCI5ijb5NNln=LCBrpQBtb5md,g!
%JdZg+60?i:E2?1#&)?!`3_C'</g`<sRnh@FdFi1R[#es5S_$:4>Z?\M(pWMIDhL1DdPk2`%`<iM#:?%r-f?'+VbVN*MpF?;.6Rk8
%P6hT_fWd[64L[VH4Y[hX"+&*2Fo-GqKN;DJHj3##i`7H8CX8XW4]2e\O>qFiKs$P]<8IXch1$CI>m)"[9pgd&5=V.DG[Uu.SjnVu
%gPuJi*>)PMQ)6aE/[$sRR,"eO">W,tGU&2Ql9ftl$^h0sj!CWcOX>&FZ"A,+(7D6r`qJf\Qm-H3$]BT/%>,O!YD!FdGD1k^CYpD-
%=kbAmY;P,P,-Ll:g%BDGVJq'=qA.;Y+D&R9YP;8B)sZ@/C[uklOm1f>:gVid=YQ]F>1i=j/ZaS=hP>dA3b@KpoO"M:IcR$ge(RpC
%7lTihAbH2,7M/k/acYcWFqT-6CLRDrYnmec(0TK^lig'rg-k9rKZ1>Bp*-T-P)-f%.5?sP]a4/M24;.6Z2bVO04IN*^<#YH+_C@N
%fJ%YRR$bSZ,&o"BZ^3An[?T?;4`,Q^Z]r9:&oBPlE3P47LqO(PX-S"D#UNn%'!E*+G/bD+0?o.u:W2QfbXj4>LqPd1;.>_]m%qS6
%,+R='Ln+f9KOrSJjsi.1hMR"=Z9S>q,dA8LgC"Q6#4urpp&^ad]F)+a0dU1-?/_"0XP@-8eR_P3?Gu>2Z:XIQbVu,!-2/V-jE)R>
%&gk7,,knI'P'\csaLs)tjBf\kfAe7tp;n>r]nGO%gl!#]WeB2dR*p\Rh2?5pr)9?aicmM,cm-4?Yp@AYdX,[hKSW%g?C\RY`-[$a
%8=X'7K,]7m_Ftt_IP3=7,5cqV11tm>4n2EL-^V7)-bQBn.IiZW=7DreSY(>;!tnnWFZ=8;<E>)O?Uu:1nl$.KL%"@iaR`kgq',[A
%P*tGE0en%3)VCXj$S9?JI+(4'AuCrYDt\Z%P1?jnb)IDPF5Af-2*QN?LYOmPMR1QgDs_r:^$/pJ'`PH]Z=*::26]5^%6Ol:^1e)R
%m*mdTgAO$qo,HkO+4nMQgqmFAOtlRHKB:_h37$>+G;G`[(:9g3)SDZNNQMhakA<"`F?3e6P$0i9[uD"DQh/d+;!#K0`+1hI\;bD'
%?4Pa[>X3Yo>0%\n'4)/R$d4)/R#gQagGJe;3H,"bBWE,_n3p@:#>k^o1Nq!!gQ_CoO'Dt8MuQ>.gnmXWbE30r&_2'%,I_ApC*'pF
%WokIbgh+Y&I,r08-r&JrFH2fTA<5MFQ!.sQMYRM>aA%r',$L%4W-MAh.`Ot2@-V4%]#^e!?lljmZJtPu"Y>JW`^ap0WsdN(2c[H-
%diQ&U8QlfK\I16T>Q`_*GCfS278.aBprJ.Q\I]9A/tu?t,]r,,(HJ0:d#j5nY,7j5\H!G&`UJut=:^SR7Ro(iYss<-Oc.\N,Sh&(
%5fC@:7kRIh7jID`$ZM@J2BB?44L-$R9sB7Dg)dfXCG=3Y\H]M!nf4li`$K.RC&mW@e<,\.-ngP2g"t#5)ShN&PYTK%!I/pG.&.!N
%es>Y?YU8gd'#2.me,UK@_.nH<1s^aOOAMXFb1eeM`kj(##+si7#c!n.^i33`L,h-Dd3ouJc)JNtnj1>?76Y&V\:l(dLeUK9`Mu6n
%Fr(I,(h/Nq8kP)2%$OOu:ob8#-i^+Y6/dC%OI)OU(4qtrO\jIPFl@KV%3o)_a/!.ZKt2SC.1HA3Xd-5U=;[.YY.4t)Kn4GT#XMn)
%0QJsA("4k@R"u`5kcu0KQ^gN<_T:O9(>3DgB9&Lf0OQk4dnM,>Mubm-">U9n5eT]^O'*==dIkqs.gr+3HIT'*@6cE7cm=r1#D(sJ
%-OU#aC!7h2G^#A#Rn4H!!N8Tb=igbJLPMr^bJJcr!jQcJS6-VQWN_c+bea?28t+@B@/qj%+)ruB_P>0Rk$Z!Yd-0$@?pKd)d++P:
%OUl_21_K_Kfn9GF>rP!cU=te&bp87b[4>8f7e'+L:_!\16h4tiA)O5/p"`a`7^;3mPCt[KW2(mi@GiV3=u*(In2X2W&LCl$SBYSK
%,%9QS5ueO%XPRiI1X[1[Pe8jn%)=j8Y8dt'=UkYOZ&>GP*"7(;:^rFE(g*6&n/@Z6N8gdNrp@kEJ20*P"J]uk?p^;-TeH^]@$</s
%3>f_.9NW_\`REt^2&$Id9GT^UJl/bd02jBgJcT!JN,]7.k*XiBQ@],k$U(=o'T\Kk>Jn7\cm3!m<;@@"l6MC:k$Pn/Q6&J&$NC/s
%Z\o3Qq%kFidQn)0`:Yiu%b6tLMmiQS#qo!C1=!>r:V?9*0*Ln<Z\;h*raN8D"'^2J,YdpCJF+M'IeN:CK<%A-o\YJF6>nN!UG]kU
%^at2Bn06)O-ne#3c"7GrW4LH2T]5/HK2OQmN(f6HPYCb0&Z\ZK!@[@\':h^o`emHM:R=UujhOL9=s71'-3,P"P?=[ab"YuaKq](c
%2G>:IS.k%$.N..ceVUbfQg'kJfu$XTc0LMnCDTM"!aZtsL`1RK0--Pn\UY(8T$M@!^,&a+@J4#).8X#KjD-k!\bSq)n"a&PBs8kN
%O0$aH]b<CVetY-qd5jefnH*gf0#E1k_H;7aI"`F1^ZQ1?\ES^`oWhM/Kp*@**$aQEeJ<(H)rW1dC?/TB=+.9(.3')B#j/qb$a=RZ
%@[pM#8OpR7Y'q?!NPCm(nUZ[R-!iq/72QI.?sG^:Ke\XX*m&*t:c]Cmq12+"09`nnjM!_7e)>;,:uIT4bU-;#dtJ:*U.lT=cP"JL
%NKC27:dt'f@\FT%eM*cmOU"fI&W,dt+=<o;7#_7Q7j?XdCs:gB%lcCC_H]U]XsQlV99e^lQt4)],^W*u60#W,DM@Vt1jWh:XT2!o
%+f7q:@%oeVQa4+K0Kr1Df:XlhO6bk!0d[!cZ`m'b:R1J,.SW]<QZf0F)#)fh1)/c]<udP.7p$ur!7,WC%g>XK)Tigc/8JW2E`mP0
%ZG-X7<DF;M46.T"%7^hIeaL%oG@Kf6g+dIT-iT]6*A9Kj7+s'Y<-7(fOfb^a^usm7/l@g5=dVf8>bYX>Qf)Koo2b*YUpedSSfS/=
%HJ'cNM;CO=+)3,)p/[s^$PquqY'Y%=E1o)`i;eLTUI?sF<EN965Hq)?b6PR/ACS:'a8UT8=/SqB!ecfoT)tUuYhkWMlMB9Tb*kgh
%KpO]AW:K!p.M%9d0FG.h@[l[QXeY_N<>dmAd`#pZP+ZTT,r$,M[uT+\#kLI1)D#1&?.*dB\MSLYLBa1.8pa^!b$\u0+pSJ3=a(Pu
%Hr9#.pBbUFTY/3aK4J;F*3cA`6'K+l"YOB%-;97FYaF7Rbr\.07]fMTWYFhdX_&0^AQDXf5rt"gf&6d4ess''Z)7\?2%HSCf]l&M
%0sG5KekQ_<>=0?`=ujeR=#MC)<m"UN9So7`WW"i+l8>VL\Y*p;85X/+Bql,8%40\4IN%F[?63gKYib=MA'OVC;,&+.N=HA8TYFcX
%UN"+E'%t+6d?Z3!EGKfo#.)fJ"5@,<fS+8R>O%r6Q+GV"H<-<BfHBKOP,]mPYluluD[gn&mYT&['=6#(@(p:8OpZCFC'Y'h,:<9H
%^k@Ur`6eTS+]^%1F9.4VMND@b&o/1)3N&-!MPrQRLbsuk'28:4I%#-;-bRN%867D=);'t^JT^#Se!s>XH)LsJ[G[C3I%="8*Vha[
%0m2Q^PZ9^RI%=Lc*V]tCZ,cnVDfj[>P;d77j[2gaib2B$W[a1^PoJ3e.9>d[-=tZ%fFV<?<0Xkq`J+AQ=d3JI2H6s(Oq:j]@gln*
%%9_<t)d6Z"2M<_5_YTJ@$&Z'jCb7Puh4J]sNFM\*lE*\hL;VWbdsU42Wa*27Ib&=M2^M<gjW^QeQsrF-<L$aTFMpQ"R4bWC.Q.Es
%jDUMs6[37.-;d^H+i#X#-8VH>D_3jMYh%<u>!iR0!@u_B%5qu2Xf,88Jha;t'`'CtWXW*ub7,'%B/Wa/6ASE\XYiM>j98tk+bH_)
%.7Tb`6>A?LbAfGkZp#rsK\3C'))GcC%[^-]#]$7up@.%+AJ1cY;F:G,0A/<gC'`cB/eBKi"D^P!f3E%r+jlFZdL`'8Bc)fAA8oTA
%/5h>dKBu2fQ%f:)\?l-Jd0i/unJp,eAkd$:+hXj-MNUCH5<tBP6Zn,!8BVDZe<CW`AX(0i\V4[]TbWi4mojQpWXRE9Zd_^7+l$j<
%[7@5*6*JoA1'Q?&jt/X]ZGNH\OSQIjAB9:u`mB<8M'4[X>[`F85V*Ns0SEB$j];fh/h80$M?`#E36A&KqEhQ^6mIec(9Pt0on@?2
%CVHRp(SX&;0fpj=AB."d%'>n_(ci2^Y/V#X7>QD_gXV8i`R([H,d85oHVHLt2eJ\E$gYh!1V6]DQr(%;AmQ_K`l+Tf655u.9IOH5
%Age0I*%:Co`&(sg-<,Z!ZFQhS'B"tK0NjZJE[4-QQjYhNQj1!Z5H%kSPV'.mXY+N5ZA06O,u-eJfC8WuBOY4NGj4.6a9?DYQj_,e
%9Xo4DlRB%['5l7Lnt53eKSnJY]US9-lp34?F^oUgb1s.;bT<l[-AAQlF^qBiZ\-Rnau2pPVLbig'5i,9Or6f.9^$+%\\rC0o0t^N
%1%A9]nfVqKZmUSkIpen3#_(R-aOEI<T'K2dM"B7<n[T6qU4un`ifT]hcMr[S\/O6sgqEWMD5d].mL?\k[#($<lDK3T4sr1&E-..!
%.[>L:]?WoIe"tr9?OpXh^Q'XGja5(%_Rf.Fm_)g<U]?U1?-j<)2n5P98I=]64ta?.QPmh_EAs<k]k^f$@<9OUR7@.H>L*?NPPhu,
%lrH"t;FT40aXFa/qlK#8Y9XS.%YlOFE"B2ag&<I73A:g=+k3hp/3=frE%,gpg&DNM4rDp'ClJ&T(G$b/n"*_kRRgk5i$lQ7l8?fB
%atrD#*D9MaZpQ)q!@H+;5U<-qDI0`2+5Y"i=Ae@/L>Y3(gal8'Qo#>DrbR'6ER;M42VmW!/nnCFcC*gq;Fhb"<i'7.hL9FZOL'>\
%XT^>AdJ%U3nJV[^OX?.liLB].<#85EHQ^NjA`Z$?r62)s0/4-]Nl]EIU;9JK++K/)^"Z+U_>,LRK(hsH<-[\]#`#kI1<#dMFMQ8t
%F+7:$RF:=A%P-oJ"t![2_-$`$=1UdiE=:0cd#u#^)jfqk]Xi_X2%Lt'(O:'79ohg'29sFI0s<%=i#XZreq[h2'&HA=0\eZ@6YpGR
%G\ak@:*>9G?nlEP,P8`Rbg<pQChVWT9PeD>-=KX':)SYkmD!VFm<=FqRKI$;(U#Xd1Y2,_LI%S2P\9UEEQ1"Yo19bQ?'b*jq%<cY
%XkTM'eSWYnPk-JJaCg9ofpR8\'03gH:AAO?=DNZjHt7@%RbIlg2LRU(l39q`CW#EA=CP*Qqi**u&Kk+5,"_"Qb3DI+2DHt>9U'Uu
%0)N_OeeJru2kjJYQq6%dM8C*-5=/!-[]gotY:u*M#nmA!Oh(kjHn[(MRsHOf!/T.L+/I\$*KLtX4o%(XUI\uWOh)-'Xr3A5ER9t.
%V5/!t$S`3Le;_qS#7kjd&^k3<j`KOYB*iUAEuYud&SmYfg1D3?8iND?=^_*D&>Uj*1:dMWdsip-DLa*WS/C(<H26m.'$\pQ(Ig@#
%Rc[).+_"b/Di>;QjRVhm"G$;C3@/bleg)1E$/I,-KPh/:6MCg#Tpo@63J0``-EO4%<9FK8c'o!poKh9"ptYMtHFo"&\IfSrL$7:t
%kp7LIrI>Qj*A9sV\I^(u=\UkmZWpr%Q/T>Ul4Q!6c?U!RfS_GOGoou#XJ0AEgM3mT!HPfj[Oc6rcj"X#_Pn`:Kdm%/:oT'4nZJtp
%NBd/RcO?mdV?C[@X&p%Vescn43-Uss9gGdN7:I*YBf^%XTkb1D*^m9O(r-0i-$.DWql0KAp+g5+.du:d<Gp)9`Ej-T`[0L:Ne>0r
%T"-V;gfd?]eA.h;.r1i8"(OCp8'7.5+]iZ6Q+%>u=tm=83dI)H'Rf_2H*j2h?6b687Y>/DX5EB&@BS4ZkGQX0.o%MMJ>IXn]Eb[m
%ioWZ)DGVd_/=#r0W_.V9c8W,%C&UHp7TB"3@XLNjBAisPHt13^0WppaJ0gIQ'l%)4hC4t5^r4Q938X`1[T;7#hHoP;Ui4&G"'S:R
%!(T30On4PDq]V?uNK>K"[;+F\FYLc0``FO]SJ(*)-Se581?EoDXMn].4e/1Z']-b';3QhbhhZDd$[3W86rNT!P.hm$X4+(lPo#An
%oeN%UJ>HqVE5$>CfJ=pbUM*Lb,@.;YE:ZV"V`/*.kIX%EX=.(pQ1PN)<-sp%hgf94N[E15@,`"ZUi1KV@;g]?I02%[9h=0K$If;H
%)C[5=-m;2+I02Or8JC>-Q_c[4M=Z_-2k:<E!A'6g+arBA.]\=VA:kcJ2o0N'$Q4uoU:Sq3_k&B>8ibcgnk/=Nc8WO:gKcer1a-'$
%Z-pQJof=&;2o$TZ[46PD_Sdb2Q@VTaJ;N2=Ui2\tnK/@.$Kj4IFnZI5Vn.3TCFG1m,(Q[?7tr"DR'OFX/@9?^:ljri-/(;,UK.k%
%g,Ft\E79L69d4!t]=3pT7k5G:Wr=9m"1UA^ngq9WQJI*)Wc#P/TJ_jH5`5c.-r:@LQ<\Nj;]EZ.W=<U:e-el7C3k['&bOmF&"T#[
%RD(cLG[GiBpj(\1-p_SB;hVqbk1'Y1X.[S+&u0?Soo:3\LAHX2O+?p;DCA)IUC_Q82jBJ8,X`*Gj<7-O)DG]th.h`aTdk3!2+67G
%_<Z9aW"H(>40d\e?o(9cU)JuF!>:=e!]DcJ$Zh8qTH[MO(o/KP1++nPNGt#tT&S7Q8bipT;^5>>-Fh!n&_4g<MGjW>S[>7R2.BDq
%4#KcmE0`$$==O@&`43TB2*bW7R5d(@C>;aX)DK9niA`\]>kZ;CWW>k8T+5dT=D4sql@?]`ZWKqh)UMV);Ld>g?H,>f)Efq:9%PJ6
%6Ub2VEYPB?X9h+Qim]KUJSGR^O>JSeEf=?EFN19r:kh-5;Cc0jgdPAOmkd^tqe^@,0hdS=Q#A[Q;X>[t(=1:3asBf"5Ag\*/SZK[
%.nlXO41H92`bENRH-fqVcBoO4/?HK")4(mkIYO1f?DH&XX>G!'Ild%@XR\bd`NIQq21Br)iXq3(ef55-<j.kpX3Y:b$W]2c^R%Nc
%+jO8'B$OE-gJB/-"IPh#n0M\r5d+k<"f7Ru@,`ZuR$!(rbfIXJB!fDh1U8[&kK`GCEph0>la\gd;GNH:*9Q1I.2qc`Wg!Sl)IZHL
%&t(Uj"D'K\j6>^!dD."H;hIOD1I37<g?9+E<S_`#%2pfP#E;OnO@o962F5*4?o)IASrm4j1_M/,Xbd1sa<btnC![.9XEaT@L6puf
%/"-cX@n$IEnscEfj)Lns[8P@b_.M'8^c#l5^`50<du;\I&OouXr&fU$@HNtlcj1\gV0Fs4A4FKANA(JL%R5XPM6=rY0)_&BXt_/k
%3N6B$0dAKl)DbR$))F%P%1\e[Fog?bd/nC5#St#"r&JABj8_@]1h$Sl-V2c'NYk%qIh4Lc\TCf9j-7*/Acm#E6K'2Y%:C@eKkAf.
%dl__>ZN40GgCp"b?qG:h-CPBOPQ%O<)h:f)^7@)"^kBrT1`OBG3%L5*"0a:J!ic)j8b!Rbc&*sp`kmIsdR%#b`<C)6MWQ(/f^``q
%'$,?;!O!#bBOO(b3"9[cBHD0p)k,"Y'?p_9eK*=lN*]%hL1UPO]XEK,2Lqba`W"j6,`1E?C]G4<\WCV-S%#f0lQ.RbML/#g2AS1r
%)gn"'n0[H9HJ)8%6B]T*)k8h/f[<d'`R,no-M<_iY(Ola<GHQZ;$hA'[D'Mb.\S>nQ[gcZPu*>sbp0s*O>SQuCb<g6B%%B"<7W98
%97i&eAfgJ^B&^oEO'a=IT%u@GEI+?#H&SO-K_u7sVA.6`gG2qfoe\:2;.bq-Qa,ge%r,@hC5S0Jj)Vra\])R"S<[m.\;XGV)n![3
%^eH6lA6d,HdB?ba>T1g'QO>jVa>"SGft2d:EG8f8/eJ`-"WNea8WNC!/eJl91E2[#hKY^5-"'$^mtl#j.%=^]>QU4f2&hm4WG+DQ
%9.715`;!dl#I(.nX*T>s<4e[?A]u&I;<'ED]n&J.b5k1S$#<cU3'"*F6ImGjH8uKTNFok-o.jpQ@aC\?+GKaH^5PK6-FEIm^j>AK
%gR#/nX%Md&"e54^JZU4)l\U>4"`,a6"dQoZ8kq,ACgtD!8tSil1D[)dXsRa3ReJjSg.D2o-K_Vbe\j<%B1u!O=qbt.fu,`-.jcUg
%KN'k!-72KV7[4<6K6biQgPt\?>,HA0R'=*K_NUkYg4e_+2C;ft%$>76_UhGS&2l8fJ>e=8@+3%VNSW1(KX/*Dk>E$P."iN;;V%OM
%F]7BmZ_H#.XaF!q+C?eQ<Di'c]QPc>>tLuQU=Q_?_,Sq\bZ59<Xddg<USftJH^aW72M9JQVA[HgBo4NH9f!Mp\+$+Hkqfd3U5QkW
%#987%G^2dLH@b_mCqF=$EWKAZD1PhY"&'a0XJ2O_jg7)&J0h@o3a)Tfhl<G;A`ds[d0=@H1?iIKg,U3r[,fI@gf$^!Ygq.Z?*iTJ
%l=cq_boLo5o+!bFBIR\E7<@>r^p\tW#/3u3B=V9W".7$Tb_8+Y949omE!NVCG:_1%3u0VRmT=^:$VBI4"`3V^=^em_#I2o\$-0jF
%^q:P0-_HK4V$aeS#G<bH^*p,4]M)&fg]:Nu]lN9G?rBaSn(\eLs.,cc!+39Hd,d'A]bPetgF3&K`ZD8J!9W.7:e_9Z:h@1BB=Ci8
%MlB;_hQfd$](C?8H+nf'X[%DL+pZ0`TSTXTQp\7_`tHf/02jA4i&GZ.`r.e<$ma`UqL=#Q9i+f+CS9ZGRD8A@?;.o-J4\ub;^p)1
%VG\O#<>jRk.1e24OtW(%!L%=s;^i9m.#DfsMgW)]hGU=<*$Y)4RSn\:2^^;E$3[GDV*QRGBIC^I$FK<.\;mnFi/JF%,D*ZI)]Uka
%GR$8D1a"h6^f^R:0Qtc0C&F,2McA+G%L#J^8(>rG"\B(Vjal[0,9R[t_-=/i5.)-FU?D/>MK4=V!5T\o\3?tCad0C@i_%:?"Gin7
%r_,9f;&'=pj1GImAH52Q\(Q:o'o.G&0GF^]0QK)Zeu36b@@0k0(Fj5:)jTeVN:hf/>8`OH%$=Yk2Wd02bs[O8(l]WQ1)81=%/PJk
%Vhi+t%\eZ\0Tt!/%WJ-&!.$,?(dW(0bmH0\.FGA:1)a<`g5CY7T2G>3Sca-jQ@Apool@lZ4IBD^I[['I&)>u-pVS6<q)^;5pn!u<
%KUuR*D*<6NEA?t@=1Srh"7rG-rcX6_5tr22"b=QO(G41JJaigt(h6]&]"!.,THa+n2ojZhC&CeW.'m:cW;Bu@dOq7\eWFppFk)UI
%%@$XN!tPaR.?h4@a-g^7#q"-NaF@iOWcc8=Od/sf&bcp*'uE3:R.%e?NZurK5V>4!)t6.Tf!JhM*)cFr$KEE;;5VIP<1X7Jb%40b
%Gt!Z49lLUJOT/iWo*t3kbCZnnCFh5-(f<"Q$'Y$eM.3%NXO(6>Q(UB!@0I?Kj*6rA&E@JVEK9rYjJ9mW1\DX_<%CZV>!Z)?m_l-5
%1JoE>l!/kJjsPU=+%lZ67js[_K1P<#m6&aU)ddH@ha)I7JrY\jJ)&Thf`qrP1Fj)'lp=81-pTbIs+1'if<0`(j-'b`Jo6]AoFD=\
%cq[%Q:7-p#iOU@[.(gY7=!Tasj+C.u/kpU`[>3`,'+8;n<LQ37NT]?Apaf7sK(=`L_[`[QjK_Ng'?(Lm460oQL3bYX]UWR%25(R,
%i&jPO^>BMd&[Ntr"rArr&TJJdPcFLtK(1T?`7W$CWufDXdW7[<-PoIKd#s9V/qFk+q?A$1-W/a=$3SUA%eGnZr`g!J^q$<SnKN7_
%cod=.k8/c,ktPc,$n1KKO@Ep.".#n"XcZG+SbjVTRZk%[o;BjTfV:,.N)>"Qm%c#bcCb_FjK$l?<0*a"is!*:(k'CMMD65>$OM8a
%.H!mn0;)9^UHY4ah]`]%'D`?1Z%3ndpt[BB"!bg0\Y(F+,%:2iOcFi,MaE[1UrV8>*m47!?5n+o$MB2f/Hh9ji>T&oVcAWk!sXJ>
%l$J9U+Qpe?m_Qcb0r'QU!S'Ys@XG9qZ3B^-\\N0Z9p4mQ@8&^*N#ZJLV,$F5;'t,8/Nlq$?TU]un$$(@?]hQ>Op_F<I:j:/Wnp5_
%&m)*SD5c/W_k`H2:>B9<[pl@+3\ACm,W_]l%PU^YCZa<o6E@bNq&p:GB9Pbls!!C#psr+[5^bb#DK#W[46Q8&UE+piG\@?r;=U5Y
%G^W:"-gNXK:/ujJButJ%!(+AUg`nK>d)DfDe1-Hh>S<'9naoaT$V(4&N:d7;$DrIX%1\j<QnsF@1L(MbU4a\4*?d%^!Q$C/Q4(K5
%1C`D$fe$=e+GmCYD@jaBg4l)[]jq+%eOb2IGB6n'fRM>:$U6uI$5.Z\1#)9'.gl]3^aR#YMSj,Hn0Y;bC!JD>6hG>L0p]m$W4`)U
%B2AKM:)'%.L9o=AKm;$uPE,pDb5!"OM&Zg(2:K)r*diGVqCiriP`(HMVWVM;>EQ7a)>l2QSCn%'(nL8KEN-1A3aa*SN%l/8:J20L
%+nNl(-"ug;iPmKYF@_:T?sqh4&,TZ(Yad.:Y-:P]_GASnb,>pi471*NR)n6<&/)#LEa2rd@ELSq)45Y5"KI.WZ4[@p0_3G]X-_X+
%3'(AV,p*kPOfX01-URo-j!=%<16o4lC&Cp[/;RD>]o%\Q/eI0]hFllY3Yh.h+-%btIeYL>*l-2OH`61/?=6=AoP94+T7"]u+NRtJ
%!k)3qcf'6e0RC_(K.q;6E/-JlcJ0qsh1D^aV`$?6/mVCD_?AN?S!kVW5lcj#DQ(?>\Jg:3fpm=K!-_5Rj>7V$%8cLN@Wcc*XQec6
%FC]0D[,nn&@G/TA:Z1kLZf4`<F*ebt5h.S!LS9:dWRmmjiEsFp0K_R(%`A+/jY/M#m(%b0(P0;QQc&=jm,MO,6"+M/<]i*1Edp]C
%%L7gdj=1Z5^]J).K9-c;?%J.d6u*"M(IIPG+XM[$.Zj9)lV(!=^njKhWE@uEG$,@[)W2r(+*lLpEFL:65:"NEhm7-=eA!+$P??@j
%%Zp6DYXnG_?su;4F2WsY,!;-dH)7Q5'A%LpXF%>Y$Op#\mjlR4BapJ;r(Q0s&O`J5:_CpC0p.bVMJ&u*h6Os(5J<MCY(LbP8jtCB
%l[k0qo)&i\H(f;m;<l[6cV^SZ.DUAql*sO5]`o9T&qlf8>jY-1\59k(O;gCSA5YlJW"38Ze+-n/PH!F',PNTf(I`a<lOYD&dMeu+
%"s:d$192_o.MlW_T2ljsH=TKB5Hs:h%)cBTC>OVs*MkSP@&trtpGgS8+CE3r`9MD'ok#_9lnIT5$o>^3Di)b6Q9lAY-$oQfkp)0c
%,RE<r[kT$GGs:J[7.D*#@8Bb]X=J#/bRl[]\?0OUWft_A&2`ID.>=@U3#)1DS8g+2&G8(B?5XXfJ.L_!0Yi0D6J&L#<%7>)+KH2(
%K00t.!V_l"L\#FoUVFqSEHqP'TEeA)Rj;]uB.0NZHseLQ+P,u*r%]c4_XcdEKXmml$TO9iU!WHR37pMp9cd[Lki&(s[*>)qNIsNK
%QAufZH>%)J)kD&sTdG($Ejb-N]k:%nQQC9`F35!7=:kkjPi'UL6R8fq9`VCq]fL@8+TZ*(3o31sH>47V&#ckKbHC:Hli[o&8H?Za
%1+]X:/NlR2UaoO:Qs_cm&I!lCA)72h6D?h63s1e7h@VXB*OTebr'$ASAgj_lWDG.cM*":X)MAr\EiCk7EOs4t?>:PMeE;NR%>=L7
%+P;AS/,(!AaboiJHGZU44n,OmV"#AC.)6E!;[Vj&!TjPQ2$C02@K\L-*k?Dn^C3pZ&E5d8:rC1kPYaTbB*1_8p8fp^jQ_#q83'\K
%Ld^BgBQGqONJQpFSIhM.j</9D!kEkIjK`f6iD/7XLD<9Y6D$O..@:8FX"H`*-pe+cEVK'_n?rJN,T@8+OMsufQ$"pB:PHe?UuMuR
%18;>ac%GeDn88ACh7[VSA/<jt("^h66`9\W@24<8OC^E6$G1sGM=gkD9nej,@>-'E>0'g?]g,(0"u#%\1C"U6Z"dL_Rh8qf!`qk>
%S:o<^CaBO])?np57anMB=Ml3qE!mTgI.M/T^s-5f!cAqo9cG0M;2u%:.c?e/59.GK$?p`C]>ElLRRTh#@9a<G"4^_PH5Lim9Fb>C
%HsV49Mi@:'aQ_ib?MJoh!5t-3PpCZd#9@i^WO\?7<C(SJ]\I=2bann;+0g([JmhNdHZ%-u3hfp8BbrH/&D5rSQpOu4M5QdqOE6<^
%fh8_]f-LM@e_EL+X?gA5SToZr1,s)8)Fm"n[;Ylk?6[u-#`$UQ'm$SCK\+O4Xd8!nJk?EldRoXZ$Tp/dlnEu&/"u3';%=+q\K-2(
%p,i?!&]uMGj8(#h7_h,<Nq"cCCSjYqhPkX^g9(ESR:3&W_XY[fIVcgJC^s(A2!9hh'Zni*#['Cq@Js=>Fe:_p$B5^6*7U/VS.`IP
%f*>IdLnTi\=J8A';^Aib1s]-5'4B.g\_u1l\9dPX6o0^D!sQ4CC;:<tL]jZ<733kjl@:&L6<bs6%T)M(Q,$45R0S@cfYEQG(];(8
%B5n5SYuIn6:?&j<r.U,1\63Db@'\1q3Xtq+gA>j/;Uo.l9?PAn@k#]#VkQ.i8<YA('3'QEb':eBcXeY.S6b89F=D4uiKAg?#(UnQ
%O6#I,Rj.\hjd`k&Rn,^?EmFk.XugC&8s+F:m_sa2%UaT]'@Hs$1U38dSDn=(A@:uN,T$TUT-c2,B&mWg_?I!]c/OU;5L"58'l(=e
%I>X8="kf?@==f]G+eJhIp-&A;.sZYa`[X9)-*![L:Rm?6P%WF%VCbq=DEr^8g.SM`,@Lceg-!%fdS(o_JI\%PL4sN/adjV0?Z(ZI
%(A8)7AC4A]&fnZdMV7:V%T(L%\`a_6=I^4CTL>1lMA>,p;WWBBeh6288H>R-4\^H(_JJ97.l8;Ej>pVCX2EF4#_COX\4;51M7Xm!
%Kooc6'4Pr&R<@#Y;?ST]^.D<YOho7D>^e.-G?;nTe.VjHCA)9")C5%t^ne;4Gmu)S<H&2eMZI)Ujr]]D9fe>8C'b9B?R(DnYUGAc
%Xp7)kkgEqeBX@W$Z[%[rLH!)c60#qZRio4e0BZ+CT,blE&^+-1!Yf9#`tt)*6&f7GA1!Lj?p(chdZBV\0W:!Ko?r:/,0Rq_&USn6
%/Z^M'mY(:ckFGX&#;^?(r?JLfk892S*Fg+gcAFGYl*=D6YF2bh0LiB_;_VpJ/!9@*XaDVWc0_grQkkEh-V=4Z)N#MB;\rQD#"ofK
%^QPW#3WWUb,f5GKM?;6D-9eac^Ptln,$DSCN:;Po.8V48`>W'6IEiNDY?KO."c><2@nnsTJ]`8c"03i."`GL&mnC`h,)o52WY_!e
%a-pP5V;m_.N!i;Z#**1rM4Q="7;BQs'&-6>:0uh8*6W^?2=qN'SHC3\^_N+:Mc:^ME$<[lkd6!to3o(nLh<;"FP?*B6;'T\(u.jB
%(oh":Pt6$4@1Kt`WA<9t19[T%nAs`*r0eJdi5GdgQY;n[8GiP<Qr6O&*8%@+A@aadSV;MFO?b[uJHsq@9"9+)*9*ASr5:()]Cd.D
%(cdiY8>2ST4^3Q&!#X-bUq%#Y4)(uf`+m(EF8YM[V[GaFTNo@XrfHU/MS'sD*B!X1<ht+JQ^<BLEA#?jJY+-g-YC*H_H>BUZ,Tlj
%^C4LMk.u=C3"m*=MsMYNr]$c",MeM:;A0t&mBl%:n2sT.K0E0]b./6)$n?<-i<ZRZmPP(`Q3LW%O&ea_rJiM`J`1/N(C0VTe=3VL
%''+S9Z:JR2SegWE&m-;YNE!("IgSc^UruH8#*Ae/X*G%Q+i\;$1ihq.Pac-JWMA:&(b['m(b=IU1bhQ[]BA;X=5)jK#Ir.Pq+]k@
%jSRH#!/tZdduQNt$V`i8IV2du<ZI918TiNfX*:#)7_(]W.4]qBF.&7c0$7#\i_nAr&Ol@*apY5l=n"UH\/mMcC5Mj#BjHr.bnk8-
%AN;+b45C)D=I$*^ol;2d<1Dq0<TRg+^kbg\*:=PW?qK0IF+tVOS.E8%fJC014&oHHTh#M(M!Z0GS.QDY$7=:eC?m'#=Lp:.0Kr*Z
%Lk[r;?qO23<*F.q1@%PpoLUU!,gB8)JcuIm@^-MZc=%K!!6^jd2PQ>c`ZLFs-sBaF:RWY*]Kfg_@XM*5##@!5cZH.1@[<$20?X$,
%o(!^<%ne3)c(YqH(+nEFAptYt9'>SPqr$JZ9tj+IWDorqXm.0;S,l`UTJIZ-$\g)VpX6^2-=6>%4BtZ:4q"+tEe)F(CK)'j&Q+U>
%h5"?WbZ*#MkCq!1=p8bIb,R>Im3DrR`GdG;Y2T.tpqUY4hH4/"p.(K;b]\[0(rV&Cf#Ya:K%ql5oB+Rnk?.eq+<)ACi9<nIYa;+=
%XfCHC*e$/p7_Y3,Q8\4*U;]+^qZS77d>j$X+HV:r:YfrEDO87GTs=]1/2#f<$!W:,KgHY.&GP\R90>H9kY$SUChQ$drceNLa#fNd
%iV]5Sf_XXScPD$.r6+r]Z[m7Ij5\I'q?a@_I!YMVRq't>4:igtM.*QQN%gi;n<m7g"-!dW\-b.J!M\LB]qbpM$08u((:>O.q#r;t
%G;\W%cS7u])$Z0Y2oe!rak/.X^B1;+/&n$V\Yi*4frW/&#-]A-1AcA5%"fGld[X^u+V+td@Rjb@bB1s`>elJ\is2+Wg8c%Zndr=^
%=dUR@Gj4.6a<$(g1Y8j^,9$"N.0H'L"G#H:!&VWgNXqBC<0X-gYt5g"*\I*8qp)=ABa4Hdm<$&^%C$Tmi*L[X,Y>7.6G=Eq#)6=(
%3U<pE/Fi^7H?s,Z!%mVh7c8P6*2@XYi1dL*)[eJd1!I0Mi8I`$O5<ASNf6X>2N(65RhRVM&F3JfUC3Lp6QMb+,<H;RJ_!o`Vc[bT
%_+]G^S[D90EF<0L:O:rc[9B`\Z+%E:cP$aK+[q9F@"]ZoB,q3Br\0l;?1,Ya^mJlXbGgG$L%m?XM?au2)HnUs7D>QCS.QL>8tODs
%UuGAtSD>es]S_9s,/-UAiZ[*rpI8,pMNh^E+!E+?'e+C>;"6$<-rDc\4:Y<B7J[Q1%u3PS]2J/!SiS#lnGqTQk"<Sp9U(l8`<2?-
%iQB,,X@WU")m=d+!eum.&16;FP4A&'8^`,<63[?/2OA5n6^ZH6$Q0If8PBHMi`/jkDj?9::_sAIP48Ot/uf*iGrio7/SmOS+]3K*
%b/ONcoIjY5iOjks!=3%3(/2`#F'$R]UJtJu2I=AlS&?;2N<aFK6JNeD?Ida;9#^sHEglkFcDZCU6cK41I,.-/UW&nr!HMqkqML`a
%&F01h5ZCN*j5KQ&)Y^AH]_J@5bJo1>'?:oqnSgI7;6N_X6H[=n3-&hd#^Q1d-=dK-%suT*O!3TC^h9@d.3T40^<BF\Gu__T\!)mY
%fFVBK71hj-^jOC]'(U"uW"Q'BnmIV+g"?r-BKDo-;91a)o9k9kbD.KR?%Nqda9+D:;CF9j&>NDSb/ddAA`TsI1%MP=lCT4h?BpWD
%mD?pHGUDd?To"Ap*@12IGTT`)<5n=6MK^BK/.]pE6d^!)V5t<]\s*gT4^+1Md]54%95.jn9?G!#V.<tV.H-b,YHUYK6&)^6/#Q#H
%qO\8I4S[41,a6]=";);:U/[>41k45cAk%nU.5`S]Z+?/t1JD2".A\A&C=K)ERTr%k\<KmXWc6F`PTVtT'3rYU"B_dhGG-Xce<Q2s
%/g\<5as_9Z/_G.o);%!2TZ0WjD7PA&;e^g9X+ZkY%b[n9R&^&K<<B[d,/@M2`)`cK5d`=)SOuI,3h&m@<$Z*KI7aK.@GsqQ'#7Xj
%2agCU\^tfsPZ"4*G46p]>U<4e5,D53mPK>aJ9B*>:nLXc;MAG*8u^5_Y`>HgC)<L?JqPs(+O6VA-=b.]-!9!P<)B2bWZ"!!T2M\0
%C\76J/_K\E9mCY!_1Em$E",U8dY,m7G:GghI7g`7ZC%uIVZ]*-CN=IYhTjc<8@Od*>[0m5q-'DRq*=7E>2\XD19gV>jp4bT&l+19
%J(1A!o;9W%,/A_^>$"3+I#8a"rU_PtqWdB"Mi_qU9*nY-\u!rR"Q-E<>4O*o6c)Tp"e/hpoB:&I8m0?_/r*<tR\-P-"bhih>+GYt
%&l7$a!00M479,ce%=Y9O?nbNM^nR\e_$X+`!lXY5SH*$b:XocM:MY(S^dNHG2@nAA&t6=2-bqBPCNT]o3*fLa'>VZq\]Ieu!*D'L
%WD3Fq%Vp1gS<%Wh:/H#Yj(/-GaOk9N!l2Cc>I6GB6*2ps-b4ft!aZ:GIE!S5eHrHmU`sSs!rRX$B"Q::C%3bV+9s?:SkO8.J?pM%
%0ZuK^$6ler8!uBLAr77hTeOFl9RG`8nnXQN"P=k)OUEM"K:2^oT1\>r.8Bl8gS7T4ZoA)G64jZYJt%9NVsBd8aC8>C^qus._$X+\
%!lVaK[h:tL>;Ec*-U>2C`<idKH@iGt'#)heMA+p0\@"9sY(.?b'6fi'D%sE<\c66+;I+]k;bF$LAu&BNqU8;626"c6Uf<Q4ZAb#G
%ClqU/?)3^=77oEdheo5('L<>[dR^?LfOlD))W,dQKN'`r9T5'J,,1'Yl:M5I6E4g[I1]B5&D]cGFZh9Uo"]@cB!FjtV3K0fV`aTM
%8/4oYiB^'RfZKrj,S_M@n)6\Xc%fQA;c#dK=I,nYK!..5U"cZ`78O^HQ/<BD<?0hKB,A3/Cb2AU^T<YT6Xdru-=)gg_WP^/%EY1#
%9I,"CW8`J[]_jUb)T3i"JBL$Sb<eTrd9?XKL]WNV)HB0WfG%0e[N]I;=[WuPEc[*d^aT)$&Q&P/:<au_BUtM>U5G94>soA8ac$Lh
%Lal0"^RH*&:$u=UAYnBh&QQ-dK:X9e,fq#k&Ogc/\/kXO:UtW[:oBNj\l,o$W,?#"D\ds+k1h]onjSuX#Ir+rZL:)Z;I4YP(-TT6
%UdpU@ONI03^X;Cp*KF,ffMZ\Z;pJrY*a+I8B&4#CU;H/VIQ"H(bkFei5Fk8S_Dk4".qlq$hdaZ3]<k=qp>/K?I\iJ)e,!08#[@KX
%?>K274n3bWFg&-hXV@I1-a'.0R+Ar9SP"Vu(0TZ40E2%]bmqU8$AqAlYkM>Pek*"(<7!@%MHi2tiBfBe!=R'B9khm1o<;XRj.3B0
%-1O0\9?';8M@;p(Am7A;_,+iHi$C_3_-<$.P+Q03\997D]V(AICEtR&M.-20Oq<JXS9-IK=9),P7Sen2G>MDae0cWCP??7@:5#DU
%Us/:9'+:@&Ktdg"5*AIfW,X8L@=rH2a$4^DN!AiXk9:Q*Ok1@U1pd+e-HTt_U%+^cLC[ce(Jtt*KnQc<;dMoD'qR8"$=+(g4DAsg
%a2J#dU+ru%[pVg\9TOF(!@>J]f')JKRS*lc8OZ`8=>9L'g*a5:*_nDehB4/&*u,ik/kLj7K8J;08cBu"&q5o:^g_K89+@UC1RO?Y
%jN,W@_;l8f&p43d&!.F#E>mDI0hb]6U)!#9L5D1g<0Mo1LfQN:WMC1[M]r=d7(/W(d.X\J/+r19#=WT[[5)W-RY*D%fE9$E_1N,B
%^jK"tFCA7tb9Wn.0'nEH/o1Vo(UenFKahtk\l$P&NL_Q#WD46foUkBYlGA;E%$D^MV\fia-?Bf7E\_?ErY4!f75/aj6SV/,O]3,T
%('G@8SR'lEE0GAXF^\>\#qR]FW(+@=,,)TI-6f_t]4QqjhQ@?)J=ANqfn!Fe<U\"[]jT<?D.)\/Y#09004=+]?=7qa,:3_.m(e?B
%b>'n,l+fbj@a=>U7SItOHa!MYZ=g$>)rR[B'CoN52E*M(YQ7['c#dB(ok0s&G'QrFP"Nb9Cr!&)&>oaP.e`^aEmn'He+q9!Ca^[5
%2YD0"&"&?+F^WfL-.o(rHEPr?JN_R.LG[4N'?*2<!uoCadetnY"1onD&]5)pW4klZmrVqjfQ:LsGk"a7]g_'%Sdt)nS'fQF_`Jmk
%YaO!jV>b6YM+^-tl+i$JbGBE[CcdKi7Ahrbf/g.\#?hB+!`''0J^o<77sI)!EACM`:^8o&S!SM7&RQ*(4h.?I;mQ(1b;qC^K)TfA
%nR`#LNCJt,#<$ImWfG_TEu5O5?n^/S@%Tr-lbKZNFj]U!9JiuM+P*CnV(Q0!9KYODR#1Df$T$0eYQQe1r0`s4iPel<IeJnlfX.(O
%\gT=6Ej!Y9c\l5M,*b?DV+dT`We=9D>p(,5adg.-UV[te8eHle-:OQ3lIu?W(Z'6)VBlH/7lE#%G[/$,F29Y]L+u@q=I%r6oQVT=
%2'f`g!DneCK93qpX*MkmC=9Vke$3WD9%.#MJIr:=MbH-?:qjE[>O]@cHZ%-uqOpInrO:uGoB+/]Y^&^b4Eo$MLN.>,Zigl>jiBu+
%<GL/>l5ULa'N,rE]N,HMN;7';)e.L]RmC'*R<;7?;p2V\,Os#^Ot3MqjdWYu\"T;!Ei0slAt-1P)HKbE=l[Z"I*cVp^iC+3RGE9#
%.O_<N9l)U&O",qRA=GH4=3BN5[TTZlNFRC+#-"$pX),+CB@qgXAcjMdb`KqYJ;"Zg$rASpZHP1Y=8-)1^VRsH!GK#U9l#)YW`dN6
%Gcb4,Qls)gJ[f:l--8rP>Vgo\;oi3"/As'$1SU>GCt.W>21lr=aTZ=W=]5CG<0c2hS7]0D(eZdWm8(??T:'HFRV"fhWnDnM>D9%g
%:`31"QXHs6<4^R'8s=&AWnr)1\Rqt4_ihQB\.kb.1ipq"S!qh>R9[(qr.N0LCJ]4?Jk2.c@-M\t_PEX:K%KU`'MEt>A4[?_Ck3q`
%XHbl\?\+VWnD^*@91drT<A%BVQtBiipf>@fBa08PM,Z6uAiLfo'#dO#W8-'ZI5[L*D:W5rVHI\4GB,I`TZF'qW^i7eL9i<=;.c8*
%NRG`^#=;gQfpK'=1T5]d`$\"A$%UM[bs\lARmaRdAtg0U4NX;B6o4U-4`Ddr$qAO!i8bQ`lK&=N'VC'P8Z[-M`G!Xr'O;3EmaXUG
%#p[&\i9$gV,8[*<^iSnUs-SGp".<g9__:@D0q<A2pnpu7&R!nn*UY;;D2rgoi/3.rTi-,+IL1]TC0@0rR;K=F]9nOHq.68H'R`+>
%fD=9"RHgM;o3"\K93dklSE`gN0]`5jF*!)&'>A,@M=4m*YFY,`>%'6[#]nD9"iT&*6h.u.!ENqM1f,qnca+N%?MoA,/H-'\ch,:g
%0>7gEE>/#@KeTnId_PVjWlVT5AEjRs\f>0g-K&a_N-4s7-FN+=c;HL3qBX=l(d:rHA?\)j$Eq>ekZ#3Jf?q(3N'<IY&55PXB^VoA
%rLii?kNE.LjB74%kZ&VGn9ZU/@#!R&MSh)6(R`sc:s+Jdl\Ve@j\\bmm#C-I?,_3<%ssYTI\p*0:!5P13!AP_8uQo&:9]nZ>hI"]
%(+9;H0B_?.XdBE4):/Ss%'7:<q48H\RU'+V9=+@K'K*X'FU^,L<\4?^C<Db<e/PY`Ns'8g_=[+(9'&LP%tcnMR/5+m.Rup$A8?c8
%f2>-EdQCkAgiUN\NTmiGU\QsAm`inY*YA7U>U-%1/O4rTX:mYL!Q4Jj[kjt:=B?]C\Bk6lU9k'2!6\P;^?R!&TmCL,>(B?eOb-bm
%l.n`Ae3Y]9X]9sV#]&sF$>L0=,r$4LZn&"^/ITn7er!@5M_M\p%0Kf?,uMfAYXPcsB#_V%I?E`\AG4H<M^q=#><#;Nl4B_YL/9Mf
%cB6d=/fk=8d:>dM$j0]>H**?eJM!D7Umt!_CuJ!bR[HY^hEj6S.JYZ$2:p4gfBT5\+,@6.e?\Wb.'1tl8sUd)2.31N;cjF3.'[:m
%CB::Hp_hX$E%];jTs,;?njHLt!K&(WB3;2bF(pB:!:tN]"bj?"9Z($<[:-0@k-,V1_W9g_(;=%D`\X]MYkV_M]o4&/\Y2cE=XO)T
%%VD$(*7]X\o:#2<JM"\"j_V)fR1MS<LULU=oX5p#)YIuHpbfD^E#4G#6X-cMe>FuHbUSNoOfb>-.`pHcFTAc*@>_cipEeZkU)@?A
%X6_@a$t.A4;PG%:VW^)Sbm\3?Aem6lZP=g]).JgkVaRj\"cC8/'VZK<WTqJLM&Fj=+A=Th,VNo>1<ffblK,l>"0@ApSG@D$FK,$%
%68ZU=Ud1UdblAE?gcR]_<6njr=jYr6=aulOk`ofcfM"M,U7$]EUTD!u<3&[E.S]%Kf<>n4Y]ie_6CoR?KZ=[HZ;/S]4\mjoAoAK[
%)*U2SXYcb(!B*TV&_kNQcEPR[GSmlWH%Jr>kY3O"O[hm3;VHXtc>\q5nEWl6+Xdo`$o"bcICi>$BI'sZ6?=nCCqAhQfaASY6(;[7
%VGPQ==O,'bWVSqAUULW'7O`!&=!u9[U7<C(@<A66iHNF$.H:h+`+_c((hYg#<>=:MFba,VMCP]qRDc9Zoa(VA;Kn,C'/V7D=erc!
%+_1p0/Pj`td&?I-WB:2h6/B0NI6NGpli1nl9m\H`N[qs7!r*l*(BG4(R1.uj3M3<XCShENQ8Fh<RLKNF;H_[`@9ut@af8D5hm]4f
%B"l64a]^H8Bi&9$=XW6aHh_&fDTf;QStIM>h&g8$"Md\n)a+5,BQh]s:B7nlDcPEr#k^S"@4,0^c;$(0k,Wf-fK$P\hh<G)a8D*5
%i/*2=1SChbcbR^sU(u%&%UM1U??.-J'0F#;PF[6NE79V&"srNl4BMD%d*s'X_G5'5dBQaQjd?OYL2PTqrT@%[bL+B;!*M/r,:>GU
%?WWc=$"eE+-X^/lBU4_n!&L7WOV?O'"Ig.mFJTWmc6kYd5*Jk2l&cI)a2;RQ7-cg<RWs"&X9r?Nf4%a1\Xj*T(\%g$@o[,cMH-'Q
%McGn*9ICS@&j%s'O;=n6r]=>tip;s!/F-H\+UNKU'u3kP@m#'4L3e\V!B,25/62qQ<K4Fh'jr7[SZsYp7N$n$X)bd41jfU1!TZ^a
%)(KgFPQ5J/<WR#CD@9JgVTCh6XKl:u=Cm5bW"]Z2#$3nl:VeM2/AWff`?eVT0_6L]?kn6>1^&G2cA>'@JlRX"bfCj,69'1L!X>\:
%4&(-i@$Qp4^7?e)JlN)[*)_HqjjZi*$F"hYhg;R7iFp_`'!-,:m*qQ)]M/qU,uH3q"gA@]W(q%G6++]T+V?-OU7Hp:!"W/gGVo.s
%3=/^e7cjB`'!).Z'EjV-'k6!o.)@A`eq6sLG`GDTK$oIuBAjo51;VH',H]Vr"VRngX`GE47h8W$W\i0f=9[MY@cg7l?0'q<>#*7b
%$<EQZE!fWKi?#'U_\T=/NGoD/iFE)'p\/&1RCD-RF=O?>Z*4VXnlU-mm+3I+et.Onblk$LX)MM5DBH\Er;P-^ib@"IL.$Vn<icP,
%g_meP_()AOVNKOX1Vnu]i198DkMbim3W60+Rnj5jp[s?Gj7L0Xe$E9>":\V^7C5Q^:H[s<C.%X@Ei*H89\\K'M.ClGS,baTYKY"/
%[PXSR4TFq^[G.?XL-/#8Hb-&aA,r[Yg0HJLL>PuAbm!E.JI,X8E^&<[/ht2K;db<u.6oFf#,+![J=X5`'rk14W8@B^;h1Xph$i9W
%!2]o)Au>W:h]:&&'Ylh64K8-e:9jqipS@[s2OH[re'DU]`$ZdsRCBb'7c5>H7\>WI[_GK(d=dM<n*iB`_%Nc?J_/kQ@2j[J7gu`_
%%mn=M%=dRVkJm#gmOTEsn,$h5%)4_[mPOk"0^=Be;$EkG4+&ds\pij3;X@-rInCR"Mkt[g"><(d*8NCB/DQ.""4in\_5\<D_-%OS
%Yj03C#%d-t,TAkg2bWi'PMC5W@A6;UcE;B6/:)h(4?Qa=@ULI4QbC`9`P@YMYu`R_8u52r9WicInb%M,;S<q")(ZW!="ab?l4Qbc
%@UcTTinLZ%nLmStM[<Hpit6?J40k.F]iQjnTO,9U6DrPV$S&!2fh.;bQI<aj/C(A!0'5ZI\pW%]3#LdoQI<_lZt(!Q?FlLK*6_)!
%V2I>q`@bs@XI."DF:\=0`e=),p+0ImFl>57C2f^q@k(a-eYY>qj3aW+PdPQ%[!q%7\Tik,b/JS5bi>c+KgR%0eWR#!MqOAjF-!Sd
%/?rr8L9+VgBSr7eb/Jl92m615#1gMekBrfro?cOEHKAVQSOcg6Af.h&j-Ij,`-Mi=Y?WWRC[###\X6Lc8MMc%]OJQtnI/44McX#\
%(J@EXdQq$LQrnQ+=n,sM;Dm@G<%fS!/F?T?(DH,)WkE^5#IGS=;XK%&\"d6/(NVcLG6M.B@a84:4\r'oA)_:-\LH'e\JVouW`Lk9
%)XPjj%.+)6-<8VqnXAP(<5!N_QW*QdH%W4QWF!f';NF,n<HhT=G7B2@_Yk7&#OgruCg(^Ym)f:`bmS"&C6a1%7i6')Z.nf]8[aaG
%TN^6gL:;U9-ZAqlGPCfEB/m^tQPP)Hkl#J&O09N]N'8<K+beQ0o3g47j^mVoZPSpa5At9UFqGs]ZYl@5f!^"P^h/)p":pRl!2nfB
%m7bFS]<okFFafe&rf,Bsn#Ks/#4c]W'g>mrpdf%K\*?fMroo9eij,Ib^L-NCbFTVS[jI!USfUqU3A#ZV;@gG-/phF7:*uYeH`F(m
%n'koEh9Q^WL<H/,XBjZ4AP^P0rmYMo@)HP?_3<&k6.KObWq)),Z6sbH'sbI<fi+)/l@oRcN?NGtLHJY2l7RDlPEP$sbFW1?p.MO4
%rhs]k>kY$)^DJSM9$L,%/M;BDA\TQ&QT_1=PrI9P)81`I>>U[b=@clkfjfL]C$,'OS<YErHXLDQ#+U)bV<JU9:4$G5^*i.h++/0o
%diP`iQ(-6ofEdA2f:H**`9CTT_S-rlkd;e82HTM(YF'V&B6<^uYHW9=V'5G;Ri4:Kq7>0a\nW.Tf\-$gZ1![i]%P8q`b@EW/STZ\
%%\5CoJGAMgV:*\lF./%F-1s)pr5EX1F+/OMk8A"uC-c$JO"'@.U0ep]AeRc1:VGKL>I/0X^rs]PC>5>G0qh^*)VBI-f5HYj3X%Co
%R;#)i39\FqLS.5t[JmbuZZgrbNk+<5lk,9d\44*ra`lJhaAtgqc2MDKG/r(T.B%1r,?:GVj$A04E#,mD7sf%75V9_8)lD938g,>V
%_L_>4$7#M.P+1@3#]&jKKXsc7>`<Y:+3APWOoZ%^JaZ]IF..t1)XtX"6-Ej83q_O=h#:5j^\k^un,DW+roRu9F.`@lQ4+e7i1=h9
%]X]!*lZ=]9MU?TW])D&^3Ai)$Onj-n1Jir$;Sa`2TR[\;P+n`\Fi&!!TVr6^EQ9h?^IEHmJY+h;O`mX#&SaZ^M;<UFO[62&hAcBg
%p5XOiY1R(].p*DNTf4f<;ciG':Fk3bG&#.=j>s$@RK*!T^\[$I=9%OVf3`t*jVP,WrV?/&@QX)&=.fNhf=ub*qQ!\)r8Hnbhq`bS
%cX4B_r/3epLd-@f5Ml>0+(,!DRpZ3l5JR'SZ_obNro)D^p<`hZpJkjZ%FO!\p"MF/So3kPJ,S^5qY=c2rDA(@bCB<Xh:l",>AM^*
%%q!'Jim#)bq(l1ap7kF_m8%(QIJq^Qam!HQrUT8-5&5Wk5<Q[G&$<h)6pVKMpV050ptJlBIK&o37U,@&Uo"1Js36%BoD'L-pslj'
%]DJa<ikNZe]C5<cj4f(6GNt^sW%G>O^\mXt'2MuLrr<#Yo0:nXD21Hp7Ck[l/g&qtn^X+Q^\b/YCkHjmoD26n>CG82YpJ&@]G$Fs
%^>AlKI6-/4op[VK\ifVS00]F$o2e`fce#?aHhZe5>CZ\9AWQl?X*:c(rooic2AlH__(V7/$@e?;pj^G3Y_d(2eD*5,[\^GPgh*C+
%ii6AhpWp\@+W!,+bN(ZcRs_m+P<Je%B8a6&q`<Z3;q::CcbWpc%g@]SZp'O?@I(=&Gi;PL%Seh8hf0`DL8J-siof62`%L)TO'$tV
%p'ghS'kb"VAS=]?;Ih9tbosF#?@(_m*EJFP(Q"6&ZmMVSoaYbt_>9<f^E48@!GC'm,XsgH$/Nc^B#'H7#>%2*g?$BP0=g8V,Z0/\
%C"FLJn1n$5<7NM#QZe"<<AEiQ-h55NN7Y:Q@'t%nS48dk?rA?c;_n@]VZTjX9/Sd0lm14OIU9-s5[3$F$:$0=Ut["_;:SS3ns@&>
%%CDb.FeQW.%14GrY8iM'DS\fqOpR/7]El_3'J83Kn)i8$q&E]/)Ahusj<Grg1+-T("/17tRRo]-N)?AD.:-',.=&Neg_Qbl_6?jH
%<>@JdXd8//jX$8TZEE!QX!lKu4+0F;,Jnl^aGn\W=Z4RF.?FY6S:*f"`-0h6nT+XRURaRd`8H`Pj`4*uO<ai'oml0#`A`Y\Uof=8
%aV!5\B5<E.^ot0/lDVNsat0HCY7Yt/A8G[$./(jK_Lt'g_rN2rb3S9Ih6Q3P&IlpLS`"d3Jg_dKNjLSZM_pfpTXXCZnoPS`j7DcQ
%7a>CPV(:>R895LB_[\=q?TrKHr^\^Qa5sg!nnks/W"X/2iUR/[>u2DoQ.;!?-mE/8Q<kXC0Cs=6CTt=NV>nUV4KkB2j?Yq]:aTqQ
%h*uBFXq)V?[B^9:-*8$Z*c$`U'C)mraib7_K34&Bj4Y19/kH+P[Sgdr16Y[OEZ.@/Y2l9K]O9<JY*-:,Xcc&kL8p^4>BFX((5Vj6
%_Qrs8+8"_#LPa/bJWoS(2,'3W+f;TC\":"ketS)0pITDKY[J1_E,2Y.6/=(m_3E4aB1_:!W1EN3GN,:L@l87@SR+%I>0/R3#0'U,
%<+G0'Q40oM!@M)^_FlT-L17?/P*eML4K:9&V0,isq6<=J1VFKnQ_/JRInH3)BfK:O%O61^\76NR#Q;3LH%ZgSE%qA#9GgnuW`b3+
%.VWX9/j^i44/HTh.A^5#ru+Tp</tR<P;[Kj;)Sd)$H`AEVNV2%AONh<OlE;B7cV-tJ5.mtMe)osI65VK<BoYKoD@[;4Xuse@H>U8
%38+"#OX_j1EI!!X\Qo&Z^bc41]Nd2WR[2B)*jp'']Me^:UNQIEVX4BgQQ7f?LrN7aFo0m<7tAFMDEjKG,*8^W;mUT5nl$f08?aLD
%JMOKn!gZ4tW;j\goi)f+H=D+R&dKs$fY5B]&#NMll_i;7_(+bhlk&uQ*r<&D%[%@uG_)cZG-R_eYLu\bbV#FIZ;M6-A<.M6h0H8I
%bJ;XqjT^?Yqfk^=Cf\-cANIKb`Q5DXk(!(Lb(GmoW0/K9I7URX0]<V9QBG](FgM.ooVb5\0<`U^;ct'cElp!4eF:`EHZHlN/>')e
%6-CZfX"ZAi-6`[J_k+I_))Hq5M)NCg->/:$rm8tEJTZf3?=7&4J4a"s*#_&ZAU,KXYc\?O@:_'n$\!KtZ8]'h3hNiX[^p;(G&&<R
%[05'?3@88&iU0[9pA.3+h=[`e]p-O<43d8ji\8,Pr$4A*$$?-s#>AEPrRT$M7>Z8VDgd/$'!1!eQt[s/8c@3F9R/2P>9?bJS8b:t
%>9C(g*6YIFl%_S63T'Z5CY?USlQ`9>;OA*:#1d^@1MjNa[T)pg_HS,Z,F%!TXcHVJF;"7N+$VODjjqIObi&2!+&gf;bC8%8QjtV)
%1FkSh"4QoQ491fSoGkNVjK`$Vpo<R[e#e\SVN4Tho`<X:O+-Bs<b=E-&K?hrd`8a@'hI]>`t+MO6iGFlA(.8mL"5A+eX;^r+#%\G
%c'LVsD2I?=QTjhgS<lkj0J2EK?i&n^noG$"Aao+nqN*e+`JM(lfE!X0o<dH)kMXGjLeQGGgAu70T'UuP8b2:tE15bUP%W^p'$(Oi
%J+RgOZ7IY=Eo0$i\I(?sYV%*/lTi0pRoDAf*7@h!:?N1jK;q<_nIO%HOR[fhCs25@CQ"MLmng1^[gS_AqurAVO`8^@N=A(:>cbgP
%X%c\a4pp:%Ga:-F+ISW(N7<P`P8P?tbd%>pi.-Q-<I03&o,TLlYD0#k/O'c7\H>sNAUm@j@6=',-B=J?::/3F(mjUP@Xq)<#0Y5-
%@Zki'5]m2)[9u;q2BVSSR\(!$MPAQ\_bS1%["Oj%UgR67oEf:NRI"%$eg70dL@AasT6qrO-8K_CG0#4'Y/CJ7m.KPuCe[D8Fr;0-
%M%W"XV##'lPbIuq;C\%uVaZU^DCfasI[FLPB!YLS[3101%!oFuSn9F@9=?#smE;fe*-&,3l@XiFC9)5tQp"<C$E"[T3ah2[U`M33
%m5n'9/3`\W_l"LfFG,3.3No9k"E:/:hZlG_s6u\F[];eh'%8-9/#`[&*m,)Ga&)?CDubJ+75,$"L";oDUh0h6n_gIV,#Q2=crK%d
%$6bcrA>l&h;(s;tKEMNk\G]ZB9-M5pegG%3SCASo8>skNZK'F/mE&iY,WcP`MC&3Y;`GT[O@Zp;rc>m-,>Lf;B%2a,>+<R[#`QS/
%g.NjVfSL$T>/(:ro/$ao8Km%ki!@`7%ZEj>D'gNA#J4:tJ7U&]\\M*M)V!;n"[olRcR$(,Yai.,#6G0:"r@ZtAOr<aim`JD%M;B7
%/s*B&GejX)BRML?'l-fYoPF=Yh*^+QUP9f*:cMk,OdEb&U`"M]G$9YCmr-!g-ZqU7454d,^d:P6GEr1>La8_Ni6oTsO9L#8m7TOB
%)RenkO4pCU2HKU;0_Xl[f7#C4#?)t`$4s@*Ms"_QYNBC`V*bLl5I)gg`oB5=J&bgs2[GBg21$C\!HV;JAm&TA4DB>;Kr9JR8'tKW
%cbe.($:GnESXtD!&\QT]h;!=lRum@T!u"&W'o(`%!Q6h,(&!Cd'/+2Yc&jo7'i%eWHX6be;2^jEYd6aqot0p(00UK0o53WDJX0NX
%kI*.'6XaSh.FZGLo9-^9_u"o@bQHMVD5`?7km]gVp(*DrR,jH/jeCgS^D+[o5ZDWG'+]k9'>Vb]KKK@*Dit]Y2GA1;WEPGM<dq39
%0VX@0'-2+daM0tl/<D4caZL!Uk/oK#?D\lk'r_V$CKM,Y'm22b>QOuqYNTAum`M^6M]*AM6d@V_=hRe">+_E37-09F%'.9s]T&R[
%VEc'#p1lCTUhZ>J0IfK/:9/UO9J9'3'NQVkKh#0$^FKmW64R_RITnpopZ+HZV`^s?`H`OP8JlauKOCI_ELN62I]Get"m4U3;Xq#-
%AQT&'.Qa\BGLkQTr/hG7aIm:Z_-:2l#8Ng?pU*MD@#'T01]o%M.EL`=X!fjD\3]p>=HX)V#(4eDhB9pUlalb@l!;efD6T6!?l97)
%NfJ3dCnp86)m3p_Q)qW*!Jh%D#r!`+?lgT(8(%LqP(W7d@bK`!I2;d#$*b'+9"%k5U.7;B.?%U!E$jcpE[3$$^qE`h-K[n1l*L0$
%3qTZ%Ohm+QVs[F*!;+%b;3*kMPNn?GbCj_1a\+d)%YM&4d0LG.BJ^nR$Eqk;E*@qA(-Gl3o#DL[HL7L)CaRA_^WH\B_5:6&Q'Cai
%>7Q*Q@PNepW9J=\0p:2qpn5eMM\M`uftgS9"+uRmnptX&C[gB_n[g<s6SbP97@].akNjk]49jmUhr&N<SbOnP76Bif:O>+s&83V,
%b8'HQ4I;C>]=g`<&lW)]6c=06Kk3FY_#eW;bB\>Xa5-8Yd42?.NmOsX@EaMWq_D8'H4*/#=K!\c<!6L<h+m1Xj.)--`J;lB4=XU4
%O;;b>:;`:Ggt]*$k`k?D$GG#nC742J8N:*FZ<J[!SYYmUn't9Q!:oGdkr,aW$RoRXrJhdQrdMl"Qo49o"*P;bKNF%`*g\im1P%ug
%(He3!p=R^Q3e7;\qI?j9"=[^-^9<>Ci6^C7qs5StX'.Ij`lD(BpK5D<@6o__YR,SLH-hB^:O8ar`gm"l:kh6V/V_6NMS$*@;O0=h
%Al.lcePC-fcn-Xhl),/<i5@$15EDX+U19]1V[I4Xg<r*br8.XdIe]opZ$:h50MH4L0+TpbS\e2"g:g-H'@a$u-(2Fr48jhM6R%OP
%@RmVsCPMRO`dB4bS4j;NPo3)hS2FJ!/;gE68Q/*dFZ,J<\;sINd7cusCt#Ad:AK#E2GAR^KGQL:B[E^(al/dc8Tp3C88aXlek6VC
%JtdIp<,qVTrA@9sDg9^-WIchK_h9>P6L"XD;Mc'Xk!*<HB&/A6ikb>=$j^G^=74,C28#rH.MmUiU]oC:f/t/[rc'NKWlA'C!cSju
%'pu.B.&:sL,peR^h^MgskPUGZ'>tu[ll&Ks62$1mBr)aYm,q9LQpq-+m*aI?']#XXiMjmcp)Mm.cuk3[[;\7kK:6_96I@'?<bW&4
%k<l=PAk54YM:<tBEDBh7=)=hXG5"Vcb.a@9P"XXN*-u2fK/KC&GtC9DKK7GGm,nS"qC:QcLX'fNB4A/&#?\AP*@Qg5ji.iWLk&jm
%]IK&Ad-F"FA_H6DmMZVEKBTu*A.nHcGh9f,i&GiqOn+DI)/"c1Q38p79\W]=p"e(R8Sk.hN!Q=bCh+'uje<)PT^<0p_G'%P/QuFa
%$pKosR3=2]RB9Lsc%2(N=7ZgY+S87k@r(M[Tol\ik(Rd#IVs,_0Pb6?1*M5T19h*u;?e<$6]PXKjANG5Ur/4sZlIoR;uZG23USH`
%A'q&4]IHV.9W-4R<GJ]ES003Fo.ZoSHE@lLj(.mJ\;9M*?ZHs[Y)qog24`cSi)rX`Nlc_4OF&m0J=4)JrNo7IGe:eZ3R[IS\$Bc$
%:%Y6U&(jIY9\;$!e?V7FpW*9UJ^+"$'+>r'6Z:rW8u0SrXXj*K<EJMMG]\>[Gie&A^O8/ph`j8PrpP@5I`YhfIZ;)2RU*71^%A4O
%qrLn_n?P(KV<Q^0Rr4jAmjDldcMcAoe)tZKq5[Tc^7&DU2a:o$l[Se)DuKPd5+CGt?`(G20%jIT4Z'(I\LAPs5O]8JEKGPcFW^SM
%cb'J!cP.unBS-,%#HO%Qf,`p\!t(A8j<06'FU*KCEe!2(br]Tjqf8<8fserMqRhHXNfHWM#PD/)^\rYO*<a8-7cpm9kej=)0fG`]
%,G7>T0@YX%#r)a_>q'[H@eG6SLMa1WQ^RB&5P!<5cL]\>-d"j:CcnCli"!r/&SPBZMF)3*$'lm`LI%kYH<";Q=+oQYR"OL7$RWEs
%qXH`7qj/s,IallRBeb,6kpNZAJ,Rr!ffBo;c0NiudFD@[G5,*HC3g!U-bY_RR02Jl)j'jn!0N(r&N\:Wp`Ofq]Oh6G'rE<UfQ^<.
%V(C3c(SJ?JFOGbdZ/WOLT+>%_"nO8!D(:Z!@l3VLXua25T#)%,3`'J-6?I:dTE1E<'Oh],3b(o<.K/E?SC*u1\@jVbBJ<Jjh#`mV
%CDbl7Z2URUCkEq8N+F'C\TJp*IOb5PCIt-4qc&mI)RFXVH#&l0l[!fC,Lj#_]2A%dgMIN[]j8f/Suf"je+E.D3LgZ85Mgh[cn\>%
%r(gf9@;s"?LbQ-Db9d;*7br:>!C(dJo/:E'@$#$P$iHP32u(jO)r'N(5GB[Cr7<8orjB\or[Im$G5o=cHU[hhp?.\$+(FZh*b^&E
%8,HZkdiM,:r"'CH"VC\$L>?)ZZXHt>Z[crpDO,IPF%3in[f>iT^BqD?[^Cd<IprB*<]4DfjX]TqW4,R[Ep25\5(-IjHs8%?B/#)D
%N8%Hp3G'J"pZFZW_4FEjR3i@?#9E1)V(2F/b*9*IRh2;jOq'.*$lEg##GQAo^>sM*]A3Ma<T)'L0?>4j*rYa(2h14mcbJ%4:_PYZ
%@sR`SRcA=7<*Zo[1<9"+GjilF>OLA9r2;\-[[i,62gW%HM$(p@VS<#.?"!E+cX>M15t9]0`T-GO)./?Pjo`GRhdgB9lql/6^?M<:
%GNaB$FFeuN`];,`G3MnmbB-+i]9%S-=VU3*+38TTF)JVnjTO)jG3@Bt<qY,)7DG`m(0mM^U4"#5,!:i@_;RK?GV:K/(8Ss'4UVYJ
%$(?7(28LSZ.[C#*3Bo[`r55LAei(->]&T86c$oh5(kNW5oE,;1*MH#=q)2Ole+A/t+4YC4&F+qk]T3C)@@CX<Ao'+c9Q6gWY<fMu
%/squYRb.K1J=XVk/oPi@AmQB?UujB.`3(k1RSf>IVhAT_1t<b>'1!E3GR`>uY\4n[p2ds5##jYa=^s57`CfBTI\gNOW2'A+2Ljup
%pJI>bBnJ?%*dRitm4/$.I8XmHSM[oQdhe5NI%KHCJs^Ya[bt#YP?p'2n_7mu"o?AP(gsnG*Z_;P7]@%5Q;KTWou2,t0\]!_*L)%D
%^td[U'4n]!C+S,r@W]/eV)VeE:s&Wo4)FBb3N-BR.iggjM_QNbjo83-Y^<-*8\rS`%Oh[X/.L796$E4k>mek5ob5`kk"fO,L\<<!
%`EG4$r5Cg)X?ZT`/p?^&T>'L-_1B>$)U3;Pq$5NkmVSn>Y,<lB(RDjJqq^)05C'(V1p*H##=;3+`)HQN.qS5)8b*uMBG8d"BBHQ>
%h2$k^8Z,sJ5sZq9jS:)*9FmudYeBqOC*ThaE-@harB5`<9RaI'&g@au<q#C&-4*>.ViU-/=?r!GIYhm3qXjI:n*drF9DS)?O/l3V
%eZrhWBf581_0N2<4VOaL%+l;abH$+,[;r_B9kn6p-ahB=6^(\6>P9DgDDplV8mo,':!-qS@P-4dG\o-OA'6CQL:4HQCjV@P3SX6S
%]s?D_-G=H>9Wst'H]r2'g\)s?E9^M+(8q-bf_Er&m\@X#dKhj&Dea^Qp*Rb![d?eHjYVOc=O-Mc=V;OiP11b`F`7(U\*g5)H-E_?
%<OJ@!HhUkF?I^g5k.Q$j%1C%3:=b0a*OBJ>hQ),qRO'0+5,s2&hIoZIn1pG<'[A$h*G!$NM=6k#qMApPBfGUN!k:DnNNIU&?Ms&7
%?>Q(la#<PFfhUj,cPtsD$fJVlmd8MrNEYRr<*PuoIX/?oRJn%)>MfJm>Mo@A@I(Q"lCYAaDjZK=WGcgdcDJ=tgG#,n-?ncllFX_(
%7rbu_QG1Jog>U0,C8R`IffE@6L;.dfoM(oSZW0^0e8E]<Y[RK6?o=0#DcDACh"IuD9to33c8YQ&]1m57[Eb08>%]qSjR&K)I$:aV
%FDEj48,$Y4qU-7i6())Z@lH>1m!P"tFgglN=6l6cmV8;ippqBHY1C.uDmq%BXaKDK4Z>I[Z8%*)n'7F&P,i^`o8O29)\+3:Z80Y-
%Qu!E0hY_Fk`?nsX7lBkn)9g&1[uBE*achR"o!Qai^AHCO'@F^p%pTNjn+F*fAc(>Tf7#M_lc6F$h:Y<a,YpM^]i2]7\\%b1-a/(q
%hUWdrYW'*\B>`Te<h0\H$TniEo1LFJhS",_4;CPSOJ[k=/RRY&6[a2P3,)t['#n&q8!LqZOqq/HJp\(1H`NKcY:lnhhKcSXchFih
%*J\F6"#gGJNT-XE?Z#?cj[+HEOF42Y_P!/[67j%e$`VQ(.k`*:#Z9uG=gAbg%<7iO5_Qj%6<2GPA'#sC"m!=76KO%XP*hAO`b]>?
%[%+!`OCIJhlp-GI_a(cljk!h&gREZMOIHV`/YcRCf9`5hV#;ehY<0pe=H67jHGI83T=Z"d)eh[uKT;i#M&F&`/8`n4T84Xb)ZCE)
%Q>AcMp`W)1$pL)+A,<nng@)';?EQ+%?H5[;_Ki*:D0.Kf\Z3R6U(kWPG(:%'@7W&6b@cuZNliL2X9XO4%1NuW:6QhtWS:QQbR(j+
%E_CY$R%\RH!_oWEPa@*Cl?c3`@r=BZ?rIp;>a0W##C]DnOie%77FT!FW,n0=IeNoF&h!6ng3QUW>[jMDCfk6I5(60PDSEE$-07J1
%.$OK&c4W"dP6k)WgEotCFi\)XjPMR,mQ'.i_Aoe#WH&06B@[Y\^)\.W832<AA,6H-j:9<$jD6M!nPRp"&\6VX7u=8.r-#'_2c&pS
%/^3q/!u-)mU&qrJ!3:W%Q&6!U(SHS%?-E(fP,&+gRM0nH:eqd;gVp2QGTb(24uaQX8'u$:2P::-/&^-OWA7ps#GrZ7@0[g2)"#%B
%(<i(R_a:fO]K*>G@gM?+md500pG&U#F\_3-^Aou[!)#&]M"sYnaFV_]/`4ZW-g4U:+51g]L(PP0bj.P?,*,(r]/+=K=MWpS@TjV+
%%;a\(-"^8"kOD%#FoZ,`<I9spFQ;?ZA<'m6f9cLW\cRrt.0Td81ls$7WFCF9q@es*a@dHBKS@Y`A^]:0pA^O7&'/u#ms.7>kbIRB
%VOV$DE%meKR4b^3JeC81XF/uc,6iuJ(c0?k[6qXrck?O%KQC.KX2(5`_VR1'EeJ^36*E]A*d=C*>W,I)`ruif15ZQS8!,CUQIV'$
%"sX:.#Mm\n9K`VXZ(i\K7OJ=5pW!)?l\b,k7EjqZi*?D2=9ZACeAWb0gP"tZU@V-YB;mQXIqqE%8W?1?%p$#*@H7V,Q54!AUKkfC
%Q!q(PYV[NB27XmJW['DG9e^S:+P-\$c@KERA5=7DYme@2#?;QAgCc@/rmN,u:.:%Ql.`N2&#Rja6d9>mJ=7W8R.6en\(@O!'^?Q:
%,7Dm[>ei;D]NJ!D(i)0#UDKo^R$:?PZAZim7D7e<3"I+o,5;5(BOHAK/^&^^_r"Q&\r#n!>XLJC#neLtZ_Rc#@0;UgMM&<."-D'B
%Nr'KkDdocND%t_JL@5/VR#UP1;htt4ZJF75%dpYK#57N8lDNOHeSlZ(]m*3-`Qhh.PR#mt4ET]3G,pgrd=J8$d2hcl1YCng1qV\+
%WeqOJUSEXVkU.**;PKk2BFJ082E;G5+,]-3:iYE`,*1^a::ggbm"rl&3FE,b':\0!K0dBVcIUAU=/Dj'egJlkBH$m"s#0GH=_N+?
%W-`IcnKaQi,OZ%=WYDa!`"bohj5ca8ZX=%GM`e*qm`+5H)mgWblTrY)O6D@!ORF[>5u(+6J\rVD<V^U&e7b;*=/c4oi0;(i9OBaD
%_*R;g0\fOo4pcR@LlBW^0Y:laFJp6GbZIBOQW)3lPNDXT^.ah65MpUh*puhTis).>MnT3tH,7orM)+IKVO;R%?0Q)oHPJ%ZiR(9@
%+(V_-Vna6mb&t\W]<`Sg>YA5,Xu`Js`%qh@fI,pI-YYpEEP'SDJ%IY3&%^0gitl)NI*!cK>jCV%-bBZGmL(`'2"?"ZQ3C=sDs3=[
%3)t1OX(!3p^0e-ui.9U)2h=QmP3f"IV0.MKD@J%C(mg?WM9d(.=oX#23pY^GQ/0F=n4Ak#$4]P.QaS*%NM?p-^^<2VWQP<nGqDg/
%^7SGn"h6n59eEVr(nAcn#5.XZ360a$nF'c$JCt"`fjSa,]@-f+@;$]1gWOPo-5BLHM<.buU84Q(i3>==0BUSI$V8`YYTLq+$I80"
%#Hj'&#sVt4[$-DSR45)@b!?7O:&A7hEg$9Of,pbcEndg8=596`J<A`gJb6Q3r96.W\B,<ORg<dA8<K>boO4l"93UcN=9%dO=201T
%qTF)T^%k?#=tpWT/@^de"f)>+.\@>13VL5#C2NoFr9X.#LJNBjJ%p@'g#m:fq!)5cqj6d.b281pdn`1)o&&=%rfc6hhmX-kkHFm_
%o]GnC/%_Tqo)1@ILAhE`L:]VqK:^=9pfA("<tY(+&bK-:oHT59-gMK>i/a3g*oQ?01S<^M4j5Y=g[]@Z6c>6[oO[bu/aA**@3>(.
%o=_1mW$d*"72T(A1bTLQo7^,Lg/4kQ?;QE=L;8=sKf.!m[67&3j"A#3#e_gdRo9J;r?:h.`sm2G*<g^Unl[]q+VQr6'FO.\34jg:
%!/khQVsM^`[[%9r=>-^M"(89IoPoN(Ek]$L00A7RY"%oZK8o_ki`"#K2+@75'V?Ob9V=H.qDucm57b#tN>kQQ%'p^/Wcps"J:[M@
%G43^3VfH-jY3<qaaR&fF'Dm$c?;OM@X=+@gMNW;=-L.g3UF*LA;^[X,LCI8@@N]U-I<C1sdj^a3FFk/e?MfJQ*u+uo?K/.OPED:4
%-D-*"b$14kE[HA!dU`VQ=WZSP$1Hh9g&$N%Ze;Gc$;4g'ca*9^AG7I']'f4Vg0mB(^bW1f3$PH2Dd;T_l4Tr:BJQO&Q[S4'6Kb;6
%/u,4BTO!%h)/]eke*cnqg1M)I>G#3u;_hgKhWKFCLY(Kq%A(-A^'a@WJVU>qI?lZ4hsU1(0D%8u&=O<iJ4\++M`EjQ7[CFU,,4XY
%ql!g"J&Nf?4XH0!Kn'"a(=AuM5u3:u?TOlg`3oZ%knS/_.CnWT2iBKX3lu)OP:IiBXj%PW#5'b6;E<b9l:H2gPeBo%-=u4R/Y4Md
%IbFb&R,G.E?XJ1p;?TIh>E^7:r$Ea$<38k20c=*fp*(jNc.=jBY.D#8'uJ^Lib7sSgt+-P0TK')FkbgOGWBo\[TLW>H,,NPTBcf4
%),j_SInS[qB8+k]H6m`LQ8R>2T=ALlM@T2jQ@jFuP#uk+=&(I6VY-c+F_H\:cY1Cj'%B!c$'-6Er:SeDaO7e;q%qpX&X^ML`+gFn
%AqXrc3lcoI53/\XomkKl2Jq('C+uXtK(X8$.D]rJi1B8-IV;A;K4&';;hRhCYu#0RoWfjB39@#=iQcM3VKtK]-*E>[mL"YMqh5se
%8Kq26D/'[3nSuC!5>bG`m)Q'n6WoZ!UsgJu83G<KGb:A-LdJQ8q]@L%-#\0#$QMqq0?=B62)`N3Um5%CCuWXs`_35kTL)Qm:0e[]
%[_VJ$c;K&B(9"Cj`sl'<?uBZ3$L=S2WkWR/jLuI1NMrb"U^3TK\):H4//\L?T$@Y^\EQE8AW8=RcI8Q.WSER$hoOebJREX&N$,&e
%Y9u(&]@FXqe?+ri5R\fP?tPre@,S4'lo968R4rTA/!KZIph>@X"HH@L;bI/A0@F_%;F'l516>3PJ8.kd?J<c-k_]*K>>*3\k(*<V
%h"26a52Y.&\Y;k9[&F9"2E)9ePcO9.7eFT9q2=J:0L?khhJ,#/ToU0RG_n>P:NGm-m%/kCJo9CA/0CMg\gFpmmm=+fbf<GBbi)J^
%&[@sBOnfSE`a<7?l@6j%Onfmj?=B,p"gN)fQ20g9=O6"Oo+=>.MVhu/`[Z[Bk!S$$a"$[t9Rh4@5LK-FG*rm7F=0tm95K:T+h)p:
%>eA/RMp-)ECYSP!R?-s*K/mIkK+:`Ebq_N3#jXF;0?`;uo;@;K/[09-/k*5WI9X4Nd$HUr(89'Vi"r(?S)tpeAMo]XkbDZp9WQN1
%Oi:_OQ9r>OKlh;NqDM4.<Tn)b\YkA47u\%D(u<+oN\*8LL<rE.-gTcp(o,,1Z#B+Yp//Ds``;@a/4L\a;lA>j#^kCFI`<,Z!j%/B
%DK%be,3(KG?YjDmO?R8^]u!P]30E3MD?rN.H'S:cX?Qs3O*iYZBTr@lQP(1*j?HLK,-IZ4+XhfQ!Ye\7aLgXh\F:MIQi2_-$k-Yf
%/JXM5A_:V`'<@s%IIgUc+p8i>]pn@Yh0Ti7T-\\M-!V/#RPC&>oR<#&./9,?If-Rh=;b@3]d7&4na*lJlH`6!T-u%4k$@]@<fZ`!
%ZfIDZYNpI1[.)6cqb+`qgI6TXEUFMVfag_?SSaSWa8,e>b:<C#3Lm_JT,,_\^i%c#(jFAG$[39_>iT7Tr3@(8mBUHk-M_d9Ck<`W
%UZNr??PobPCR1A0#Xkl1m"4,,BbC7r>q?9F`hY!79#MJKZW)95@OtA:p+MsCa<Wohh9Q4o;_H#e9L(>ae$!LN8dT.1EXUH/7,6)k
%K=<W;.CLT&XeC?`3-@4on/0+#FsOjMN!6X1#q2!qauQdr8)]^"._tCSlff.5]"k<AZ5a100ndaEcD^^nNW]tAR9F"!]/[I>`U-2E
%#:^\37Fu!ceZs'PXDO;]gQ$pg#>D`hDFXc`)1%tp7fnQ\+V/,Ke%mfZ@65+;fT3l+NWd/!P;EYhcao6Q`=SK922rt#1cf:*:B[AR
%#g8&9(cLc"pBL<RFs:=G]rQ$4&R[ChP&fC_3p-3"S6n!]Ur7=9&MS:F>P.^m8!^+o7m`o-c^4Gui5CtlR=KB>`;N5o(='A(dd>mp
%I+[#EY2%&,js!UmTeLD>Fk`_j:lsdX3>KVr<8;LDTTJG!*t"g+$@Y&NqF#20!Ou-,NDcMl:`pS;^k$g9=:"@Y%Zo%Y[^k(O"3tuu
%FZU(XW%eRkbAs2'DT>RrD`\=@I+lAli7[3?-qn&jn[A&pfj[-_7fc<PmF82k;1RXJ%ah\J,R7@B?EO]1E&qaic@QNj?/R&)_gE4B
%pZXZ`FLsK-5Duk@%IjH+MtJW/=G!UN=jUOmdrIU%/.Co0]OIh]=n_.^X/`a[_@3s=f/5/3"(4V^BC1V<-!OF1"&P6OfP_!m0Jb:]
%+P'<ZAVFNU$t2@,-jAquEfd8GS]all_+>nj]o;4%mO/>h5$@X'!F8jI0:)bHXlN_i0fW?8fT-(EcXV+p;1QISRMX.D+_P<Sb>I2#
%!A\R`JZOU;*<l&Gg"+dBhFcQu!aE.g8\cVnQ\/]"$-Sq1q`,d7@6Xr7RZTfq*s2sn29k;LJf"mYILb!]IJCtd.dnR\@64lOf-R<m
%0]3NZ(>BCYSGQ-,bZ2"9>iG'<BT"::ig(5Y]SCMhSN;HCYJ0EP6A0$tqrIhIab#)-4GUcD/1ZBihIF;?FSP)%VaT.ce.CUPQFh\W
%lGksrNpl?W4u>lRXGKTOK#e(jk=F6^QOo[b'h4U+BT5g24"R\rl0b%51i24cWj">eLJ,p8Dj'AFk/Oq72E]fDo;,"f<S1IXAO:SJ
%&,6P]]NVdg>@>@t]bb#oZp9>I7H?KMFq*nZ+nJuZlaqLG_pdF#mnNL8KsaLN.iA_(CU+CLL@Jkmd\7YOm_8M]'#!c8U_AWeZB?Y'
%?;`I!jocq$O+(dgQ%hZ$!IX!oi+.qiWR(BNk(FDu`0Ie:#8/1jXU<#+`s[(+'B8nm#CIMS"l/!k;Vri:R]1:s")?S\\p;A90;!kA
%Sg*7ljW?Ssn=*Z(>"=g<KZm3E+"@^HQu'">&@\]cA8-Y:;j6A^ZIWO8kFaD`^4k2H"r\`$5LL\X,E<T'?pHJQ=YUHGY.pRU2I#.K
%][=+hfWT-:X='D734d3goQ&^#ZCT;(Nq(:WF?K-'fGW0hHmI#Y4C\ZXI_3GlV&'LF-unNdIQ7^C!HF^4q51l*@oiY1L1C3jKP&&+
%;ka,N]*T(^6?Fni&bUlos7q3"Pkj))9%M=jC[3BuHe9eb*G&f)[Bkq?F?,R+.iQ>)UMP\!.oEB'S:6ep.#iR/VL!'#n7%6nBSZdR
%(V6p"V+4!ika<4F"-T6Zif5l*[-Ri#eM>r)No7'$Bl9Kq7T?rl]0+6?N:DceI1GP9b<EXfq2`-*qVD@_P.q:!i_\(:/4,0r"<=$W
%)":e"l<PeQA<QFi(o!mLEjgP,WD2om80uJtV%$nH17r02(p,U$iJbBNb$Z5Sr$$_hchV*Vs5h]oG)#e)rt'tsD1!![TRfXSjmH?a
%TH&5`2F#k=U>&*I>r^[o@Ks!,,/I+Y6U5ll@%#t@U;3X-66?]<huhe1],^:6#=0SiR-!JV4S%`\N1^)XLO7l\pnW.3ESpp^CKX%4
%5&/V&n<E@`H2k?T[_$3TKLZ1H'#P>//0YlUm/j-#LIA+;YCm,(\?2b'p0@KQ?)4.CI$D.bq'1s<LE49fs6(@rL#2.]/kf*[^;r%]
%pLm"[HJ@GjSai4M(7o\5$j'!e5.ZEG0S%Lb3aqLrG%iYJmLZl"GU44lin?Feg"Gi2"=.%Sc.Kb:/LeGEr:V41RT'i[f<Rs]3X,BB
%Q!Glb"52bDU%t4"FVcDZg;RP:*>Rh!FbQ8L%Mlpi^ok8]8/'LZ(TNB::"jZmXR4H3_9'ZBgHO)Olun>[rm@MJ6J9&ka=la+MH8W3
%n=@[]ll-k('gu$)iWO3OFV,uTK/\e1n!Jm\BGDo)DO,5miWN?b#LLm[!j_bW:2"TBN$Xn+#IJS%h!TRc:I@E6l0o85\Hs"dD#i!8
%<8b!&7pUcTTBeEP'*,+(T(=.)kQ3o1gTcjr/lT7e>ZkSEYTtCK;r]Qhem5/WC3j,Q$D=i12GCm`K<Oet.6Q%9r'c.OP[*c/5fD`r
%$4o>_j"<RsB3A+Z'ehF\q!*mYBLhIn,<RP1!X)VkJ<Ho%#QjNjIc.&/-.Vc18G`kE&,u[+Fl-6)Jt4L[&uEG-EoDQO`Z<g"``"+f
%]C5_i.\3jNO*F9RPRS#BS\%.D82`?YA$7FS4Zq?IE<P$eGB>ZnI*aIs)dr%SRrA&8r5Vi75f+Cen@L5;:hphXV!l]a(oGgl_WRBS
%g4`+M3M"1f+X%IL;*ODM]D7^tQsaZE>%C3WE\X+R)in"/Ou?I+E/;u\14;q3X2SW0p?=dN)[sB7mFZHkj@KsRj(4?8T^=8W/Xnsn
%d=O=!P<dI8SMT=u$DL`X(h/t4hF.t;pG==1YO#-!;sQtF[Gh9e7koL-\b,s'=[_N9gHY%(Hp&:Kpc]1Ict3nYi++eO[D%s)*&-`\
%-\?jj's8o7_FBpH/c.Z>iUZ'XF)XcT-?=l5^Ka_&n0(dt^sj?_PkNfEoA#IC'^WFtNP%!aW;T]&O@n@XaYNEB=jS=BNnMii4.KS<
%la;qCpHEcSdsLnn?S=8QR/Qm[-6Q`DB8t,Q\.X7G"$,$Q*-`5*#smg.QS'?uG"QX9YT(?YE#ZoohQ7@%\m!<oJhn%f;UUmA\4m6C
%S4>XIF:8IIjJ,A)3G-Fm2a.3J$V+2D$h1hRr)(oS81BX"23:>_*GWPg=H/R,Hbf8lM@49P4UfS_6Z3:im[4L,f26tb%fEIq#2^ls
%)3PA$O(+j.fdP^>cm<fXg@`sXB`M6eC7\2Aj]F4".P#B,J?]i@Q?SkW9U\8CegGEILs;-00O#_9GEG0BaD^!@4`gk2=[8n6U3[%^
%oJAtD_W=FHU!XMNI)sH`d\(Bc9iL?G9[W/EG0i+VhNHK,TbL%p,0MQ645f)CI^.D]I1`9h[*#s^#0(dsDsad1659tD$o8OL5oY!c
%U'j&Q:7']nV%:SIrs[.5S:Y(G%&fmljX@o9DS6KsOqOAfV#`\-`)s*[Kh;bOm;[_68LQDQI=gD[Zo;Yc(`PjVc$a>/4XBY57H7^?
%6Uj1oDhqL<#sTMkgiEi=i=("YT.>lQ%-&O6cmBgND/Lb1M4EgRDk,[rOTTCO<W>p\RarE_06mJ)o`QikHXLh55o5e&C.XLt6nr]!
%*^^_8"fo0`Z/u1E2K3hs/T?]N'JQqJbR=`U3cunrVpjn;,nul6I<#Uc4!cV&#r:.Q9AM<^:ET5LL-"gd.1sAtPFQ<nE^5!-qP/]8
%@AiI]h$$(?$mT1fGh'5>8X-6jTu\\k+HLIk4I[7p?joe&[`8R\Fs3uj]>CJ(kA>+9WBB\nXi]d+k4D-6/8.@F*E2,m7Xd=0/(ojE
%ROWd,r/ke!%2_`=V:U==R,)Us#ZZEHegDE8+*3KoV3n)E8Ek\iVRHoA>Hq6YGjoro8uTp<Bk785@E61V/-FC!q!JWq$lTLIZbtQp
%L:EMTW:qaYBR-P>'&^Ff/h>HI,F4$V$BHN+n-(n"FbTplfL=4tmjmaE2k4)E]Y1M>Z@VkFe(,FNH:X1kj4Xsq2Gc[<+*Bq%2A+C]
%9/a@D9!5)rb22j<"G=J)c@Z9qf\CO8+?rA4jP2-4M)Z"\G,S[q"n2lZFDcaUe1a5:;g0,sS:j]H+8".h\!,!;M&*JS'>eU(-f_dW
%Ut`RkqU"g$U-5_/Y:QV'AUS-%g9jD8\;VPTlk'rRWJ<O@gPPBBm&W*$*<iuT1qp$tL0_Wf\%*ZlrsfZ`O$97T;QMA$)Otcp&<?G1
%7iS9"NP:RRJ&5S>%pJL2^hnjmCc!sVm*DDEeWpc.G#5$G%b(`SRsR(^],pt3[lLH`aXNN0^"g$3!@(%fR?HW5ljt>JJV;jCP12sr
%B"dUu`s[!627TX]VG--H/]H1f5-T3_bPgT.-bFb"Y=*403@ID`mCDi06Z(>5i^DkPA,4DHjl_tKs6/3MC,-.8l9="nAJR.KHj#=&
%CkI_q&]J#[)\HA2?O%?)s0tE>(qKVKH`<FI]FcW>g_ts*m_WP:Ru.^=p@:'A[[M0IpYd3?48_Mc^ut]u"jktO&K\B*ZdO,!$]7#S
%aW'a0!i&X_$HYo^gIn,hkEgRX!bgLQJslSUU#0"l&H<u_kM*eMdh4c!,%.f*I)nW#J;bYtRdKTZ0Nu,p*hS[:5FqS=fi2KJWtUMq
%&pu@ME(3##O&P2[i8?1:#^.2h*TbAj)<L$FoZc)(q]Z4.U\Mk)eu7S]h$Si`0WYbs"/,N_%MZjW+dA04>(+dum8.&>O1(0iGq.?f
%3^/P0T!o7Vpqes]W!'(jFW&[>CINZ[!ZH:k:se-Rg3alTC.)qS9E?/Fq#Fb*3D`mEpbf$,S@DfD^@ZFS9nA[?Aid<*9+(-Zi7KK5
%VO+]pnlpX4L#ETQ_m)Vs)%'"*35]3fb2'VWeP:'k[9p'hl6Qm+r<ZV59bTtZDo3QP;:a"q)PO4HBOV%7Ht/h-el-c`&@5%T(kd_d
%e=C%IAbA"[3eKZ@0"<N605[Or/:Fd:0k#/SL/Um(Pdq?XQLJ06'(5QJoF*@^=_([*Z&`16+p_%"ORj>HP(9)Y._R_fD9\L]qN)n,
%S>b_[9Ne+42c'?_M**>Cd/oi<S8K%2[.=I?Y(.[#53iDa4^VYHpVdX;o*Fp9G'f&Deu9)_(tFi+?P's?F_&cG<h'F3<>M[l8V:G]
%"MJ([,6ERA"i2pl>M2Mpe--0gaFl&7LIB'qeYjst;/s$EYWh@GG*Ejs9'I^P\S&$@@$i7n49;="r]8uIAHEBO#JiCD[dmk;Tnj,B
%2aE1WNu&EAZ,X_FVs=L'Q@a"3;j3RC..W-!$c<U5QUB:n9+Ca?QpK"*N*a2Q5+s8s'Dcs'Sqlo&qu\$k7i@V""LX+tGJ[*t%t7bl
%#iEN,^Gn7qF^#A/gi45P8a+fD#5-n>\S]]pbm+Xi:Qb!.T1,Dh3%Vb2@;dp--leL>QZ`U,%2$lT`]@K<)p10(c0FP6:b`h+Z+QLR
%!1pS@F?0;Y,p/WN?/k/.JaFO@P@d$l,)Q[KjYe2NYdh*AgeCQsVoS=9jk%L,LEM@g%P>VOEugAic`*U6(.RWf;/'IR:=t1RB7`7d
%#FPa3=HaN%@43PRC+_J$$4r-7\Y&%1+B1,<Ge5)0&t90*/<u)Pr.FYZa07sH9N)\#H*A>SFp0uW735r$ET'$I)HF1I5_L(mVpK&d
%K\$9Mp+IW,ki=utf3IoJs6a+ff3*LpYkcO0rTc]+r6B`[=jha?mrqLEich4*%SaI*<E@LmS?D=A+QkM(ej0@d,QNW=M[mj0L@$Ch
%C0cFjA-6^1am"06W8?/_Yk?spd,+%+(G5g)X8]72\2/<[U&-oi5upAILE;`&pc=XheAQlWG#eObM-=e0h3@q[@K<4\QH=)RB;@hq
%MgPAl"a`2i+!k'jX1Rp5V*n&3?28F;&'-l)V.0>OP3nu!PlD;jeD@)#\+;aD;$FO1%LCWA9mRc1f,pb[94E%&K@SJIXS`CF(Q2Lp
%CV`AW47i=]s*tKdLQ2HG%/#Ele7d6o(ru]k-TEDTKr%?J3)<B$&^9*ea$'@kF2T4EO1<G9KNamBfi%.?,i$RL+O/W6T]J+IqU9B>
%1hYFFn00,W)c-3Z/$Zb5,Vp2JZC&nf4=qaJO#dsh>=@so3o:a9hBomrAR.^&k[B/cVTnAD+o8/,iOiK;c9lW\$Z$rC70[*b5l+FJ
%4V$)0#Mn+q^_l+.,QJYV)FX%2;gI6&EZsm!V60G_?&<u>ptP`VFPU`%^1'1QFMt,(3t+ajm_HifhA!od<F[1,=^)A9Ep:h-=@";a
%6^#EE#@WQ&&n"F6p:#BIqCo!&hp*O$0SPVLSFJ%`DXKEmi25JP1@5H&V6!7Qe[/$A!O5n@pVsTm/:&6jFQM\a$'OpX1++VTPGC4h
%rc<](6X+HO)\_LSY&-+W%K(IS[HlDgA;,]7cbY<+Ctb4/s.F?_F=[Sr7"o*3HSESFCCq8jSRMI(WWWHr12tuIhA/C+ELK$GJ3?#0
%[o<%7jPs(\A_meB%-/9dGAiMXYbfcl5.qS.;n9!3Hb$l3cUUKf[9D(2Afl[[bO]oGdm*?SU0_K+3(5fUOjY<j>W'NR/ecd]N[Vnf
%-Q*&]ZW3ph%O[=?-rdAa;_bA>8O"L9nam=8Mu2.UDQlKW^A:OjQ->m3C[37;Z=&dN;-0l%p%1NTXNL?^n(U(ji'%gCpV!S(5hdkj
%^4K3HD`*-8"j:T,b!u=?SI0\/S00\'Sqii;eDk;L[/*I;KQ(Cg&[u&>6*oEUgaAU]\"Q8@CK223]G,*^#71Tt@(B=G)eGZ7kIt%0
%JOfK*f#CVTiI(u'.]8k>R;3m+3/1rn3b8a+afD!5oRO^-UUH'AcVm#3TdoE66^Np8;h\s`SRCHp\.7eb(mN5c-98V6<&^+\faY4O
%aaIpO"N$`rm=\cn.`C2uUU`o5@`Ts'$L(61\tCK0Kjs9eY*V%!7o4WN9AideWgEg<"f^-QjN]DCGJt=m7K%4Cr[=ZD\$_L6T!W@8
%ZWF`pF?68m<J7FjG?rc_IF+dkUQU&j4fqk/QZcK-TNC\Bg8_j]bYYOeR""6:rk9_db9"rWB@d]P_Qa&'C<j_:S2tUlZK'5Z*TJ-[
%F__)3U[DRFg)^i06^*_9IA.EY&M(/(D.$'PkB1RL$W]!g4LV]T]C6+B1X0bV[9n]a&eD'i;boRD^K8PHTR2$L,EKDWXs3&#BY$a>
%#9CTSjur!K?cD&R0tL-2_g>%8I:(kPWbb/[+BY!l_.6$/:m#gPK8qK^#SQ."W*[Yg,3#-4qh?7q4#<G*+@ZqfN_BNnHO@FC<N`O-
%Z*Q5.,'-@F1u+J71OfU`GeR1JQ!T<d&4@!:H7mCM"id=[9+-C?)$S>)fD<p="`+j;Ug"G.+Ca?N@DG!GPPOep<=QV0mXMTD-pTI=
%*piSrl9cjT!"6'pN0jb<_U]j^aXbK(@JrL)G7GF^_K6:+S%sVoro6h94MgAnaeYh%$GGU.1U<G)7O:0.lr<bI@IB?e#Jd<q6.&:P
%TsT.l=]qKG_V&%2,'&K9:@rKEVOfK!isCHK))AWU!!")E\sQ+G\Z5P9@;nSK/<f\\;O[C%"<2?/,>$![b%H94%9!Se!@d+Ua=6/b
%,fO4f6&0i:pe9<S4[sg3+e=Vd._ueIYk1i3"RK[W_jI.+%$,4_[\Kc,!83.H=o5]DNY._WCR$,lRR7f1/`7K,I,I/K\n$lG]GhPT
%"G*LhUDfGT^TN^PI>>(bM3CY#Oi-o>,_"Fp0(ESo*S1I;$3R"]_$)O\_-hd8B5$ikKSME&&ZVcN,f_Zt=iR=bS>Y#"c<8:r4<[FT
%Z+dB"Tn\!<UPG#1"e:G?7SDh6YWEK?+=7eW2M_e[6X7P(RCGG]Vi@=5H&4uPUdn*"5<Ug:*>h@Y\U0dNA'BYJmc9d6Zc)d)3%fjU
%;t^>hV5.n?FhETjN&Bm%ARpf,G)e`EoMgN(4nQi?VF\@^`[[i:nrAN*Y/'F\./p:S#;VohT$PISe,81<G?E<RM+!61@n;R1GMpLV
%#'][<Big>oO/bdo^4`cHoe^XT"(KJQPRA!37s1rhjo_Jh-cQ'EMAuoMMGs<O7Y.AGmd9.C\ti!hd#;QY_Zbe$)$8CI=R'V`'^\q_
%Pu0^_qI[:_B.OO^6fVXRUBC.SiG__s&!mJEHW.H!LCqC4iIm]HXi/T%eG"ilE_U_];So2d[TK=-V"EUc\9-pHmE4[3pSLT3GE0>f
%L`j\W+OmU<M?7ZoJRM[@H?6@TFJZoCroZ3HY_#mnE)4pi^@a&6#[q_HSqi$)aYi?Y]StFf`-Y#-;ET@TUe#B%o%h!'+se+>+>]EB
%`omYti2I(iQ,0TnnUAfuO7NkIjZ'p@`j6""Su`f:Mf)cj1`ebr#btj82KP1AnFCXeqT5Q^Ggi`lldXKAY]W6[GLII#)N2)/gG*(W
%a,]%7J+uV^(2dgbXG488r^,R@GJtX9<mWNZ`Lg,te^'+;kuh[^SO>Wa1.u6TXSL>f(B(E3HP/HP7Iu;*-ZI"Z9SC)?VQak8&Wm<4
%=8_#A;!"^8A/t:k,][g"IiaW^i#IQH(`drI>bUELFPJ0t]Pn_2'%tQ*9]I/6?)U=](F*("Ym\=?j6g7&T76C/ATCR]cEPHc5fXDs
%\C3;\iZ]ChH_-RcIp&L=>rAlEKJ:l:f/8660WqHj%0`P;C,Y@a0l]a.h6JWr1Fq]bdl:,8H;7&54nrB9b/T(abHWWq>4"VpW%4[&
%L1d3;C<G@qA[gaEbb@f_\@NcH[b`r[7CG[s?+82JZI`QV[?\H\I90H!_YDfbVW6CE%`U$Z*Ru@`"?N?V#X!7i)Ac"C3&)K`%@s):
%\S#WCI(M22hpHAoDAQt?aq5;=e5KOY7.iigGKbRMD'!6lGj@V"js_Pn#Q@c"',;$a_]hG#W68Y20u+N"Sq0tLJHb-2SG)OlDP%ea
%o.*[%';5tYj+2Ik.`Y%D".@!pkk%$J$#s:TTDi8i9+Di0R>Vs1M_NJih-bo$:jYX:5Q2o8JE%fj9[cr;kEIU-_<n+,H%U]HE,^Lc
%BfPCQ*i[Hn<kteDqp,]USa(';+gRs1g,,NqL&5WLAUKn`bGX8o8%@CPl46%Z[:qHuDo@44rp9n[&5dHV:6;ud<p"?226<o%>oj;g
%n@Ig%m*;9adWQ<HD2MAoqC&=:(C^-+eV7\O6!1dd=/#auc"lX$c7u*Se5;V3Br77]#kfBb]D(PSEL.\WXE2OtY;F#]'SZ;:WVe5C
%.[6Td!UT'NfXaDKj5BK#:A$QKCmVa/")h8M.@TgY+p*lHl325Gk/&t`-VH3Pf$TlmX?^Epi-,EOPSc:n<.-"U_P(i.U@'"f(n%Pf
%@m89m$'$4j:oRVn)$AkAZ0T1=ljd;Q2!^]9W1frY`KT"uI#u%@KaQI^'I"fe@l@QZ18[:5_iC%oA7T&XW,_pV9[EmR(/6:[SBn:V
%PI#9f!t:%[BOM5fJ"BYsaQ`k;6a!H3*5/ffk#,&6+p98pgZXMu;M/%!J_i_BHlTjrKZjPa2]oqf?5Ztk0'0+Ard*4looNrH;G@[m
%nQN!^*>MG%&W+X<_bMqT&TCsP?@(^TE?eQ2Y[oqHC;.9+]@Sr`4Glk/L,03bHJR)ie%4kb%1EnTekI1#6"*gTZ)Nl.(JJrj],J'3
%^9"r8,.Oef3eCmG/>1eKHIKa";o8o#n>X)^^kXD,`+*8OUUJ?/RIHlMAs4?LXM"t1HU;E_?Oo2DS#gs98U6GUpOq^@VEV#XcF<]B
%bN.1sAWAg$7]'GH(-e?[Wm=gDF`c#,f:GD*6WAgXrH.s[FqfLkT+4o>QSn9[a\UMrKFAlIAp\ghl/AUc\)F6#(_UFKQg&r[hg,^'
%$;G9Q:Zj7f.Qequbtgj2h&4CQq!%QpdK2"L3jr$<\%q(&A%+iKR%',LDhI:m_bG>f9Rd=$?0`LT-^2-ubY,tt7Re2:Qp!RF<sK5K
%;k0EnX1Ef)9;h8>_iJ%GW5P7WLSS6;Xq5Z.WgD!eBoJg)::_;]5.VUH(EHjQ>PiBeZ/JBO_sF*b[X+,e;(YB%U>s99U$B(]MiP+\
%A`'MKY!Ilp/nu=`+'i(k<KlZZ+'i)A-oZ#!U5of^1i8e(gRFCeQt,dRm%mooFjolGOu1PAFDP6g$"l1;qc\ZFD7Jh@G;t&M\`n2P
%nXpmYIpF=`S$%_eZ6qZePFJ_k'f!0K'r>e/3)V*T*W1!g6@'gDGE\Z%I7R;;R1_IUkm1@q&^XCqg4n7@-*"#*N]P-oZ!k!h?\#IH
%8O"4=P0+2'*EstD8,hSJ@okh3nD^D,8**q(.7ZlKf2*(9=nU6`s&:..*H!p!S7:VS/8dM+_ii5D82hQoPaqH=DE>VTq_PkKo[-Tm
%M1.LJYiX5%iMRo"CK>)Hq<;uflTCl%pZM@)qroMJgN.P+X&eNS$9t]_jJVSs%.`8`VYTK=dpVaqbm0%"l/i(;rH.X.1qAEi>M)K#
%<L(R/6p0L-pCtWOUQb^Cd(o(<s+"5#2:]FWb&u`pS_OJ!_(iKUjs*?DFONNd0"Ul"RTst+!B7RQ-sN,MVT"k.mKOYAa/Kki3pH(W
%Q&#eTOs#;_PEV#tQ&l:Cd;c:N<GD6lIVofqYVFJYE7",:X,%L3d*4p53U#mjeBc'!-_fpcC'4L-%Q_bQ/DR(cKC/u7h9l5_S\*LU
%n)9htC,tjY)pu<>Z8'Y!*aO*TGhOE'<m<_HK.5ub$FP3CAor(2c##TGYMQg(JPXS%Bt/n9DV"O+2`GOLlC49.rQ-uWDt(k-2p5\%
%btTt*qrVM\55F>QD1D-$c.]o-k%8JfHulVJS:#CakT%=I8]I37DO/6'R_(AM57c(FPI3\sr\r/nYH3H.5!64n%3^,V1Da13Zb7;l
%:LM?@`h'_f9n3#aS*&5/7HeVR\7]\^6,PQm.u9*p\E;p"Un5,.$)qQT?:)Oa2fHjtQfI`d`MhX5qW3Mn\L<hP:5#>GU(+jW@3</9
%oB;MSR@:g8_!%->-%`2PnMkgUY.Gn6/t;%4%+0%:?+6Wub2D5H%p,s)m-#?^'9oL930os/4+$&p[j+[WHKEdW';K:eUf[!@FFH0X
%S?E1@H\U;7Q<Ra>b;HA8Th_,IlBWZ<J;\5eb;Bt?>eF^:>HVD-*Kf?alB[pEaXt!<FN_q41q28qpuIa1qe9rYja5K/GOO!FW/m^u
%'"Iom<6*d7$`n5+@U<q<k*Bd">,6.aEm(k..mN*6b7Sg3l_i)][p[**\%m+//M@gIgsYh6b:UD\>Aj6NFj&V<l46%Z@"mMcRG;fj
%XDYS'_<S2c3-sZl[JctiH0#qaiFgPHTi\C*YRaquD_3Y&@DaV)_!71h?E%8AV=if4S,90[\`InN.<k6uJ(dXXMV+/-!Z=bDG)RUY
%dkk]Yau(#X;lAoeZmue_,.c>&b[9O:1sX45EbrmVD.>QeBE3p!l;mL8Puj:u5"<fX'`1"m(8"jD_h2Rte>CG;fAItg`F`^G3F]-n
%m"C_#UV_h"L2un-W?%%3V9(+*IZZ7/puL*+`*D`uPe/`K5GD(OluI"8b#+9c:Q&L:Y8lMu53O-:.jp_&l'kb7=R?Jah/[=h7>htk
%*+:Ld6$:?_MJDu#[iD*sb?UH>NcT3_'m]An&[#b#G=J`MgTNX'0i#KRr*1&ZnB4C5ktpKW*-9Q1lErG\*HT[+Ub4e+jmEQA:X(V<
%D[6#rSWh<pnI,Fnd7U:`0djS8dM:7d[qtEiQs2KBE6QQg>Q&Tcc;q^8ZEo<nNa'uu/Z\d1F;&9pJ7>'9DK[*r+ba:kSm6Ne<O57/
%ZcueZc5jH;&RZ,1G+5jc<*=L/Mtb0QAY.cIQ@$P-jHJJshuEWkT09pbo:'qW?8USYs68&UhYbR/=._^jH2!63q88h2rJrnH='p?+
%eb/(^gL&e9nF"Pn^A@EVS(jS7puQu*_2nF'rq::1rZD0D?i81K!k`r:0)~>
%AI9_PrivateDataEnd
